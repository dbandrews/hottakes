### Article Summary: 

Letter from the Editor: Pinkbike’s Next Chapter with Outside - Pinkbike: This is the first photo ever uploaded to Pinkbike. The image of Rob Stevens dropping off a bank in Calgary, Alberta is the perfect representation of what this site has always stood for: riding bikes with your friends and sharing that with the community.Pinkbike founder Radek Burkat had spent his twenties playing other sports, but it wasn’t until he connected with mountain biking that he found his passion. He knew he’d found a sport he really loved because he was still eager to do it solo, but he did want to share it. He cringes now at how cheesy it sounds, but he started Pinkbike in 1998 to help others connect with mountain biking in the same way he had.Shaped by those glory days of early freeride, Pinkbike was built by a crew who wanted to share the ride with their friends through photos, videos, and stories—long before social media was a twinkle in Myspace Tom’s bionic eye.A new chapter with Outside.We’re excited to announce today that Pinkbike has been acquired by Outside, the world’s leading active lifestyle platform. Established in 1977, Outside Magazine was founded by Lawrence Burke, and the publication broke ground on the entire outdoor media industry. Its history is filled with iconic titles, with some of the world’s most talented writers and authentic storytelling. The new Outside, founded in 2019 by Robin Thurston, acquired Outside Magazine and OutsideTV in February 2021. Headquartered in Boulder, CO, Outside has offices across the US, Canada, in Europe, and now Australia. They own Outside Magazine, OutsideTV, Peloton Magazine, Bicycle Retailer, Beta MTB, GaiaGPS, Roll Massif, BikeReg, Ski Magazine, Warren Miller Films, and many more titles and services. Robin’s vision of bringing all these brands together into one organization is

### Comment:

"While our long term business model will evolve, a significant portion of our content will remain free."Welp, it's been a good run. Thanks for everything Pinkbike. I fear change and can only assume this is the end as we know it.

### Article Summary: 

British Councillor Objects to Local Bike Park Due to Fears of Child Molesters & 'Aggressive Males' - Pinkbike: A British Councillor has objected to a local bike park due to fears over aggressive males and child molesters, getsurrey.co.uk reports.The comments were made at a scrutiny committee of the Mole Valley District Council that was held to discuss turning the BMX track at Ranmore Common into a bike park that would be operated by Trail Academy.The BMX track has apparently been plagued by quad bikes during lockdown and become overgrown as the council struggled to afford its upkeep. Trail Academy is hoping to maintain an improved, fully staffed bike park and offer a range of all-ability trails, which it hoped would open in August this year. The proposal has caused controversy in the local area with protestors worried about nesting nightingales and the fact that the tracks will no longer be free to access. The site is currently free but Trail Academy will start charging for entry with both annual and daily prices available. Mole Valley District Council held a scrutiny meeting about the proposed bike park to allow concerned local residents to have their concerns heard. However, the most negative comments came instead from a councillor. Professor Patricia Wiltshire, an independent councillor for Ashtead Common, said: “If you've got adults there, and there will be a lot of adult males, and you have children, we know the problem of checking people. They have to be checked because of dangers to children. All that sort of thing has to be considered because it could be really quite serious, and you never know it could end up children being molested, goodness knows what. I’m not saying it would but it’s that sort of possibility."“I don’t think it’s for all ages and genders,

### Comment:

Oh come on.... It's not like they're building a Church.

### Article Summary: 

An Update From Aggy: "On Any Other Day I Wouldn't Have Dropped In..." - Pinkbike: Graham Agassiz has been chasing the top step at Red Bull Rampage for years. The steep and loose Utah desert terrain suits Aggy’s big mountain style, and in addition to the FEST series jams, Rampage has been a big focus for him for the past few seasons.In 2013 Aggy qualified in 1st place and nearly stomped a finals run that would have surely been a contender for first. In 2014 he repeated the qualifying performance, yet again solidifying his position as one of the riders to watch at this event, but a knee injury during practice kept him from the finals. In 2015 he was the top qualifier for the third year in a row and strung together a run that landed him in 3rd place in the finals. Close, but not quite. And so the chase continued.Aggy's run began with this massive chute.Rampage, as you might gather, is a fickle event. Every athlete who is invited to Rampage is riding a fine line between the run of their life and waiting until next year. After a week of hard labor prepping their line, every single element of a rider’s run is calculated, and those who stand on the top of the box link together a clean top to bottom run with style and amplitude. On those last two, Aggy’s got it.With his performance in 2015, Aggy would have been pre-qualified for this year’s event, skipping the extra competition runs that he’d been forced to do the past three years. As it turns out, Red Bull changed the structure, and the rider list was invite-only. Of course, Aggy was on that list.Arguably the most stylish rider at Rampage, and a fan favorite because of it.Last

### Comment:

What if Rampage wasn't a live event, and was divided into two days, one day for each run.  They could start early to avoid wind, and have much longer wind delay windows.  Maybe it would even make sense to have the riders be allowed to work on their lines for a few hours or something after the first day, to fix bomb holes or other wear.  Then the second day would have second runs for those who wanted to take them.  At the end of the day, I don't want people to drop in on their lines when the weather is bad just because the event is broadcast live.

