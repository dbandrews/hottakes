### Article Summary: 

Race Recap: BC Enduro Series #3 Hits Kelowna - Pinkbike: Another fantastic weekend on the trails. Saturday June 28th bought round number 3 for the BC Enduro Series presented by Norco Bikes that was located in the Myra Bellevue Provincial Park in Kelowna. The Kelowna Enduro was supported by Sovereign Cycle and Kelowna Cycle with special mention to also TBS Bike Parts. The local support for this race was truly impressive. We had bike shop owners of Sovereign Cycle (Russ and Rich) out with us all day Monday clearing trails with the overgrowth of branches and them also closing the store for race day to be there to support and help out. TBS Bike Parts were invested from the very beginning and helping pull through with some last minute changes to make the day run as smooth as it did. They were also out helping clear trails, they had a full volunteer crew out there, put on the BBQ for the riders after the race, organized the free kegs with Worthy Brewing and got their staff and volunteers on board to take all the photos and videos. Kelowna Cycle provided the sweepers for the day and did the full course clean up. Thanks to all your support!There were some tweaks and changes made to the course leading into it and the consensus was that most riders were after a longer and more challenging day, which is so great to see. Evan Guthrie smashed the day both by overall time and on the timed descents and then headed out for a road ride after the fact to get in some more training. But don't be fooled, this wasn't an xc racer's course, Evan just showed the strength he has in both xc and Enduro. The course was challenging, technical, rocky, and

### Top Comment:

This is the best race series. I felt great in practice but double flatted 2 minutes into the race. Had to walk out.

### Article Summary: 

RAAW Announces Privateer Program Riders for 2023 - Pinkbike: Press Release: RAAW Mountain BikesWalking into a World Cup venue, you’re often parked about eighteen miles away, as the best seats in the house are reserved for the big-budget teams and their grand setups. The pro pits are certainly wonderful to wander around and catch a glimpse of your favourite rider or bike that you’ve seen a million times on screen but never in real life.But reversing a bit on that walk into all the excitement, you’ll have likely glossed past the more modest setups, with smaller tents and budgets. These guys have some degree of sponsorship, be it in funds or products, that helps them take some of the stress out of racing and allows the riders to focus more on the job at hand - the riding.But even further back, you might have completely missed the guys with no tent, doing it out the back of their vans, in the very same car park that you parked in. These guys are doing it all themselves. They’re the rider, mechanic, coach, physiotherapist, cook, driver and psychologist all rolled into one. And they’re doing this all on a shoestring budget that they saved up during the off-season, while they were also balancing training and maybe even studying.Coen Skrypnek and Gabriel Neron riding the Yalla! on Squamish trails.That evolution from back-of-a-van privateer to big team professional as you walk into the venue echoes the natural flow of riders feeding up through the ranks to, hopefully, one day turn riding bikes into their profession.But it’s a constant upstream battle to get there, with many things fighting against you. It’s expensive for one. Just getting to a World Cup costs these riders an enormous amount of money and time. Accruing the points to be

### Top Comment:

Love seeing a local 603 rider on this list!

### Article Summary: 

Luke Fulton's Promo Video for '08 - Pinkbike: Luke Fulton is one of the most energetic people I've ever met. Any time Luke's around it's gonna be interesting. Fuelled by candy, this kid tears up the jumps, the mountains, you name it. Check out his promo video for the 2008 season. Expect to see much more from him in the near future. Watch the 5 videos inside!Check out the video!Luke doing an airplaneAaron: Introduce yourself for us. How old are you, where are you from? All that stuff.Luke: Ok, well my name is Luke Fulton, and I’m 17 years old, I’m from Victoria, B.C. I have been riding for 4 years and am in my last year of high school. Pretty stoked on that. Any I forgot?Aaron: yeah, boxers or briefs?Luke: boxxersAaron: So, what are your goals for the 2008 season? Any comps? tricks? or other stuff you wanna do/learn?Luke: Uhhm in 2008 I want to compete as much as possible. A podium would be awesome in any comp, but I would just like to do well and not **** the bed. I would love to learn more threesixty variations, get 3’s off drops dialled, and become really consistent with stuff. I really want to learn how to ride mountains better so I gotta not want to go dirt jumping every day. Now I have a truck, and listen so I have no excuse not to ride mountains.Aaron: What do you think of Sylvester Stallones new movie, "Rambo"?Luke: The teaser was worse than the Kranked 4 Brett Tippie fight scene.Aaron: Agreed. What is your favourite candy?Luke: Uhhm hard question. Right now i would have to say I’m liking the sour wine gums a lot.Luke stretching his wingsAaron: Where's your favourite place to ride and why? Locally or otherwise.Luke: Locally, it

### Top Comment:

Rad videos and killer riding. Like I said earlier, I'd way rather see good solid riders that I don't know about then another established pro's section from an NWD vid. Hopefully we see more of this kind of thing!
Once again, great filming and editing Larock!

### Article Summary: 

Video: Friday Fails #88 - Pinkbike: We say Friday, you say fails.

### Top Comment:

Some say the rider from clip 1 is still flying to this day

### Article Summary: 

Burgtec Announces Enduro MK3 Stem - Pinkbike: PRESS RELEASE: BurgtecEnduro has evolved ever closer to downhill. The Enduro MK3 Stem is all you need for hitting the trails with wingsuit type accuracy. This Stem was born out of rider’s demands for precision and for those moments when you have to be inch-perfect. Taking design elements from our World Cup winning Direct Mount MK3 Stem and splicing these with our critically acclaimed Enduro MK2 Stem. We developed the Stem with Pro’s and Bro’s alike. It was obvious we all live for the same challenge of pushing our own limits. As riders, we want a Stem that inspires confidence to change lines through the middle of a rock garden like it’s no big deal or slap the inside of a turn and translate all your weight to front-wheel traction, ear to ear grins and saying to your mates at the bottom of a trail, “Did you see that?”. From the start of the design process, it became clear that we wanted extra rigidity. To yield this, we would need to make the Stem using a forging process - a new thing for us - but this allowed us to achieve a more intricate shape than machining alone, it involves applying a huge amount of force to redirect the grain flow of the material to give superior strength, fatigue and impact resistance.Another area where we felt we could make a significant improvement in rigidity was by increasing the clamping surface area on the steerer tube. We’ve vastly increased this to give a stout, rock-solid feel and as close to the MK3 Direct Mount Stem as we could. Everything is held securely by stainless steel bolts to ensure there is no rust even in the grimmest weather. Like every Burgtec product, it’s fully CNC

### Top Comment:

Finally, a company Making aftermarket stems.

### Article Summary: 

Qualifying Photo Report: Strait Acres Slalom Invitational 2021 - Pinkbike: ResultsPro Men1st. Tommy Zula: 55:682nd. Mitch Ropelato: 56.133rd. Joey Foresta: 56.144th. Dante Silva: 56.295th. Kyle Strait: 56.36Pro Women1st. Kialani Hines: 1:02:882nd. Harriet Burbidge-Smith: 1:03:823rd. Jordy Scott: 1:04:354th. Teagan Heap: 1:06:965th. Dani Beecroft (POL):1:07:78

### Top Comment:

Dual slalom really is a race type that needs to come back. Short, sweet, spectator friendly.

### Article Summary: 

Replay: Crankworx L2A DH - Pinkbike: Sunday, July 1214:00 CET Europe13:00 BST London08:00 EST New York05:00 PST Vancouver / LA22:00 AEST Sydney Australia MENTIONS: @officialcrankworx

### Top Comment:

....what a waste of time..... worst coverage since the chess championships 1979.... sorry, i know the stream is free but this is just painful to watch ! can't even be bothered to stay up for the last 30 minutes...

### Article Summary: 

Únic Unveils Custom Kit Range for Younger Riders - Pinkbike: PRESS RELEASE: ÚnicBased in Andorra, we get to see a lot of young riders ripping up the bike park, and seeing just how hard they shred we knew it wasn't going to be long before we offered a dedicated Junior range of custom clothing.This isn't your usual custom riding wear though. Instead of a few basic options and limited colour choices, Únic's Junior range boasts a full selection of colours and designs created by the same team behind our adult range. Our junior range is every bit as technical, comfortable, and feature-packed as our adult riding kit, and best of all it's fully customisable so young riders can design the kit they've always wanted.Using our online editor, little riders can design a kit that looks like yours, their riding hero, or a favourite character. With tons of race-inspired designs to choose from and a full palette of colours to pick the only limitation is imagination.Because quality riding kit isn't just about looking good, we've also taken the time to tailor the fit for the perfect balance of comfort and mobility.Únic Junior Kit Features:Designed for comfort and mobility.Cool, lightweight and fast drying.Ratchet waist adjustment.Zipped pockets.Fully customisable.Made to order in the EU.For riders 120cm+.Price: 96.75 euro per kit.The Únic Junior range brings the fun of customisation to little riders, with features that mum and dad will appreciate.For more details visit www.unicwear.com

### Top Comment:

Cause that's what every kid wants, a shirt loudly declaring them a Únic

### Article Summary: 

First Look: Bliss Protection - iceBike* 2015 - Pinkbike: Bliss are a relativity new brand when it comes to protection, but have a wide range of product offerings. Fresh for the iceBike* show was the latest incarnation of the ARG knee protector, the Vertical LD vest and Minimalist gloves. The ARG Vertical Extended knee pad. Bliss said many team riders were asking for a taller pad to help avoid slippage and more protection above the knee. I think the real reason is for the inevitable 'thigh gap' when you're lanky and your shorts are too short. The ARG offers the new, level 2 higher protection CE certification and comes in at £84.90.So enduro. The Vertical LD vest includes a double pocket on each side, to house these (included) 250ml flexible water bottles and gels or bars. Bliss thinks that most pro riders at the EWS this year will be using some kind of utility vest, backpacks are sooo 2014.Until now Bliss have only produced protection, but have just launched their first glove. The Minimalist felt great on the initial fit test, with no excessive material. They're also touch-screen compatible for the mid-ride Facebooker's out there, you know who you are. £24.90MENTIONS: @blissprotection

### Top Comment:

are those packs blue and black or gold and white?

### Article Summary: 

Learning to Ride Part 3: Mileage Matters - Pinkbike: After surviving my first two downhill lessons in the Steamboat Bike Park, I thought it was time to meet some like-minded ladies and ride in a more social environment. The Bike Park hosts weekly evening clinics for men and women, Gravity Girls on Thursdays and Bros, Bikes & Berms on Fridays. And best of all, the clinics end with a free drink.I’d wanted to try Gravity Girls for a while, but I also wanted to make sure I had some basic downhill skills under my belt before I got left in the dust. I’d taken a women’s beginner mountain biking class through Colorado Mountain College’s Alpine Campus a few years back, and although I learned a ton, most of the ladies in the group were far from beginners, and I felt a bit out of my element.I was worried the same thing might happen again.My Gravity Girls experience turned out to be much different than I expected. The bad news: I was the only person who signed up. The good news: I got a private lesson for $20.My instructor, D.J. Nudy, leads the women’s clinics and says attendance varies, but he tries to have no more than four people per instructor, and the group typically splits into two based on skill level. That way, the women in the clinic can ride at their ability levels and get tips while riding trails on which they feel comfortable.I was bummed I wouldn’t be riding with ladies — so far I’d only ridden with male Bike Park instructors — but I knew the one-on-one time would be even better to help me progress. We decided to ride the green Tenderfoot trail and work on some of those troubling turns.I was riding a Specialized Status

### Top Comment:

I thought it was funny how no one commented on this.

