### Article Summary: 

Race Recap: BC Enduro Series #3 Hits Kelowna - Pinkbike: Another fantastic weekend on the trails. Saturday June 28th bought round number 3 for the BC Enduro Series presented by Norco Bikes that was located in the Myra Bellevue Provincial Park in Kelowna. The Kelowna Enduro was supported by Sovereign Cycle and Kelowna Cycle with special mention to also TBS Bike Parts. The local support for this race was truly impressive. We had bike shop owners of Sovereign Cycle (Russ and Rich) out with us all day Monday clearing trails with the overgrowth of branches and them also closing the store for race day to be there to support and help out. TBS Bike Parts were invested from the very beginning and helping pull through with some last minute changes to make the day run as smooth as it did. They were also out helping clear trails, they had a full volunteer crew out there, put on the BBQ for the riders after the race, organized the free kegs with Worthy Brewing and got their staff and volunteers on board to take all the photos and videos. Kelowna Cycle provided the sweepers for the day and did the full course clean up. Thanks to all your support!There were some tweaks and changes made to the course leading into it and the consensus was that most riders were after a longer and more challenging day, which is so great to see. Evan Guthrie smashed the day both by overall time and on the timed descents and then headed out for a road ride after the fact to get in some more training. But don't be fooled, this wasn't an xc racer's course, Evan just showed the strength he has in both xc and Enduro. The course was challenging, technical, rocky, and

### Top Comment:

This is the best race series. I felt great in practice but double flatted 2 minutes into the race. Had to walk out.

### Article Summary: 

RAAW Announces Privateer Program Riders for 2023 - Pinkbike: Press Release: RAAW Mountain BikesWalking into a World Cup venue, you’re often parked about eighteen miles away, as the best seats in the house are reserved for the big-budget teams and their grand setups. The pro pits are certainly wonderful to wander around and catch a glimpse of your favourite rider or bike that you’ve seen a million times on screen but never in real life.But reversing a bit on that walk into all the excitement, you’ll have likely glossed past the more modest setups, with smaller tents and budgets. These guys have some degree of sponsorship, be it in funds or products, that helps them take some of the stress out of racing and allows the riders to focus more on the job at hand - the riding.But even further back, you might have completely missed the guys with no tent, doing it out the back of their vans, in the very same car park that you parked in. These guys are doing it all themselves. They’re the rider, mechanic, coach, physiotherapist, cook, driver and psychologist all rolled into one. And they’re doing this all on a shoestring budget that they saved up during the off-season, while they were also balancing training and maybe even studying.Coen Skrypnek and Gabriel Neron riding the Yalla! on Squamish trails.That evolution from back-of-a-van privateer to big team professional as you walk into the venue echoes the natural flow of riders feeding up through the ranks to, hopefully, one day turn riding bikes into their profession.But it’s a constant upstream battle to get there, with many things fighting against you. It’s expensive for one. Just getting to a World Cup costs these riders an enormous amount of money and time. Accruing the points to be

### Top Comment:

Love seeing a local 603 rider on this list!

### Article Summary: 

Luke Fulton's Promo Video for '08 - Pinkbike: Luke Fulton is one of the most energetic people I've ever met. Any time Luke's around it's gonna be interesting. Fuelled by candy, this kid tears up the jumps, the mountains, you name it. Check out his promo video for the 2008 season. Expect to see much more from him in the near future. Watch the 5 videos inside!Check out the video!Luke doing an airplaneAaron: Introduce yourself for us. How old are you, where are you from? All that stuff.Luke: Ok, well my name is Luke Fulton, and I’m 17 years old, I’m from Victoria, B.C. I have been riding for 4 years and am in my last year of high school. Pretty stoked on that. Any I forgot?Aaron: yeah, boxers or briefs?Luke: boxxersAaron: So, what are your goals for the 2008 season? Any comps? tricks? or other stuff you wanna do/learn?Luke: Uhhm in 2008 I want to compete as much as possible. A podium would be awesome in any comp, but I would just like to do well and not **** the bed. I would love to learn more threesixty variations, get 3’s off drops dialled, and become really consistent with stuff. I really want to learn how to ride mountains better so I gotta not want to go dirt jumping every day. Now I have a truck, and listen so I have no excuse not to ride mountains.Aaron: What do you think of Sylvester Stallones new movie, "Rambo"?Luke: The teaser was worse than the Kranked 4 Brett Tippie fight scene.Aaron: Agreed. What is your favourite candy?Luke: Uhhm hard question. Right now i would have to say I’m liking the sour wine gums a lot.Luke stretching his wingsAaron: Where's your favourite place to ride and why? Locally or otherwise.Luke: Locally, it

### Top Comment:

Rad videos and killer riding. Like I said earlier, I'd way rather see good solid riders that I don't know about then another established pro's section from an NWD vid. Hopefully we see more of this kind of thing!
Once again, great filming and editing Larock!

### Article Summary: 

Video: Friday Fails #88 - Pinkbike: We say Friday, you say fails.

### Top Comment:

Some say the rider from clip 1 is still flying to this day

### Article Summary: 

Burgtec Announces Enduro MK3 Stem - Pinkbike: PRESS RELEASE: BurgtecEnduro has evolved ever closer to downhill. The Enduro MK3 Stem is all you need for hitting the trails with wingsuit type accuracy. This Stem was born out of rider’s demands for precision and for those moments when you have to be inch-perfect. Taking design elements from our World Cup winning Direct Mount MK3 Stem and splicing these with our critically acclaimed Enduro MK2 Stem. We developed the Stem with Pro’s and Bro’s alike. It was obvious we all live for the same challenge of pushing our own limits. As riders, we want a Stem that inspires confidence to change lines through the middle of a rock garden like it’s no big deal or slap the inside of a turn and translate all your weight to front-wheel traction, ear to ear grins and saying to your mates at the bottom of a trail, “Did you see that?”. From the start of the design process, it became clear that we wanted extra rigidity. To yield this, we would need to make the Stem using a forging process - a new thing for us - but this allowed us to achieve a more intricate shape than machining alone, it involves applying a huge amount of force to redirect the grain flow of the material to give superior strength, fatigue and impact resistance.Another area where we felt we could make a significant improvement in rigidity was by increasing the clamping surface area on the steerer tube. We’ve vastly increased this to give a stout, rock-solid feel and as close to the MK3 Direct Mount Stem as we could. Everything is held securely by stainless steel bolts to ensure there is no rust even in the grimmest weather. Like every Burgtec product, it’s fully CNC

### Top Comment:

Finally, a company Making aftermarket stems.

### Article Summary: 

Qualifying Photo Report: Strait Acres Slalom Invitational 2021 - Pinkbike: ResultsPro Men1st. Tommy Zula: 55:682nd. Mitch Ropelato: 56.133rd. Joey Foresta: 56.144th. Dante Silva: 56.295th. Kyle Strait: 56.36Pro Women1st. Kialani Hines: 1:02:882nd. Harriet Burbidge-Smith: 1:03:823rd. Jordy Scott: 1:04:354th. Teagan Heap: 1:06:965th. Dani Beecroft (POL):1:07:78

### Top Comment:

Dual slalom really is a race type that needs to come back. Short, sweet, spectator friendly.

### Article Summary: 

Replay: Crankworx L2A DH - Pinkbike: Sunday, July 1214:00 CET Europe13:00 BST London08:00 EST New York05:00 PST Vancouver / LA22:00 AEST Sydney Australia MENTIONS: @officialcrankworx

### Top Comment:

....what a waste of time..... worst coverage since the chess championships 1979.... sorry, i know the stream is free but this is just painful to watch ! can't even be bothered to stay up for the last 30 minutes...

### Article Summary: 

Únic Unveils Custom Kit Range for Younger Riders - Pinkbike: PRESS RELEASE: ÚnicBased in Andorra, we get to see a lot of young riders ripping up the bike park, and seeing just how hard they shred we knew it wasn't going to be long before we offered a dedicated Junior range of custom clothing.This isn't your usual custom riding wear though. Instead of a few basic options and limited colour choices, Únic's Junior range boasts a full selection of colours and designs created by the same team behind our adult range. Our junior range is every bit as technical, comfortable, and feature-packed as our adult riding kit, and best of all it's fully customisable so young riders can design the kit they've always wanted.Using our online editor, little riders can design a kit that looks like yours, their riding hero, or a favourite character. With tons of race-inspired designs to choose from and a full palette of colours to pick the only limitation is imagination.Because quality riding kit isn't just about looking good, we've also taken the time to tailor the fit for the perfect balance of comfort and mobility.Únic Junior Kit Features:Designed for comfort and mobility.Cool, lightweight and fast drying.Ratchet waist adjustment.Zipped pockets.Fully customisable.Made to order in the EU.For riders 120cm+.Price: 96.75 euro per kit.The Únic Junior range brings the fun of customisation to little riders, with features that mum and dad will appreciate.For more details visit www.unicwear.com

### Top Comment:

Cause that's what every kid wants, a shirt loudly declaring them a Únic

### Article Summary: 

First Look: Bliss Protection - iceBike* 2015 - Pinkbike: Bliss are a relativity new brand when it comes to protection, but have a wide range of product offerings. Fresh for the iceBike* show was the latest incarnation of the ARG knee protector, the Vertical LD vest and Minimalist gloves. The ARG Vertical Extended knee pad. Bliss said many team riders were asking for a taller pad to help avoid slippage and more protection above the knee. I think the real reason is for the inevitable 'thigh gap' when you're lanky and your shorts are too short. The ARG offers the new, level 2 higher protection CE certification and comes in at £84.90.So enduro. The Vertical LD vest includes a double pocket on each side, to house these (included) 250ml flexible water bottles and gels or bars. Bliss thinks that most pro riders at the EWS this year will be using some kind of utility vest, backpacks are sooo 2014.Until now Bliss have only produced protection, but have just launched their first glove. The Minimalist felt great on the initial fit test, with no excessive material. They're also touch-screen compatible for the mid-ride Facebooker's out there, you know who you are. £24.90MENTIONS: @blissprotection

### Top Comment:

are those packs blue and black or gold and white?

### Article Summary: 

Learning to Ride Part 3: Mileage Matters - Pinkbike: After surviving my first two downhill lessons in the Steamboat Bike Park, I thought it was time to meet some like-minded ladies and ride in a more social environment. The Bike Park hosts weekly evening clinics for men and women, Gravity Girls on Thursdays and Bros, Bikes & Berms on Fridays. And best of all, the clinics end with a free drink.I’d wanted to try Gravity Girls for a while, but I also wanted to make sure I had some basic downhill skills under my belt before I got left in the dust. I’d taken a women’s beginner mountain biking class through Colorado Mountain College’s Alpine Campus a few years back, and although I learned a ton, most of the ladies in the group were far from beginners, and I felt a bit out of my element.I was worried the same thing might happen again.My Gravity Girls experience turned out to be much different than I expected. The bad news: I was the only person who signed up. The good news: I got a private lesson for $20.My instructor, D.J. Nudy, leads the women’s clinics and says attendance varies, but he tries to have no more than four people per instructor, and the group typically splits into two based on skill level. That way, the women in the clinic can ride at their ability levels and get tips while riding trails on which they feel comfortable.I was bummed I wouldn’t be riding with ladies — so far I’d only ridden with male Bike Park instructors — but I knew the one-on-one time would be even better to help me progress. We decided to ride the green Tenderfoot trail and work on some of those troubling turns.I was riding a Specialized Status

### Top Comment:

I thought it was funny how no one commented on this.

### Article Summary: 

Bontrager Rolls Out New Shoes, Tires and Helmet - Crankworx Whistler 2017 - Pinkbike: Bontrager has rolled up to Crankworx toting a hefty bundle of new product including several new tires, their first set of flat pedal shoes and a new helmet. Let's start with the rubber. Bontrager will soon offer their SE4 and XR4 Team Issue tubeless-ready tire in both 27.5 and 29x2.6, 27.5x2.8 and 29x3.0 tires. The 3.0 tires are obviously aimed at backcountry riders and the 2.8-inch models are geared to the plus-size crowd. What about the 2.6-inch tires? How much demand is there for the plus-curious, 2.6-inch variety?"We’re seeing a definite increase in demand for 2.6," says Bontrager's hard goods manager, Alex Applegate. "Very much so. It’s one of those things that people can look at and go, ‘Well, I have a 2.4, I can see where you are going with this.' But 2.6 is still an early adopter kind of product, for sure. People who are trying them out on their current bike have to check their fork and chainstay clearances. But at the end of the day, we all want comfort, compliance and more traction. If you like all those things…why not? At least give it a try."The new Bontrager tires will be available soon.Bontrager's apparel line has been growing by leaps and bounds of late. Still, I have to admit to being surprised by this most recent addition: the Line Pro flat-pedal shoe. R-Dog (Ryan Howard) played a role in developing the shoe, which features reinforced eyelets, a sticky Vibram sole, a lace keeper and a thermowelded "gnar guard" toe cap. Is there a clipless pedal version as well? "Not yet," says Applegate. "It’s one thing at a time. We wanted to make sure we got this right before we jumped into that."Getting

### Top Comment:

No matter how many brands release shoes these days, do they grip as much as FiveTens? If not, I just don't see myself buying any of them, whether they're the latest Specialized, Ion, Bontrager, ...Sometimes I see the argument "they don't grip as much to allow you to reposition the foot", I'm sorry but that's just a "solution" to a non-existing problem (I'd call that marketing bs but ...). My FiveTens grip enough that even with half the foot on it, I'll easily finish my run, or long enough to find a safe spot to reposition. On the other hand, I would definitely hate my feet bouncing off the pedals because of a lack of grip...

### Article Summary: 

Results: Reaper Madness - Pinkbike: Open Men:Open Women:Dual Slalom:www.downhillmike.com

### Top Comment:

Mike Day, Graeme Pitts, Logan Bingelli, Kevin Aiello and others are all WC riders to us. We also had a nice field in both the Boys 11-12 and Boys 13-14 age categories. And thank agains Pinkbike for posting everything from World Cup events, Redbull Rampage, Bootleg races, Southridge races and every race in all sizes in between. Just awesome for the folks that can't make these events. Thanks again Tyler and Rachelle from Pinkbike.

### Article Summary: 

YT Officially Parts Ways With Aaron Gwin & Neko Mulally - Pinkbike: In a press release today, YT thanked Aaron Gwin and Neko Mulally for their time with the team and announced that they will be moving on in different directions.Thank you for three glorious years of World Cup Racing, historic firsts, epic victories and a lot of lessons learned. Demonstrating that YT can succeed on a global stage, proving doubters wrong and establishing the YT MOB on the circuit. Thank you for the good times Aaron & Neko! Now is the time to go back to the core and take the gained knowledge to our roots. Pass it on to the next generation, identify the next Young Talents and redefine the rules once again. Let the journey begin!—Markus Flossman, CEO YTWho is the future young talent and where will the two Americans end up next season? Rumors are circulating and we suspect we'll hear something fairly soon.

### Top Comment:

That video was pretty Intense.

### Article Summary: 

Overall Results: EWS 2015 - Ainsa - Pinkbike: OverallDay OnePrologueMENTIONS: @EnduroWorldSeries

### Top Comment:

Wtf am I looking at? And what is pinkbike's obsession with scribd...worst f*cking results page I've ever seen for any sport.

### Article Summary: 

Fernie Alpine Resort Bike Crew Update #4: Welcome Home - Pinkbike: Welcome HomeUsually being called a sandbagger is a bad thing. The town of Fernie, its surrounding communities of Hosmer, Sparwood and Elkford, in addition to the city of Calgary, home to the head office of Resorts of the Canadian Rockies, made international news last week after massive rain storms caused rivers to swell over their banks and displace thousands of families due to record breaking floods. After an already rainy week, the bike crew worked through over 130mm of precipitation in 24 hours Friday to ensure trails would be ready for preview weekend on June 22 and 23rd. Fortunately, our main focus during spring work this year has been drainage installation, repair, and grading on our flagship trails. After some fine tuning and minor clean up we were relieved to find that everything was riding great, albeit a little slick, and that water was flowing where it should be at the resort. Around noon on Friday, rivers in the Elk Valley crested their banks and the FAR Summer Operations Crew headed into the community to help sandbag homes. Many know that Fernie is home to Legendary Winter and Legendary Summer, but I challenge that the communities of the Elk Valley should now be known as Legendary Spirit. With many homes flooded, including those of several of our staff members, Elk Valley residents took turns manning sump pumps, shuttling equipment, and continuing to sandbag…all while taking time to come up to the Bike Park and enjoy a few laps over the weekend. It was great to see familiar smiling faces riding the Elk Chair as the sun came out on Sunday and it was truly one of our best preview weekends yet. Now on the eve of opening day, June

### Top Comment:

The FAR crew was awesome during the flooding. They lent me a large pump that they brought down from the hill. My sump pump couldn't keep up with the rising waters. I was able to give my pump to my neighbour. Lots of RCR trucks out and about helping with sandbagging. It was great to see. Unfortunately I wasn't able to get to the hill last weekend. I was demoing my basement and getting rid of water. But i'm heading there today!!

### Article Summary: 

Giant Group Canada is Hiring Demo Drivers & Tech Reps - Pinkbike: Want to work in the Bike Industry? Love traveling? Riding in new locations every week? Giant Group Canada is looking to fulfill 3 positions nationwide working as a Demo Driver and Tech Representative. You will get the chance to attend races, events, and product launches across your region and get people stoked on riding new bikes. You will be responsible for a fleet of Giant and Liv Mountain bikes and E-bikes. Are you an experienced bike technician who loves to problem-solve and educate others? The Tech Representative part of the job will see you work with local bike stores and teach them about new products and technologies. Work closely with our ASQA team and Sales Reps to present Product Knowledge events and keep dealers up to date.POSITION: Demo Driver / Tech Representative - 3 positions availableLOCATION: Primarily one of three areas: British Columbia / Ontario / QuebecJOB DESCRIPTION: As a Demo Driver your role will include travel to/attendance of events as you implement/execute demo ride events for consumers and Giant Retail Partners across the province. This position will require management of a Giant and Liv bicycle demo fleet and its dedicated vehicle. Experience as a mechanic is necessary. Skills required include assembly and disassembly of bicycles, maintenance and repair, and rider setup. The demo driver will work with the Events Coordinator, Sales and Marketing teams, and our retailers to determine the calendar of events, dealer visits, and route map.As a Tech Representative, you will be expected to deliver technical education seminars to our retail partners re: the latest Giant and Liv e-bike and bike technologies as well as our brand values through effective and consistent communication while ensuring absolute professionalism in every interaction. Experience in sales, group presentation,

### Top Comment:

Best marketing dollars Giant (or any other bike manufacturer) could spend in my opinion.

### Article Summary: 

Sequence Saturday 58 - Pinkbike: 0% Loaded prev 1/14 next Photo sequence: Zach CarmanThe Pinkbike user with the best comment wins an EVOC 40L Water Proof Duffel BagPlease keep in mind that we choose the winner based on the best comment, it does not and never has had anything to do with the number of props. Also keep in mind that anyone found to be giving out negative props to a number of users without explanation or reason given will be banned for prop spamming.

### Top Comment:

The only time I would ever want a guy to whip it out in front of me..

### Article Summary: 

Movies For Your Monday - Pinkbike: Nick Quinn: Nick Quinn showing what Fernie riding is all about. Great climbs and great descents.Lane Bodor Freeride 2014: A quaint collection of summer memories. Lane would like to thank Taboo Cycles and Mostly Mental Shuttles for the support. Filming: Keenan Kovacs and Matt Brooks.Blue Dirt - Shuttle Season: Shot over two days of rain, snow, wind, and fog at Mt. Buller and Falls Creek, Victoria, Australia. The challenging conditions that we were confronted with has made the final product that much more satisfying for all involved.Video: Edward Saltau. Riders: Shannon Hewetson, Oliver Zwar, and Ben Zwar. Music: The Legs - Mid December.Smithfield MTB Park Dirt-Jumps: The new dirt-jumps in the Smithfield MTB Park being tested out for the first time during the 2014 Gravitate Mountain Bike Festival.Video: Landon Stroud and Alex Hill. Music: Burn Down Hollywood "My Heart Burns."SoCal Shredding on the Fuzz 650B: Michal Kollbek is a one of Poland's most famous DH legends and pioneers of the sport. A few years ago he moved to the USA and now lives in Santa Monica. Kollbi was one of the first riders to pilot the new big wheeled beast from NS Bikes, the Fuzz 650B. As a tall guy he was very anxious to get ahold of this version of the bike for a long time. Watch him shred in this vid. Enduro Giant Des Portes du Mercantour - 10 Years: The story of the French Enduro race scene, with Fabien Barel, Yoann Bareli, and Francois Bailly-Maitre.Kids These Days: Sam, Ollie, Brendan, and Cam in the Whistler Bike Park. Song: Take Me Higher - Old Man Canyon.Fishin' at Burlington: Brayden Barrett-Hay, Mitch Chubey, Reece Wallace, Wink Grant, and Nick Tingren at Burlington Bike Park.Glenn King - 2014 Leftovers: Random leftover clips from throughout

### Top Comment:

First comment, all right .Don't  really know what to say,just Kids These Days got a massive balls!!!VOD for sure!!!

### Article Summary: 

Keep it Real Premiere - Abbotsford - Pinkbike: After a wild summer of filming many talented riders, I am stoked to share Keep It Real with you guys! Come out to The University of Fraser Valley on Friday December 18th to celebrate mountain biking, film and good vibes.- Doors at 7PM- Tickets are $15 at the door. Cash only, please!A cut of the door sales will go towards the Fraser Valley Mountain Bike Association (FVMBA) to help support the local riding scene! I have worked really hard over the past six months on this so it would mean the world to me if you could make it! Lastly, spread the word and spread the stoke so we can get a full house!I look forward to seeing everyone come out and get stoked on riding bikes. More info here.MENTIONS: @andrewyoung

### Top Comment:

We never had anything this cool when I went to UFV.
Will try to make it..and maybe ride Sumas and Vedder if I can crash out there somewhere

### Article Summary: 

Video: Preview NW Cup, Round 3 - Mt. Hood - Pinkbike: The 2015 NW Cup heads South for the epic test that is the Skibowl Bike Park in Mt. Hood, OR. Hold the box truck and park on the lift for some gnarly shredding. As you'll see in the vids, Cannonball is in epic form and there are some new bits on the Cat 3 track as well. When you're done with practice, go session the jump trails at the base, or maybe a mountain slide perhaps.And now for what you've been waiting for - the preview videos:CAT 2 TRACKPRO/CAT 1 TRACKCAT 3 TRACK - RAWNote: For some reason, I'm not able to upload the Cat 3 track, so here is the raw version.Big thanks to Pinkbike and all our amazing sponsors for helping us through this record breaking year!MENTIONS: @shimano / @TransitionBikeCompany / @Fox-Head-Inc

### Top Comment:

Is there a former Olympic bobsled racer designing bike trails in Oregon?

### Article Summary: 

See Y'all Next Year - Sunday Comics with Taj Mihelich - Pinkbike:

### Top Comment:

Happy New Year Taj... thanks for your awesome cartoons... keep em coming in 2020

### Article Summary: 

Lapierre Launch in Les Gets: First Ride on the X-Flow - Pinkbike: Lapierre, the innovative French Bicycle maker debuted three new trailbikes in the storied Alpine town of Les Gets. Located high in the French Alps near the Swiss border, the steep slopes, groomed trails and dense woods surrounding Les Gets (ley Jay) form a stunning backdrop for World Cup and World Championship events, and the annual Pass'Portes du Soleil - a 50-mile lift-access Super D circuit that links six ski villages in two countries. Pinkbike was invited here to experience Lapierre's 2012 lineup, and ride the Pass' Portes du Soleil.Lapiere's carbon fiber X-Flow 712 is a completely new model for 2012. We rode the 512 aluminum-framed version. Emmanuel Molle photoGood weather (although it rained for three days) spectacular vistas and miles of choose-your difficulty trails make the tiny village of Les Gets a world-wide MTB destination. If you don't know Lapierre bikes, you should know Nicolas Vouilloz; arguably the best DH racer ever and now a full-time designer/consultant for Lapierre. Nico's input has reshaped the performance of Lapierre's medium-travel trailbikes into forces of nature, with aggressive geometry, supple suspension and top-of-the-class pedaling efficiency. The trio that Lapierre showcased at Lest Gets were the X-Flow and Zesty trailbikes, and the all-mountain Spicy. Those who wished to push their Lapierres to the limits down Les Gets' rooted uber-techy forest descents quickly discovered that this man would graciously guide them well beyond the edge of sanity. Welcome to Nico's world.Carbon fiber is the buzzword for Lapierre 2012, and the top three X-flow And Zesty models get carbon frames as well as one for the Spicy. Key features for all models are tapered head tubes, internal cable and hose routing, angled seat tubes for mud and tire clearance, ample stand-over height and direct-mount

### Top Comment:

I have a serious problem with this article. Or more specifically, 1 line in it:"Nicolas Vouilloz; arguably the best DH racer ever"Arguably?!? With 10 World Champs titles in 11 years, there's no debate, Nico is the greatest ever, without equal.

### Article Summary: 

Vallnord Closing Day with Commencal and Raw MTB - Pinkbike: Last weekend was the last chance to enjoy some riding in Vallnord Bike park before closing, Commençal and Raw MTB hosted a challenge with some serious time to beat. ACC clocked some serious times this weekend. It's good to see her back on her Supreme DH ACC making the most of her Supreme V4.2 and right after checking her time. Bad habits die hard when you're a racer Vallnord is for many, one of the best European bike parks with awesome tracks, a sick pump track and incredible weather User checking theirs time at the top of 'Cubil' ready for another run and score some big points for the Raw MTB challenge When two legends meet guess what happens? They compare their times. Dry tracks, jumps, and this for miles and miles. Vallnord is one of the best places to ride in Europe After a long day on the bike no better place to chill than the 'Spot', only meters from the bottom of the lift you can enjoy some local food while sharing your stories from the day Time to compare the scores and share a drink altogether. That's also Raw MTB's spirit.Germain AKA 'Germinator' got the top speed of the day with 73.33kmh, Aurelien Danh Pha with a 2.08 on 'Upper Cubil' gets the best time! Now it's your turn to ride and play with Raw MTB! Go download the app on the Appstore and hit us up on our Facebook and ou Instagram!

### Top Comment:

Really? Only for frapple?

### Article Summary: 

Vida MTB Series Opens Registration for Clinics in 2017 - Pinkbike: The Yeti Cycles VIDA MTB Series announces its lineup for 2017 with unparalleled locations in the heart of the Rocky Mountains. VIDA’s humble roots have grown into producing premier women’s mountain bike events, with an emphasis on the community of riders who connect beyond the clinic. Registration is now open for all events at www.vidamtb.com“It has been an incredible evolution from our very first event in 2013, to a full-fledged movement of women who are shifting the paradigm of what it means to be a female rider,” said Sarah Rawley, president of Vida Events. “Our community is full of strong, hard-charging women who are eager to share the gift and passion of mountain biking with others.”Yeti Cycles, the Colorado-based performance mountain bike brand, will continue as the title sponsor of VIDA in 2017, as the company has since the inception of the clinic series. “Yeti remains committed to provide premier mountain bikes and apparel for women and we haven’t found a more perfect outlet than VIDA,” said Janette Sherman, Yeti marketing manager. “We also believe in the spirit of the VIDA clinic that remains focused on riding skills, but in the spirit of camaraderie and community that is core to women’s mountain biking.”The season officially kicks off at the Sedona MTB Festival on March 4. The one-day clinic format will allow festival attendees the opportunity to gain skills and confidence with a coach on Saturday, and shred singletrack with their friends and family on Friday and Sunday. VIDA will offer yoga, a tech talk from Stan's NoTubes, and group rides on Sunday for all festival attendees to join."It has been amazing to see the community that VIDA brings to the Sedona MTB Festival,” said Mike Rainey, founder and event

### Top Comment:

These clinics are TREMENDOUS! If you haven't participated lady shredders (or beginners!), sign up for one! You'll love mountain biking even more!

### Article Summary: 

Results: Swatch Rocket Air Finals 2015 - Pinkbike: MENTIONS: @FMBA, @flyingmetal

### Top Comment:

BOBBY FUCKING SLAYED IT

### Article Summary: 

Mojo Trail Diaries: Episode 2 Part 2 - Pinkbike: Aaron Gwin, Joe Barnes and the rest continue their Scottish trip...Vid inside...Part 1 here if you missed it

### Top Comment:

no knee protection and you are wearing helmets in the car.... ?!?! What's wrong with you guys ?!?!

### Article Summary: 

Video: Tito in Peru - Pinkbike: This is winter in France, I am already in Chile to ride the Andes Pacifico and shooting for MTB heroes 2 with FastFokus. It's been a few weeks that I am travelling, perhaps I just can't convince myself to come back home just like that. Without visiting Peru ... I LOVE PERU.The feeling is good when I am travelling there, the people, their culture, the food, .. Everything is fascinating! And to finish this positive portrait, the mountains in Peru are big, beautiful and populated. Making the best spot for big mountain adventures, for real.I decided to travel for one month, I landed in Arequipa, where I have let my bike case and moved to Cotahuasi for riding for a week. This canyon is the deepest in the world. More than 3500 meters deep. A curious place to visit and ride, the trails are going from dry as desert places to oasis like areas. A lot of the villages there are remote and only the trails can go. That was perfect and beautiful to travel in the giant canyon, meeting the people and learning the culture. They always found a place for me to sleep and something good to eat.Then I took a bus, another bus and finally a boat, I arrived on the island of Taquile on the Titicaca lake. Here the people have a really strong relationship with their land. As everything they eat is from their production, the best way to realise how important our earth is. So they take care, listen and look. It was really nice to learn and spend some time there. Usually the tourists don't stay but I was really attracted by the place and got to know a few kids. The time on the island was

### Top Comment:

He absolutely makes the best mountain bike videos. Tito's videos just makes me want to keep watching them forever and ride my bike. Keep going Tito!!!!!!!!!!

### Article Summary: 

The BC Bike Race Welcomes WD-40's Support - Pinkbike: Remember when you got your first bike, maybe you were 8, 10, or 14? Then you started tinkering, pulling things apart and eventually you reached into your dad’s toolbox for that magical blue and yellow can. It was this connection that WD-40’s ‘Team Tomorrow’ (a group of WD-40 staff who were tasked with thinking about the future) struck upon. Here's these guys who make lubes and cleaning products and yeah I used to douse my bike in WD-40 when I was a kid, but they are passionate about those lubes and cleaners and passionate about making a difference. -Andreas Hestler Once WD-40’s ‘Team Tomorrow’ made the connection from that youthful encounter with bikes and their core product, it was simple – let’s create WD-40 BIKE and let’s create a line of products specifically for bicycles. Some of you may remember, nearly 20 years ago, when WD-40 was involved in the BMX racing scene in North America, but today it’s more of a broad focus one that encompasses all riding. Now, just three years into making their move to the BIKE side, WD-40 BIKE is digging deep into BC and telling their story through some key brand activations. BC BIKE RACE is happy to welcome back WD-40 BIKE to once again champion the bike wash. For the second year in a row they are back to make sure each and every racer is ready to complete the “Ultimate Singletrack Experience”. They also just partnered with Rocky Mountain Bikes, with a focus on their demo fleets. As WD-40 BIKE began to expand they spent more time in BC, growing a great relationship with Cycles Lambert, their Canadian Distributor, and somewhere along their BC journey they started noticing what Rocky Mountain Bikes was doing.

### Top Comment:

Something that should be moving but isn't moving = WD 40Something that shouldn't be moving but is moving = Duct tape

### Article Summary: 

Race Face Announces New Turbine R 35 Wheels - Pinkbike: PRESS RELEASE: Race FaceBecause we're riders too, our ultimate goal is always to make wheels we’re stoked to get out on - strong, sturdy, no hassle, and fast! With that in mind, we’re stoked to welcome the enduro-rated R 35 to our Turbine lineup of wheels. The Turbine R's lightweight, stiff and durable 6069 welded Alloy rim with a dirt hugging 35mm inner width creates a traction-optimized setup for wider tires ( 2.4-2.8 ). A 4.5mm offset spoke bed laced with double-butted straight pull spokes offers ideal wheel stiffness, strength, and overall tension balance. The distinct rim bead means easy tubeless setup and optimal wheel security as you rip through the turns.The unsung hero of the Turbine R 35 wheelset is our tried and true Vault Hub - high engagement, big time performance. Its oversized body and flanges keep things tracking straight while its wide bearing stance and large cartridge bearings offer great durability, season after season.The Turbine R 35 is available in 27.5” + 29" and all modern spacing options (Boost + Super Boost) and cassette body choices (Microspline/XD/HG).Turbine R 35 Wheel SpecsBuilt For: Trail/All Mountain/EnduroSizes: 27.5, 29”Rim: 6069 Alloy, welded seam, tubeless ready (tape and valves installed)Internal Rim Width: 35mm Rim Depth: 20mmRim Offset: 4.5mmHub Spacing Options: Front - 15x110 Boost (15x110 Torque Cap Conversion Available) / Rear - 12x148 Boost + 12x157 Super BoostSpokes: Sapim D-Light, 28 F/R, 3X pattern (5 spares included, single spoke length for the whole wheelset)Wheelset Weight: 27.5” – 1766g, 29”- 1853gMSRP: $900 USDVault Hub Features- Oversized flange for improved bracing angle and larger bearings- Wide bearing stance- 6 double tooth pawls (3 engage at a time)- 120 points of engagement (3 degrees)- Individually sprung pawls- One length spoke used throughout wheelset (F&R).-

### Top Comment:

As poor as the community response was to this release, at least RF is responding in the comments, especially to all the negs!

### Article Summary: 

UCI World Championships Mont Saint Anne - 4-Cross Finals - Pinkbike: Tomas Slavic and Caroline Buchanan take the World 4X Titles, with Jared Graves and Jana Horakova taking second.Photos and Results insideThe 4X main event started at 9PM in almost completely dark conditions, there were lights on the course, but not nearly enough, and riders really struggled to see in a few places. Combine that with all the photographers flashes going off and I'm amazed that everyone made it down the course. I decided to test out the high iso capabilities of the Nikon D3s and shot the entire race with available light. No flash, in the dark, ISO 25600 or higher. Here's how it turned out...Start gate, early on in the event, mens 1/8 finalout of the gate, Graves on the right for the win...Clear goggles, or not goggles at all, that was the only questionAnneke Beerten looked ready to go, but she was 3rd at the top of the course and never got a chance to pass...Graves taking the semi-finalJoost Wichman leading a mens 1/4 final, he went on to win the small finalAnita Molcik in the womens small final, what you don't see in this photo is Luana De Souza of Brazil on the far inside. Almost everyone took the riders right line through the rocks, but Luana went far left and managed to pass here for the winJoost Wichman, mens small finalCaroline Buchanan, womens finalCaroline Buchanan leads Jana Horakova into the finish of the womens finalGraves leads Tomas Slavik through the rocks in the mens finalTomas Slavic for the win in the mens final. In one of the last corners Slavic went through the rock section on the far outside and passed Graves.Mens Podium, Slavic, Graves, then ProkopWomens Podium, Buchanan, Horakova, Labounkovathe only light we had,

### Top Comment:

Wow Slavic beat Graves not something you see everyday!

### Article Summary: 

Video: Sam Pilgrim's Bangers Tour Part 2 - Pinkbike: After travelling through France in episode one we make it to Barcelona for this episode and shred the sickest zones we could find including some street spots, la Poma bike park and Sherwy's private spot, plus more. We also decide to rent some mopeds for the day and we get a little bit too crazy! MENTIONS: @ns-bikes / @GoPro / @ContinentalMTB / @MarzocchiMTB / @sampilgrim

### Top Comment:

Pinkbike poll:What kind of moto do you ride? Street...on mopeds

### Article Summary: 

Why Pinkbike is Covering eMTBs This Week - Pinkbike: STATE OF THE UNIONWHY PINKBIKE ISCOVERING eMTBS(THIS WEEK)Pinkbike, like much of the industry, has been grappling with the implications of eMTBs over the last few years. At times our approach has been scattered and nebulous, and we apologize for that. It’s a complex topic that deserves a nuanced, thoughtful approach.Today we’re launching a week-long focus on eMTBs. We’ll be sharing reviews, news, and opinion pieces all week in addition to our unassisted coverage.Part of the challenge for Pinkbike in developing a coherent game plan for eMTBs has been the huge diversity of opinion within our own office. The venerable RC has legitimate concerns about trail access and advocacy, while our Euro gunslinger Aston thinks they’re a riot and doesn’t see an issue; Vernon, Kaz, and AJ are all various combinations of skeptical, resigned, and curious; Kieran believes they’re a force for good in community development, while Levy doesn’t consider any sort of motor-assisted riding to be true mountain biking—not chairlifts, shuttles, nor eMTBs. Many of our photographers use them to create the content you see on a daily basis, especially covering the Enduro World Series. Tellingly, some of us have had dramatic shifts in opinion on the topic in the last few years.Personally, I’m conflicted. In my previous role I was involved in bringing an eMTB to market, and I appreciate their hedonistic fun, their potential to bring new people into our sport, the futuristic leapfrog technology, etc., but on the other hand they still feel somehow off to me. The truth is, it doesn’t matter what we at Pinkbike HQ think of of these bikes.Demand for eMTBs has grown dramatically—nearly every major brand has an eMTB offering or is frantically working on one. Internal industry reports are predicting that within

### Top Comment:

Please make it like mtb-news.de and do a second website called epinkbike.com or so. This way you can separate it.

DJ, AM, CC, DH, FR are all part of our MTB sport but for me it ends with a motor. That's somehow just not the same sport anymore in my opinios...

### Article Summary: 

Ffowndri Skills Area and Bike Park at Coed y Brenin - Pinkbike: "The new Ffowndri skills area and bike park is a fantastic new facility at Coed y Brenin. It's ideal for beginners just getting in to the sport right through to experienced, skilled riders with something to challenge all everyone. It's split into 4 areas. Start off in the Training Zone to learn those core basic skills that will help you progress, give you confidence and make your riding more fun. Not sure which of the 8 trails to ride at CyB? Not sure what grade rider you are? Or just not sure how the trails at CyB compare to elsewhere? Then head to the Singletrack Zone where you'll clearly see the difference between the graded trails and examples of what to expect on the trails out in the forest.Next up is the two bike park areas. In the Dropoff Zone you'll find the 'Lemmingstone'. A large natural rock wedge feature with multiple lines. Roll it, jump it, get creative and have fun with it!The Frerride zone is essentially a jump park with 8 burned turns linking table tops, camel jumps, doubles, step ups/downs and hips. You can roll it all, learning how to rail the burns, pump the rollers or progress to manualling through the doubles and eventually getting some air under your wheels. So the Ffowndri is a place to learn new skills, get creative with your riding, play and just have fun!" -Park Ranger Andy Braund.This edit was filmed and edited by Will Sanders Productions.

### Top Comment:

Love this area. Next time I go I'll have a proper play, only did a few runs last time. The amazing Coed y Brennin trails dragged me away from it. Best place I've ridden so far.

### Article Summary: 

Nukeproof Welcomes DJ Brandt & Brooke Trine - Pinkbike: Press Release: NukeproofWe’re incredibly stoked to announce the signing of freeriders Brooke Trine and DJ Brandt to Nukeproof’s roster of professional mountain bikers. Brooke and DJ are the first US-based athletes to join the team since Nukeproof announced its expansion into the US market in 2022. From the flair in their individual riding styles to their drive to push the sport, DJ and Brooke embody the attitude that’s made Nukeproof the brand it is today. We’re thrilled to have them on the team. In 2019, Brooke did what many of us wish we had the courage (and skill) to do — she quit her successful career in corporate America to chase the dream of professional mountain biking. And boy did she chase it. Hailing from Ohio, with roots grounded in the dirt jumps of the famous Ray’s Indoor Bike Park in Cleveland, Brooke is on the bleeding edge of the women’s freeride movement. Starting with the inaugural women’s Speed & Style event at Crankworx Whistler 2019, Brooke has had notable appearances at Freeride Fiesta, the Hangtime Jump Jam and several stops of the Women’s Slopestyle Tour. Now splitting her time between the freeride holy land of Virgin, Utah and Highland Bike Park in New Hampshire, Brooke is dedicated to progression — both in her own riding and in the women’s freeride movement as a whole. I feel honored to be a part of the initial team to launch Nukeproof in the US. I’m blown away by how great the bikes feel and am excited to show their capabilities in the freeride space. The energy of the team is so refreshing, and I can’t wait to see what we can accomplish together.”—Brooke TrineA three-time competitor in mountain biking’s greatest show, Red Bull

### Top Comment:

They need to name a dirt jump bike after him and call it the DJ

### Article Summary: 

Loosefest 2016, Warm Up - Video - Pinkbike: As Loosefest is coming closer and riders are arriving, Nico Vink took Jasper Flashman, Thomas Genon, Kristof Lenssens and Joel Anderson for a ride in the nearby Hurtgenwald Bikepark for a couple of laps to warm up for the big stuff at Ferme Libert Bikepark. Loosefest 2016 is powered by:Monster EnergyBikepark Ferme LibertLoose Riders Global AllianceGoProScottMENTIONS: @TheFEST / @LooseRiders / @GoPro / @SCOTT-Sports

### Top Comment:

I might have a wrong conception of warming up

### Article Summary: 

Video: Behind the Scenes of Matt Walker's Flat Out 'Home Run' Edit - Pinkbike: Take a look behind the scenes of our recent ‘Home Run’ video with Matt Walker. We gave Matt an opportunity to ride the Fort William World Cup Track as world number one, while also paying tribute to this iconic venue on what would have been its 20th anniversary.Hear from Matt and producer Aaron Bartlett of Creative Concept TV as they discuss what the project means to them and what makes Fort William such a special race. Find out how much work went into creating the video and discover a few secrets about how we captured some of the key shots over the four days. If you haven’t already, check out the full video here.— Saracen

### Top Comment:

Is it me or does that lift look like it would be bad for any bike with a dropper.  I know that is fort william and it's a DH track but there has to be big enduro sleds using that life too.

### Article Summary: 

Movie: Spring With Jaws - Pinkbike: I've been working on "Spring with Jaws" project together with Sheiffa for one month. Actually when we saw the first green leaves on the trees, we started shoting. Edit was mainly recorded at my local trails, but also on Telegraf Mountain in Kielce. Bartek Woliński took a few photos, you can see them below.Photos by wolisphoto.com

### Top Comment:

Gee what a surprise! It's another edit filled with insane riding by Jaws.Also to show that the mountain bike community cares about the environment, we will be using 95% recycled music material for our edits.

### Article Summary: 

Video: Highline MTB Festival Highlights & Recap - Pinkbike: To kick off the international FMB world tour, we’re in Mansfield, Victoria, Australia. A one of a kind MTB festival for Australia, with FMB level slopestyle, gravity downhill race, and whip-off competition, all on one hill.Friday consisted of practice and qualifying for the FMB bronze slopestyle event. This gave riders a chance to get comfortable with the new course, try out their bag of tricks, and lock in the runs they have planned for finals. The top 8 riders in qualifying would continue to the finals the following day after having to dodge the random wind gusts and not-so-prime conditions in qualifying.To finish off the first day of the festival, every man and his dog made their way to the top of the hill for the inaugural Krush whip-off. The sideways session was action-packed with many riders getting close to that sweet 90° angle. Those who struggled reached into their bag of tricks with some tuck-no-handers and nac-nacs being thrown. In the end, it was Rye Carlyon who won the crowd over with his effortless style and technique, taking home the win.Saturday brought the second practice for the slopestyle and the first practice for the gravity riders. Dry and loose would be an understatement for the Gravity Course conditions, with a similar feel to Val di Sole. Invisible rocks and roots were hidden in a thick layer of bulldust, keeping riders on their toes while catching a few out. Come the afternoon, it was time for the Delatite Ford slopestyle finals. With incredibly perfect conditions the riders dropped in and left everything on the course. The FMB tour was well and truly back in full force with front flips, 360 tailwhips, and superman seat grabs among some of the tricks being

### Top Comment:

Bloody unreal weekend out on the bike! Great to see the slopestyle boys and girls have an opportunity to display there fully sick stunts!

### Article Summary: 

Specialized Welcomes Jared Graves to the Team - Pinkbike: Specialized is extremely excited to announce that the 2014 Enduro World Series Champion, Jared Graves, has joined the Specialized Racing Factory Enduro team. Graves' accomplishments on the bicycle are unrivaled, having garnered countless Enduro World Series, 4-Cross, Dual Slalom, and Downhill victories - he was even selected to represent Australia in BMX at the 2008 Olympics, where he went on to finish an impressive 6th. Needless to say, he's one of the hardest working professional athletes in cycling.I am so stoked to join forces with Specialized. No other brand has the full complement of top-shelf bikes and gear and the level of commitment to success. The whole team is set up really well with the best support, the best mechanics, and the best teammates. Racing with my old buddy, Curtis Keene, is going to be unreal. We have been buds forever, and now to be teammates, I am confident we can help each other and both become better riders through the process. - Jared GravesGraves will be racing primarily aboard the Enduro 650b and relying on Roval wheels, Specialized 2FO shoes, Ambush and Dissident helmets, plus Specialized apparel, gloves, and tires.Jared is pure class - you won't find another athlete that trains as hard or puts as much into his efforts as him. There's a reason why Jared has always been up front and it's no secret - he's not afraid to put in the hard work in order to consistently get the results. Besides that, he's a gentleman off the bike and can always be counted on to be the life of the party. We're beyond excited to welcome him to the team and look forward to making some great memories together. - Gavin Noble, Manager of the Specialized Racing

### Top Comment:

What to do when favorite racer joins most hated bike company?

### Article Summary: 

Scott Sports Welcomes Andrew Neethling - Pinkbike: Scott Sports is pleased to announce that we have added Andrew Neethling to the family. After years of success on the Downhill World Cup Circuit, renowned video segments and phenomenal MTB ambassadorship, we felt that Andrew was the perfect fit for where our company is headed. Looking to continue his career beyond Downhill racing, Andrew will transition into a brand ambassador role, traveling the world on his trail and DH bikes to meet new people, create stories, and ultimately to push mountain biking. I am beyond excited and motivated to join Scott Sports. It is obviously a big decision to move away from full-time racing and transition into a new role. I however, feel very good and confident about it with the backing of Scott. My goal is to promote cycling and hopefully get more people into riding and enjoy the sport that has given me so much. Scott bikes have always impressed me with their technology, looks and market leading development. I know there are passionate people behind the company and that is key moving forward. I want to get out there and as cliché as it sounds…. show people how enjoyable riding can be.—Andrew NeethlingWhen the opportunity came up to bring Andrew on board, it was a no-brainer. He came to us with an idea that was a bit different to what he had been doing for the last decade, and it was something we could easily get behind. We’re looking forward to getting creative with Andrew as he travels the world with his bikes.—Julian Wagner, Bike MarketingAndrew will be heading to New Zealand in a few days to meet up with long time buddy, Brendan Fairclough to film an all-new episode of “Chasing Trail”. Tough first week on the job!

### Top Comment:

Can't wait to see Brendog and Neethling in the new "Chasing Trails" episode~I've seen the 2 ride together and know they are good friends so to actually see a professionally edited video is exciting.Congrats to Andrew for getting such a nice gig with Scott~

### Article Summary: 

Disco Down: racing in a club! - Pinkbike: Disco Down 2011 - presented by Thirty7even from Aktion Schotterflechte on Vimeo.Never seen before in Holland: 16 pro mountainbike and BMX riders competing against each other in a club. The trail started on the top floor, went through the corridors, down the stairs, with a jump over a beer unit and finished on the dance floor. The audience was astonished with the skills the riders showed. It took a lot of guts, speed and technique. In the end Jelle van der Elzen won the competition. He was the fastest rider over two timed runs. Joost Wichman (3rd at the Worlds Four Cross 2011) designed the track and invited the riders. It was the first big event organized by his new company Thirty7even. More demos, clinics and riding camps will follow next year, and it will be likely that the concept of Disco Down will go on tour.Video made by Schotterflechte.

### Top Comment:

Beer and Bikes always make for a fun time.

### Article Summary: 

Redbull Rampage 2008 - Evolution - Day Three. RAIN RAIN RAIN - Pinkbike: Rains have come, flash flood warnings in effect.The event has been postponed potentially a day, or maybe even two. Hopefully it's sunny tomorrow so the course has morning to dry out before we can drive up into the zone again.Instead a large majority of the riders and media ended up bowling. High scores in our group of Canadians included Tyler Morland with a 170. For those that don't know, we don't play too much 10 pin up in Canada, so that's decent for us, otherwise my high score was 145, pretty much dismal. Brandon Semenuk appears to only have talent on two wheels after bowling a high score of 80. Super. Hopefully we'll be a lot more productive tomorrow.-Ross Measures

### Top Comment:

yep its raining here aswell!

### Article Summary: 

Mad March Racing Announces Urban Freeride camp at Ray’s Indoor Bike Park. - Pinkbike: CLEVELAND, OH - Though the weather outside is frightful, on January 11th, 2008 Ray’s Indoor Park in Cleveland, OH will be more than delightful! Shaums and the MMR crew of coaches will hold a one-day “closed session” of Freeride Skills. “ I have been to Rays twice over the past couple years and each time I see the park continually growing and getting more fun to ride.” MMR owner and founder, Shaums March, continues, “after discussing ideas with Ray, I instantly saw the potential for them to host Urban Freeride clinics. Riding outside this time of year is tough, but there is still a demand to ride and learn!”Friday, January 11th will include lunch and a full 6 hours of instruction covering everything from bike set up and basic skills to advanced bike handling. “Don’t be surprised if you ride away at the end of the day with a back flip under your belt!” Four additional coaches have been scheduled to share their riding knowledge alongside the legend Shaums March. “I am excited to have this crew of coaches to work with,” states Shaums. “We also have Jeff Lenosky and Jim Dellavalle on the coaching roster. I’ve known Jeff and Jim for years. They are both amazingly skilled riders and really are true legends of the sport.”Friday's coaching session 9am-3pm with lunch $185. With season pass $175.00 The $225 Package includes one night accommodation with transportation to and from the park, lunch, instruction and the weekend pass for Ray’s. This would be a great Christmas gift! Sat private coaching sessions 10am-1pm and 3-6pm Max 3 riders per group 3hr $150. Season Pass holders $140.You can check out Ray’s at http://www.raysmtb.comTo register and find more information go

### Top Comment:

Eh does anyone know what happens with Health insurance if we get hurt ? are we coveredr candian Health care palnsor do we get raped with an american hospital bill?

### Article Summary: 

Pinkbike Product Picks - Pinkbike: Race Face Turbine cranksRace Face's Turbine lineup, consisting of cranks, chain rings, stems, and handlebars, isn't necessarily made for launching off cliffs or hitting huge gaps. Nor is Turbine intended to be the absolute lightest, but is rather more of an all-around component group for the trail and all-mountain genus of riders. The 7050 aluminum Turbine cranks fit this description spot-on, with ten different ring setups to choose from (including triple, double, and single), compatibility with threaded 68/73mm bottom bracket shells, as well as BB92 press-fit, and PF30 conversion or BB30 conversions via an adapter. Arm length options include 170, 175, and even a 180mm version. Weighing in at a very acceptable 810g (24/38T, 175mm), they appear able to do it all. The arms themselves may look great, but it is Race Face's new EXI interface that has us most excited - no more arm pump while removing the crank arm from the spindle! Looking for something a bit lighter? With their Turbine SL version, Race Face offers the same arms paired with a titanium spindle allowing you to get down to 770g (24/38T, 175mm). Colour options include red, black, grey, and green. MRSP on the Turbine cranks (3 ring with BB) is $299.00 USD. www.raceface.comLooking for a set of trouble-free cranks and bottom bracket? With a pile of ring combinations to choose from, Race Face's Turbine cranks get the nod from us. Pinkbike's Take: Our Turbine cranks were fitted to the Rocky Mountain Element 970 B.C. Edition that we used for both the week-long B.C. Bike Race and some proper hometown all-day epics, so we were able to put a fair bit of concentrated riding time on them. As expected, the 7050 aluminum arms gave us no issues during testing, and although we weren't

### Top Comment:

I like the outdoor gear reviews! We all spend hours in the woods and use this kind of gear.I was even thinking it would be sweet to see some soft goods reviews.Who rides and doesn't have a collection of hard / soft shells, pants and gloves to go with all the climates we deal with?

### Article Summary: 

Warner's Course Preview - Val di Sole DH World Champs 2016 - Pinkbike: "Here's my go pro worlds course preview in its entirety that I did with @stevepeat and @claudiocaluori from my @gopro. If you've got half a day to kill check it out. Here, in no particular order is why it's not a winning run and I'm not one to make excuses.- Firsty it was 7am (6am UK time) which is earlier than I ever got up.- It was my first (second) run down ever.- I had a cold.- The brakes were the wrong way round (NZ style).- Steve kept putting me off.- It was dusty and steep and not easy to see even at the front.- At one point a pack of hungry wild Italian wolves chased me up a tree.Thanks to @commencalbikes and @georgebrannigan and his mechanic @ryanmfthom for letting me give his bike a damn good hiding. #peatysgotwood" - Rob Warner via his Instagram accountMENTIONS: @COMMENCALbicycles / @claudiocaluori / @GoPro

### Top Comment:

RedBull actually listened...

### Article Summary: 

Specialized Introduces 2011 Freeride Team - Pinkbike: Darren Berrecloth, Matt Hunter and new edition Martin Soderstrom will make up the 2011 Specialized Freeride team.Aiming to dominate the freeride world in 2011, Specialized is excited to announce the addition of Swedish pro Martin Soderstrom to their freeride program. Specialized will sponsor Martin with frames and saddles for at least the next two years and will be joining two of the best, Darren Berrecloth and Matt Hunter, to create one of the most diverse—and dangerous—freeride teams in the world. Not only do this year’s athletes represent the best in the business, the two decorated vets and the young up-and-coming pro are not shy when it comes to product development. Specialized will make the best use of this partnership to take their products to the next level, as we’ve already seen with their XC and Downhill collaborations. Supported by strong partners for the 2011 season, expect Martin to nail some of the sickest tricks at 26TRIX, Vienna Air King, Rocket Air and the Crankworx events.Martin Soderstrom Photo: Alessandro di LulloMartin is fortunate to have two notorious rippers as teammates, Darren Berrecloth, and Matt Hunter. Darren’s 2010 results include winning VW’s Best Trick at Crankworx with an insane Switch-360 Lookback. He also placed 3rd overall in the FMB World Tour, and 3rd place at the Red Bull Rampage. Like last year, he will ride his SX Trail, Demo 8, and P.3 on some of the craziest terrain we have ever seen.“I just bought a sick new pad and I’m building some awesome new trails in the backyard. I am going to Argentina here in a week or two to continue filming Where The Trail Ends, which is a film about traveling into the furthest regions to find the sickest big mountain lines. Contest series

### Top Comment:

probably one of the sickest teams out there right now

### Article Summary: 

Jose Borges Joins the Canyon Collective - Pinkbike: link="https://www.w3.org/1999/xlink"> View this post on Instagram A post shared by 🇵🇹 Zé Manel B💣rges AKA Mr. Bomba (@jose_borges121)Jose Borges has officially confirmed that he will be the latest rider who joins the Canyon Collective in 2021.With an already stacked team of riders, Jose Borges will be joined by Ines Thoma, Jack Moir, Dimitri Tordo, Fabien Barel and Loris Revelli as they take on the EWS and EWS-E. Jose Borges comes from the Miranda Factory Team, where he secured his best results with 2nd place at EWS Madeira in 2019 and some top finishes in the EWS-E events last year. For 2021 it looks like he will be keeping his focus on both the EWS and EWS-E events for the Canyon team.In 2021 I will represent the Canyon CLLCTV team, very happy to be part of this project, the objective will be to racing in E-EWS and EWS. On board, my mechanic Gravity Bike Performance follows me, and I thank you for accepting this project with me.Thank you Fabien Barel for the opportunity to race in the best gravity team in the world.— Jose Borges

### Top Comment:

CNGRTLTNS!

### Article Summary: 

Pinkbike Content Submission Guide - Pinkbike: Pinkbike is the largest mountain bike website in the world, serving up hundreds of pages per second to millions of users a month. In addition to our editorial coverage, Pinkbike also provides a platform for riders, artists, brands, and manufacturers to showcase their content to our community.Are you a reader who’d like to submit a personal project? A rider that’s been working on an edit for front-page consideration? A brand that would like to submit a product press release? An event organizer looking to submit a local event report? An adventurer with a story to tell?Awesome—we’d love to see your work. But please keep in mind that we receive hundreds of videos, press releases, stories, and other content every week. While we can’t guarantee running any particular item, following this guide will dramatically increase your chances of getting on the homepage.How to submit1. Create a Pinkbike account• Click here to create a Pinkbike account. • Already have an account? Great, you're ready to move on to step 2.2. Upload your media to Pinkbike• Upload your photos to your Pinkbike account by clicking on "Photo" on your profile page. • You can also upload your videos to your Pinkbike account by clicking on "Video", or choose to upload them to your YouTube or Vimeo channel instead.3. Write a blog post• Click on 'Write a blog post' under your profile picture to start writing your blog post.• Read through our Tips on How to Write a Good Pinkbike post, as well as Common Reasons for Post Rejection.• We have detailed Tips on Formatting, but keep in mind that your formatting doesn't need to be perfect and less is often more. Our content team will adjust your post and formatting as required if your blog is chosen

### Top Comment:

What a cool website. You guys rock

### Article Summary: 

Astrix Mojo Caersws Cup - Wales - Pinkbike: Astrix Mojo Caersws Cup:In the UK we all like to talk about the weather and oh boy did we have some weather. The curse of Caersws they called it this weekend. Sunday morning was still bright and sunny, with big gusts of wind that soon brought in the sleet, snow and hail storms. The only thing we were missing were the locust.Firstly let's credit the Professional Photography by Scott Cartwright, good work fella in these bad conditions - www.eggraphy.com / scott@eggraphy.comSaturday was nice and cool, beautiful sunshine and perfect riding weather. Saturday night I luckily zipped the 110miles home back to Birmingham for my birthday treat. Then up at 05:00 to repack the van and land at a worn torn venue. The portable toilets had blown over and tents were in tatters up against the fence a few hundred meters away. Stories were rife of riders tents getting blown over with them inside them. Then they had to cut themselves free and sleep it out upright in their cars, all at 04:00, nice...One lady came up to me on Sunday and said this was her son's first race, she asked, "Is this as bad as it gets"? I replied, "It can't get any worst than this, if you can get through today then the rest of the season will be a walk in the park"!Caersws is probably most famous for the quickest uplift in the land and the Farmer Ian Jones again did not disappoint. The UpliftMany sat out of early practice and let the kids scrape the nights mud off the course, which didn't quite work. 10:30a.m course was closed on the dot leaving many with less practice than they planned.It rained Cats and DogsHardtail Ingram slipped from 1st place in

### Top Comment:

One lady came up to me on Sunday and said this was her son's first race, she asked, "Is this as bad as it gets"? I replied, "It can't get any worst than this, if you can get through today then the rest of the season will be a walk in the parkthats my mates mum!!!!!!!! honestly

### Article Summary: 

North Shore Enduro Course Announced - Registration Open - Pinkbike: Round 2 | June 7th-8th | North Shore Enduro | BC Enduro Series, Presented by NORCO | $90REGISTER HERE - BC ENDURO SERIESIf you were going to spend one weekend of the year riding your bike, June 7th and 8th, should be the one! There is more bike riding happening this weekend then there are hipsters in Portland. It's a weekend of fun racing, socializing, bikes and good eatin'.This round of the BC Enduro Series presented by Norco, is supported by one of the most well known shops on the North Shore, Norco John Henry Bikes and they have been on board helping out to ensure that the course is dialed, the music is pumpin' and the refreshments are kept cold. This two day Enduro is expected to be one of the most technical courses throughout the series, so bring your tubeless tires, your 160mm fork and your strong hands! But don't be scared off....the amount of mind blowing work that has been put into the trails over the past year, still allows for the course to cater to all styles of riders. If you feel intimidated, then just take your time and you will be sweet and super stoked by the end of the day. REGISTRATION | 90$Registration is available online (saving you $10) here. Or on the day at the location below (extra $10).DAY 1 SATURDAY JUNE 7:9.00-10.15: Registration (Inter-river Bike Park, access off Premier St or Inter-river Park Road)10:25am: Rider Briefing10:30am: Race start12:00pm: Beer Garden Open! THAT'S RIGHT, BEER GARDEN OPENS AT NOON!12.45pm: First riders finishingDAY 2DAY 2 SUNDAY JUNE 8:9.00-10.00: Registration (Parkgate Park at the end of Parkgate Avenue off Seymour Parkway)10.00am: Race Start12.00-1pm: Riders finishing2pm: Awards MEC Bikefest - InterRiver Bike Park (or sooner if

### Top Comment:

Have to say, I'm a little disappointed with the trail choice as well. So much awesome work going on lately on Seymour on trails like the High School Loop and Forever After and instead we're racing down Ned's? And climbing Old Buck three times in one weekend? Ho-hum...

### Article Summary: 

Video: Bikepacking Racing Across Morocco's Atlas Mountains in 'Into The Rift' - Pinkbike: To simply finish the Atlas Mountain Race means navigating 1,200 kilometres of the most rugged and remote roads in Morocco, riding forgotten gravel paths from Marrakech to the Atlantic coast whilst climbing a staggering 25,000 meters of elevation along the way. Riders would find themselves riding past snow-capped peaks, through scorched deserts and into palm-filled oases, all within the eight-day time limit. To win requires riding almost non-stop, night and day, for days on end. It is a combination of strength and sleep deprivation that only a few riders in the world can manage. Riding alone, unsupported and loaded down with supplies, each competitor must constantly battle mechanicals, heat exhaustion and saddle sores to get to the finish. There is no prize, no money, simply the satisfaction that comes from pushing oneself to the limit while exploring the backroads of a beautiful country.With support from PEdALED, Canyon, Fizik and the race crew led by organiser and route creator Nelson Trees, filmmaker Brady Lawrence followed the race documenting everything from a brutal 80-kilometre walk through the high desert with a broken bike, to one racer’s simple joy at realising they’ll soon eat their first warm meal in days. Featuring the sport’s biggest names and first-time, ultra-distance racers alike, the film gets up close to the kind of people crazy enough to take on this epic challenge. Capturing the human drama set against an otherworldly landscape, Into the Rift is an in-depth look at a true cycling adventure.Following the premiere there will be a Zoom Q&A hosted by Atlas Mountain Race with the top riders, race director and filmmaker. Head over to the Canyon Instagram channel and follow the link in the stories to get involved. James Mark Hayden

### Top Comment:

Having been to Morocco I can't imagine bikepacking across. Though I'm glad somebody is! This was a nice video in a time when we can't travel.

### Article Summary: 

Ben Cathro to Miss Lourdes DH World Cup with a Shoulder Injury - Pinkbike: Ben Cathro has announced on social media that a previous shoulder injury will be stopping him from racing at this weekend's World Cup in Lourdes. With the launch of Pinkbike Racing this weekend Ben Cathro will be managing from the sidelines after an injury causing impingement in his shoulder from a few days ago has troubled his riding in Lourdes. Rather than push on Ben will be sitting this one out and instead help scope fast lines and support the team from outside the tape.We wish Ben all the best with his recovery and hope he is back up to full speed for Fort William in May.

### Top Comment:

You had one job. Oh wait...

### Article Summary: 

Video & Photo Story: A Heli Drop in the Pyrenees with Iago Garay in Episode 3 of 'Not Far From Home' - Pinkbike: At some point during the 2 months of lockdown that we had in Spain, I received a call from Ramonudo: “I’ve planned a weekend in the Pyrenees near Bielsa with plenty of shuttles, a campsite at the top of the mountain and a helidrop to top it off”. I had to say “I’m in” right away. It sounded like the perfect way to celebrate the lockdown being over. It didn’t take much to convince Nacho, Kike and Sergio either, so the 3rd episode of Not Far From Home was ready!The plan was simple, enjoy all the vertical the Pyrenees has to offer with the help of Altitude Rides and head back on Tuesday to film the next episode of our video series.We spent a couple of epic days riding all around Bielsa. The guys from Altitude rides had been all year working on some new trails and we were the first ones to ride them. You can imagine - fresh loam and not a single braking bump. To top it all off they had arranged a mountain top campsite for us with the help of Trekking Mule, a company based in the Pyrenees that uses rescued mules from the south of Spain to make epic campsites at the top of any mountain in the Pyrenees.Saturday night we arrived at the Ibón (mountain lake) de Plan, just on time for a swim in the breathtaking lake. The Trekking Mule guys prepared one of the best meals of the trip for us and provided some great red wine from the area. The following morning we had another epic descent for breakfast. Does it get any better than that?It does,

### Top Comment:

Looks like some fun to me !

### Article Summary: 

Cam McCaul Injury update - Pinkbike: During the finals of the Crankworx Colorado Slopestyle contest on Saturday afternoon Cam McCaul crashed on a huge front flip and broke his femur. I got a chance to talk to him Monday afternoon in Denver.Photos and words inside.At approximately 1:25 PM on Saturday July 31st Cam attempted a front flip off of the whale tail step down during his first run of the Crankworx Colorado Slopestyle Finals. He crashed on the landing and broke his right femur. The Winter Park Bike Patrol did an amazing job of looking after him and getting him to Denver Health Medical where he spent the night and had a rod put in his femur. I caught up with him at his hotel in Denver today and luckily managed to get him in-between doses of pain meds while he was semi coherent. His leg aligned perfectly and there were no complications when they set it, he should be healed up pretty quick, 6-8 weeks if all goes well.This is what he had to say about what happened:"Hey this is Cam McCaul, just sitting in a hotel room near the Denver Airport after getting discharged last night from my hospital bed, where they put a rod in my femur because I broke it during Crankworx Colorado Slopestyle finals on Saturday. It all started when finals were getting going and I was trying to pick a run that would get me on top of the podium or at least in first place and everyone was riding really well this year so I knew I had to do something new and something impressive so I decided I was going to do some hard tricks up top and then send the banger in the middle of the run with a front flip

### Top Comment:

Get better Cam

### Article Summary: 

Video: Story of the Race with Ben Cathro - Mont-Sainte-Anne DH World Cup 2022 - Pinkbike: The penultimate round at Mont-Sainte-Anne delivered injuries, championship shake ups, and hometown heroes. Watch Ben Cathro break it down. Subscribe to the Pinkbike YouTube channel

### Top Comment:

I don't really believe in those things, but I think Finn got some extra help from above. No chain required when you have a chainsaw on your side.
That race was a bit emotional...and I'm not even Canadian!!!!

### Article Summary: 

Intense Mourns Loss of COO Chad Peterson Following Bike Accident - Pinkbike: Intense has today announced its Chief Operating Officer, Chad Peterson, has passed away following injuries sustained in a cycling accident. Chad was an industry veteran and a well-loved member of the cycling community. He had worked at Intense for nearly six years and also held positions at Cannondale, Selle Royale and Crank Brothers.Below is Intense's statement about the tragic incident and a memorial to Chad.PRESS RELEASE: IntenseThe Intense family lost an invaluable member when Chad Peterson passed away from injuries sustained in a bicycling accident on September 2, 2019 near Ortega Highway in California.Peterson was a most avid cyclist with a passion for mountain biking largely unmatched. He consistently woke up at 4:00 am on workdays to ride, regularly logging 20+ hours a week on the bike. Consistent rides were part of his lifestyle and passion but also his work as he combined his early morning workouts with new product and prototype testing. His arrival at Intense met the arrival of carbon in the company’s lineup and his expertise in sourcing and managing supplier relations was instrumental in the company’s success with advanced materials.Peterson’s love for cycling and dedication to on-the-bike miles helped Intense produce and perfect many products including the Sniper—one of their most popular models. The aggressive XC bike was released in March 2018 after nearly three years in development and in conjunction with the notorious “Chad Challenge”—a program to challenge riders to match or beat the number of miles and elevation Chad rode in one month. Peterson racked up 1,075 miles and 132,167 feet of elevation gain during the challenge.Peterson’s passion for cycling was matched by his pursuit for career professionalism and a knack for mastering the product from production design to delivery on the

### Top Comment:

Terrible news. My thoughts go out to the family. Does anyone know how it happened? I don’t want to speculate just want to know if there is anything we can learn from it.

### Article Summary: 

Bike Check: Amaury Pierron's Commencal Supreme DH 29 - Mont-Sainte-Anne DH World Champs 2019 - Pinkbike: BIKE CHECK Amaury Pierron's Commencal Supreme 29 Photography by Ross Bell2018 was a stand out year for Frenchman Amaury Pierron. Taking the overall World Cup title and riding consistently at the top of his game, there was little debate that he was a contender for the title of World Champion, however, after a long season on top coupled with some sickness, the rainbow stripes evaded him.This year, a similar stage is set. Pierron has once again been consistently riding at the top and the French have taken six of the last seven WC wins. With three wins and not a single finish outside the top-10 this season himself, he's sitting in second place for the WC overall with just two races left... this weekend's World Championships and then finals. After missing the coveted jersey last year, there's no doubt that Pierron is hungry for the win this weekend and he is no doubt a favorite to take the top step.Pierron has been on the same bike for several years but each season, things have changed a bit. He's still rolling with 29" wheels front and back, steering clear of the mixed wheel size we're seeing some racers running, for the time being.Commencal Supreme DH 29 Frame: Commencal Supreme DH 29Shock: RockShox SuperdeluxeFork: RockShox BoxxerWheels: ENVE M9Tires: Schwalbe Magic Mary, Ultra Soft. 1.8 bar - front, 1.9 - backInserts: NoneDrivetrain: SRAM XOBrakes: SRAM Code RSCCockpit: ENVE M9 handlebar, 800mm; Spank 40mm stemSize: LargeThis season, Pierron has gone from aluminum handlebars and wheels to carbon parts from ENVE. The set up took a bit to get used to at first due to the increased stiffness and he's running somewhat softer suspension settings to help the bike

### Top Comment:

If you don't have oil slick something on your bike this year you ain't shit.

### Article Summary: 

Review: Commencal's Supreme DH 29 is an Unflinching Race Weapon - Pinkbike: REVIEW Commencal Supreme DH 29 Words: Paul Aston Action Photos: Kike AbelleiraCommencal's Supreme platform has been around for a number of years, but 2018 saw it gain more length, bigger wheels, and three World Cup wins in a row. The Andorran race vessel was also the first complete production-ready big-wheeled downhill bike - and it sold out two production runs. Commencal initially offered the frame kit including a Fox 49 fork, DHX2 shock, and an e*thirteen wheelset for $4,599 USD, and as a complete bike with a high performance / low-cost component selection for only $5,399. That inventory sold out almost overnight, but the 2019 range has just been released with new color options, including a RockShox-equipped team replica that can be had as a complete build for $4,599.Supreme DH 29 Details Intended use: downhillTravel: 205mm rear / 203mm frontWheel size: 29"Frame construction: Aluminium 6066-alloy, triple buttedSuspension Design High-pivot swingarm with idler wheelSuspension: Fox 49 fork, DHX2 shockSizes: M, L, XLWeight: 16.99kg / 37.08lbs (actual, tubeless, w/o pedals, XL)Price: $5,399 USD (exc. tax) / €5,399 (inc. VAT)More info: commencal-store.comCharging into rough rock gardens and braking bumps is unreal - I tried a section in Pila faster and faster, and the Supreme was the first bike I have ever ridden that genuinely became easier to handle the harder I pushed it. It never even came close to flinching.— Paul AstonContents • Construction and Features• Geometry & Sizing• Suspension Design• Build• Specifications• Test Bike Setup• Riding• How Does it Compare?• Technical Report• Pros & Cons• Is this the bike for you?• Pinkbike's Take

### Top Comment:

“It’s not a big, it’s a feature”Rode one of these at a demo. Didn’t have a ton of runs to get really comfortable, but I can confirm that it is indeed really, really fast. You really need to be a really good rider to get the most out of it. If not ridden at ten tenths it feels like driving a 60 foot stretch limo thru city traffic. This is not a park bike. If your day at the park includes stopping at every trial junction to bro down before this is not the bike to you.It’s a weird time for DH bikes. The bike industry has convinced us all that 29 is better. And it is faster as proven by the World Cup. But most people can’t ride them to their potential like Paul Aston can. In fact, most people are not going to enjoy riding a 29 DH bike. The bike industry knows this. This is why Santa Cruz is milking as much money as they can out of the current v10 molds before coming out with the v29. The serious racers will buy them but how many regular park bros are going to buy one when they become a more known commodity? Add in that you have a lot of people that go to bike parks 2-4 times per year (the majority of bike park visitors) are buying Nomad/Capra/Torque and bikes like that are more versatile than a full on DH bikes and you have sales going down. Less sales mean that the cost has to go up to cover development costs. How many people have bought the Session 29? How many people are going to buy an 11,500$ v10?500 two stroke analogy?

### Article Summary: 

Video: Windrock Pro GRT Race Day Highlights - Pinkbike: The first big race of the year is in the books and it was a winter slopfest. Some of the World Cup's finest riders converged on Windrock, Tennessee and Loris Vergier and Rachel Pageau were fastest through the peanut butter. Watch the full raceday highlights from Mountain Bike Mania above.Muddy Windrock never disappoints for the 1st national race of the year! Here’s the mania, and congrats to your winners: Ethan Shandro, Rachel Pageau, Loris Vergier, & Ella Erickson! We’re now one month away from Round #2 at Port Angeles, Washington!—Mountain Bike Mania

### Top Comment:

Isn't the dude tossing back a beer at the 1:18 mark the guy that won the U21 enduro? haha

### Article Summary: 

Race Report: BC Bike Race Stage 1 - Kelowna - Pinkbike: Canyon views and Gnarly descents in KelownaAfter a taster sample of Kelowa’s Crawford trails during yesterday’s prologue, Stage 1 of 2022 BC Bike Race dove in for the full meal deal. After a hint of rain overnight, trails were in all-time conditions for a full 40.5 km tour on the local classics. After a quick loop to wake up the legs, racers worked their way up an 8km rolling climb towards the days first big descent. Vapour is a gnarly local classic, with big rock bluffs, roots and endless corners delivering some real pucker moments and the week’s first sample of B.C. technical riding. After a full kilometre descent, the days second climb was a leg-draining 6.5 km of singletrack and occasional double track. The reward was a ripping, high speed descent along the valley edge of Crawford Canyon. Sweeping corners and stunning vistas took the sting out of the day’s climbing as riders plummeted towards the valley below. A few rolling kilometres through the regrowth of a historic burn added some atmosphere to finish off the day. Like the forest around them, riders' legs now have a day to recover, and also relocate to Salmon Arm for Stage 2. After the first long day, racers are starting to find their pace. Barry Landau travelled up to the Okanagan with a group of six physicians that work and ride together in Bellingham, Washington. The BC Bike Race is a change in terrain and pace for the crew of PNW residents. As are the long days in the saddle.” “When we decided to do this a year ago, it was a big project to get in shape enough to make it through. We kept it under control today, we know

### Top Comment:

I participated in 2018, there were lots of XC bikes, FS\HT, including my own scalpel, no hiking was required on my part. Keep in mind the 10,000m total climb during the week, the bike should be capable to handle both directions.Extremely recommended, fun and well organized event if you like the technical stuff.

### Article Summary: 

"Barred For Life" World Premiere at Sea Otter 2009 - Pinkbike: Source: Gravity Components Chainlink Productions is proud to announce the world premiere of their latest title, "Barred For Life", a full-length mountain bike movie featuring the Rockstar Energy Drink team with special guests. The movie will be premiered on Saturday, April 18th at the Monterey Conference Center in the Steinbeck Forum. The doors will open at 7pm, with the world premiere kicking off at 8pm.Tickets can be purchased in advance for $10 at the Camelbak (#164) and Gravity (#759) booths at Sea Otter, or at the door for $15. Barred for Life Teaser:"Barred For Life" features Cam McCaul, Trond Hansen, Ben Boyko, Steve Romaniuk, Jordie Lunn, Trent Kidd, Greg Watts, Andrew Taylor, Geoff Gulevich, Andreu Lacondeguy, and Kyle Hansen. The movie is sponsored by Rockstar Energy Drink, Decline Magazine, Hafjell Bikepark, PinkBike, and Downhill Zone.The Monterey Conference Center is located at 1 Portola Plaza, Monterey, CA 93940. Phone: 831-646-3770.

### Top Comment:

my little kiddo will watch Cam in videos then immediately get his mini out and his skateboard ramp in the yard and jump. Looks like another vid for the collection!

### Article Summary: 

Forest of Dean Mini DH 3 - Pinkbike: Local DH races are an integral part in the racing calendar of any amateur or professional racer. They help to give those who have never raced before challenge themselves and help the more experienced racer see how their training has prepared them over the winter and get back into the mindset of racing (as well as being good fun!). The Mini DH series run at the Forest of Dean in Gloucestershire is no different, attracting riders from all over the UK to their forested slopes. We caught up with Peak Leaders Graduate John Inman on his first race of the year.Based in an old colliery in the Cannop valley, the uplift centre at the Forest of Dean (run by Fly Up Downhill) fast established itself with some killer trails and super efficient uplift. When added to a fantastic local bike shop (Pedalabikeaway) and facilities to match it wasn't long before they then added a 'mini dh' style race series, that has been run since 2008.Round 3 of the 2014-15 series was held on 'Corkscrew'. A fast and pedally open top section, with plenty of opportunites to pump, dropped into a fast and roots lower section giving a nice balance of flow and tech. A key feature was a big rooty compression near the end, with riders unsure of the line to take into it and speed, providing the focal point of action for many of the spectators on race day. A few more corners led to the finish, where there was a split between those going wide and risking ending up being in the heavy mud on the outside, or come in a bit slower and hit the tighter but faster inside line.Dropping off the fireroad into the rootsThe rooty middle section

### Top Comment:

Such a good weekend of racing! 661 mini downhill really do host some of the best regional events.But did any other racers feel like the timers had moved or were out of calibration on the second runs? I don't like to make excuses but on my first run I landed the table at the top flat and bounced my chain off into the lower ring and got 59.6 seconds and my second run felt pretty perfect for me and I kept my chain on but got 58.9 second? And a mate did a second slower even though he got stuck behind someone on his first run?It was a short track though so even going a lot faster doesn't take too much time off.

### Article Summary: 

Interview: Lewis Buchanan on Building a Last-Minute Race Program - Pinkbike: Lewis BuchananFor 2020, Lewis Buchanan is riding for the Canadian brand Forbidden onboard their high pivot bike the Druid. After a late contract decision from his old team, Lewis was initially left without a team for this year but after a lot of work, he found he was able to build his own program. We caught up with Lewis to talk about the decision to build his own program, finding sponsors and how he is coping with the lack of racing this season. How was your offseason?I had a good couple of months off where I had to figure out what I was doing for this year. Whether that was not racing anymore or building my own program. There was a lot of uncertainty as far as what direction I was going in, but yeah basically I was rammed with stuff that I have never done before. Which sounds like a complaint but it’s really not. When I say ‘rammed with a lot of stuff and a lot of stress’, sure it really was but it was also a massive learning curve for me from a kind of business standpoint and trying to figure out truly what I was really worth to companies. So yeah it was busy with a lot of sort of logistical stuff, contracts and deals. What was the hardest/easiest part of building your own program?I wish I could say there was a fairly straightforward part, I really struggled with getting contacts and because the deal with Ibis was such a last-minute decision on their part to not continue to sign with me. Basically, we were negotiating and everything looked good to extend for another two years and as it can kind of happen and as

### Top Comment:

Great interview. I love the bike and I think Lewis can get a podium with this setup. Good luck this season and I can't wait to see the enduro bike that Forbidden will release.

### Article Summary: 

Video: Arrival & Site Check With Kyle Strait - Red Bull Rampage 2022 - Pinkbike: Back in Southern Utah for my 17th Rampage. This year's venue is back to the 2008-2013 site, where I took my last Rampage win. Excited to get some digging on the way for the next several days to start sculpting our way down the mountain .—Kyle Strait

### Top Comment:

Awesome content. Pls keep it coming and good luck out there!

### Article Summary: 

Escaping Winter in Utah - Chasing Trail Ep. 18 - Pinkbike: It's winter. The Pacific Northwest is cold and rainy. You want to ride bikes and think that Utah might be the perfect destination. Winner, winner, chicken dinner. Head to the desert with Kyle Jameson and Stan Jorgensen for some dry trail and all-time adventure. Full Story Here!Photos: Scott MarkewitzVideo: Max Berkowitz

### Top Comment:

Living in Utah is pretty crazy.  I can ride my bike and go snowboarding in the same day.

I've ridden my bike almost every week this winter.

### Article Summary: 

Movies For Your Monday - Pinkbike: Ten Years After - Pierre-Edouard Ferry 10th Anniversary: The year 2023 marks a decade of Pierre-Edouard FERRY's presence alongside Commencal. From the dirt jump trails of the Monts du Lyonnais to the slopes and canyon gaps of Virgin Utah and the Red Bull Rampage, PEF revisits his classics to celebrate 10 years of trips, videos, and shoots. PEF is fully recharged and ready to go for another 10 years! Directed by: PEF & Leon Perrin.Caleb Holonko Taming The North Shore’s Slipperiest Roots: Caleb Holonko has made a name for himself in 2022, releasing videos that show his style and ability to go huge. We teamed up with him to create a new video showcasing his ability to stay upright when the ground gets slippery.Made In - Milano: The story behind the legendary Italian titanium frame building company Passoni. Written, directed, and shot by Michiel Rotgans.Marek Turkiewicz - Doing Things I Never Dreamed About: In early 2022, we received an email from Marek asking for a single shoe and pedal. We were intrigued. What we would come to discover was the story of a remarkable individual who, through unbelievable adversity, had never uttered the phrase "give up." This is Marek's story.1.2 - A Year On Film: The 1.2 Project represents a year-long challenge that filmer Satchel Cronk and rider Leah Lind-White set out to achieve in 2022. Each month they'd create a unique perspective on mountain biking. Whether it was night riding, the joy of bike maintenance, riding through reforestation, or a great ride turned into a crash, each month brought a new topic. Leah's effortless style on her bike and Satchel's unique filming and editing style made this project one of the most entertaining we've come across in a long time. 12 months. 12

### Top Comment:

Kudos to Marek in “Doing things I never dreamed about”   Such an inspiration.

### Article Summary: 

The Luca and Lucas Experience: Making Of - Pinkbike: If you live in San Deigo and you ride Downhill, chances are you've heard of Lucas Cowan and Luca Cometti. At the surface, their race results and sponsor list might denote serious race training and temperment. That is not the case.......The majority of the shoot was filled with screeching, checking out babes, riding the stairs of the San Diego Convention Center, and general shenanigans.The long days of shooting resulted in some amazing artificial lighting!Luca and Lucas aren't always joking around, as soon as they get onto bikes they begin to slay every feature in sight with speed and style.Luca Slayin' it!Our film and photo crew was blown away by the amount of crazy riding they produced, they really are all killer no filler. When the boys aren't messing around or ripping they also happen to be some of the best trail builders in Socal. Their skills as builders and hard work over 4 years has resulted in a set of amazing trails to ride and film, which they take advantage of to hone skills and enjoy with friends. Socal DH riders owe these gentlemen a debt of gratitude because they maintain just about every halfway decent trail in the area, as well as building most of them. All their hard work and excessive perspiration culminated in the video we would like to bring you today, The Luca & Lucas Experience.

### Top Comment:

Rad shit! Keep it up

### Article Summary: 

Bird Gravity Enduro Welsh Open EWS Qualifier - Pinkbike: Lewis Bradley brings you the video of his hi's and lows from the weekend.The Enduro World Series is the pinnacle of the Enduro racing world and every year thousands of eager riders join the lottery to get a place on the EWS circuit. With the lottery system, it is an errr… lottery!? For 2017 there are 42 EWS Qualifier races taking place all over the world. Three of which are in the UK, the second of which just happened in the ethereal Dyfi forest in North Wales. Based out of the town of Machynlleth this race was also the first ever Welsh Open. Organised by Welsh Gravity Enduro® and sponsored by Bird Cycle Works whilst also encompassing the Welsh Champs 2017.The weather gods shined on us, with four days of sunshine leading up to the race, then some light rain Friday night and Saturday morning. Those wishing to practice early Saturday found it somewhat slippy. But as forecast… the rain stopped bang on 13:00 and the sun came out for the remainder of the weekend.The Welsh Open consisted of five stages, all very different in their character. Stage 1: freshly built for the race a couple of months ago and completely unridden prior to the event due to being private land (bar myself and the dig crew), started on the top of a gorse laden hill where going off line was not an option, a couple of punchy climbs and some field turns, before dropping into a bluebell strewn fairy woodland where during the weekend virgin grass would give way to modelling clay berms, a couple of steep corners and one straight chute and you were at the finish in just shy of three minutes, this was flow in its physical

### Top Comment:

Should Rach be allowed to enter in 'Sport' class?!Training for the next Dh race and not taking it too seriously I suppose, but certainly removes the chance for the other women to take a win!

### Article Summary: 

Poll: Once and For All, How Much Should a Mountain Bike Weigh? - Pinkbike: Bikes have changed a lot in the last 5 years. They're undoubtedly better, but also often heavier. So, how much should a bike weigh? And what constitutes being heavy, and what is considered lightweight? Well, it's time we all decided and finally drew a line in the sand which can act as a yardstick in the future. This isn't How much does your bike weigh? or How little could a bike weigh? but rather how much should a new, middle-of-the-road and off the shelf bike tip the scales at in 2021?I've divided this into four sections, each with its own brief description. I've even included my own estimate of what I consider a fair example. Right then, let's settle this - where does the line lie between light and heavy? How much should a bike weigh?Enduro A bike that is meant to be ridden hard. This bike should be able to ride an EWS course one day and then a 5,000 ft day of climbing the next. I'm thinking thick tires, big brakes and a burly build. My estimate: 35lb / 15.9kg. How much should an enduro bike weigh? Rounded to one decimal place. Less than 30lb 30lb / 13.6kg 31lb / 14.1kg 32lb / 14.5kg 33lb / 15kg 34lb / 15.4kg 35lb / 15.9kg 36lb / 16.3kg 37lb / 16.8kg 38lb / 17.2kg 39lb / 17.7kg 40lb / 18.1kg More than 40lb Responses: 20788 Faves: 0 Comments: 0 Downhill A bike that is never intended to go uphill, but does that mean that weight doesn't matter? Inserts, downhill tires and maybe even a coil shock. My estimate: 37lb / 16.8kg. How much should a downhill bike weigh? Rounded to one decimal place. Less than 30lb

### Top Comment:

I just put in my bike weights because obviously I am doing things correctly, and everyone else is doing them wrong

### Article Summary: 

Tilton at Highland Merit Scholarship Program - Pinkbike: Highland Mountain Bike Park in association with the Tilton School are proud to announce the Tilton at Highland Merit Scholarship Program. The merit scholarship is available to students looking to attend Tilton School and train at Highland Mountain Bike Park’s premier facilities.Applicants must create a video application telling us “What I believe in most…” and submit it by January 31st, 2014. Videos can be shot in any format on any type of device, and uploaded to a publicly accessible online player (PinkBike, YouTube, Vimeo, etc.).Visit: TiltonSchool.org/admissions/financing/scholarships for full details on how to apply. For more information on the Tilton at Highland Program visit: AyrAcademy.com/team/tilton-at-highlandScholarships range from $5,000 to $15,000. Winners will be notified by the Tilton School directly.HighlandMountain.comTiltonSchool.orgPhotos: Dave Smutok

### Top Comment:

Awesome! Tilton is a fun town, I wish this was available growing up.

### Article Summary: 

Devinci's New Troy - Crankworx Whistler 2015 - Pinkbike: Troy Gets RebuiltCanadian company Devinci is updating their 140mm travel Troy platform to better suit more aggressive riders. The basic lines will look familiar compared to last year's bike, but every element of the frame has been re-designed in a search for increased chassis rigidity and updated geometry that includes a much longer front end than Devinci's bikes have featured in the past. Devinci will offer both carbon and aluminum versions of the new Troy when the bike becomes available this coming November, as well as a frame-only carbon fiber and aluminum options for those who want to build it up to their own preferences. Devinci Troy Details• Intended use: trail / all-mountain• Rear wheel travel: 140mm• Wheel size: 27.5"• More progressive suspension• All new frame • Carbon and aluminum options• Longer reach, shorter rear end• Internal cable routing• ISCG 05 chain guide tabs• Carbon frame 1X only Longer and StifferWith the original Troy, Devinci found that the 140mm travel bike was often being ridden by downhillers as an aggressive trail machine, something that led these riders to spec the bike with things like shorter stems and wider handlebars than what it originally came stock with. It was clear that the next generation Troy would need to be designed with these points in mind, and that's exactly what Devinci have done. So while the old medium sized bike featured a 415mm long reach in the 'LO' setting, the new Troy sports a 440mm reach and will come from the factory with a short stem and either a 780 or 800mm wide handlebar depending on the model. The 67 degree head angle remains the same as last year, though, as that number suits the 140mm travel bike's intentions as a burly trail

### Top Comment:

''Longer and Stiffer'' ...  giggidy

### Article Summary: 

Galfer Release New Disc Shark Rotor With Bold Claims - Pinkbike: You might have heard of thicker rotors, you might also have come across finned rotors. Well now, Galfer is offering both with their new Disc Shark concept.It differs slightly from something like the 2.3mm TRP rotors or indeed the Ice-Tech rotors from Shimano, but could be said to have traits from both. The new rotors measure just over 2mm (2.05mm by our measurement). Rotors often used to be built to be around 1.8mm width at the braking surface, but in recent years we've seen this increase. This increase is largely to help resist heat build-up, but could also help reduce flex under heavy braking load.Galfer's rotors go even further by extending the design to include a finned aspect. The added mass of the one-piece rotors should not only help keep the high temperatures at bay but the increased surface area should also act as a heat sink, and also help the rotors lose heat by causing more airflow disruption as the wheel spins. The pattern of the rotors features a clearing gap that alternates with blocks of 12 smaller holes along with the rotor. These smaller holes should again increase surface area and cooling. Galfer claims this design gives a 30% reduction in operating temperature compared to other high-end discs currently on the market. They also claim that these discs, with the lower running temperatures, could help increase the life of your brake pads by 25-40%.Galfer also says that the design of the rotor means that less pressure is required in the brake line under the most fatiguing conditions, meaning less effort is required to brake. This, they say, translates into a 5-10% increase in braking power under normal conditions, although they don't stipulate exactly how.The rotors use a

### Top Comment:

Are the small XC rotors called baby Shark, doo doo doo doo doo doo?

### Article Summary: 

BC Bike Race - The Seventh Season - Pinkbike: The BC Bike Race is ready to roll with a stacked roster of singletrack hounds salivating at the mouth to get out and race the ‘Ultimate Singletrack Experience’. Day one begins June 30th in Cumberland and finishes in Whistler on July 6th, 2013.Year seven will see few changes to a course that has been tweaked to perfection over the previous six years. Each town along the course provides a large selection of ‘handmade’ trails that have for 359 days or since the last edition received some serious trail attention; buffing, shaping and carving the legendary trails into premium condition for this the 2013 alumni’s adventure.A thin brown ribbon of singletrack leads the rider through a lush forest of electric green.The Enduro is back, 13 chip timed special segments will highlight some of the best descents of each stage. Ranging in length from 1 km’s to 2.5 km’s the Enduro ‘the race within the race’ will continue to reward the technically savvy over the engine only types. While registration takes place in North Vancouver July 28 and 29, the 550 racers from 26 different countries will hit the dirt, flowing singletrack in Cumberland. From there the journey will unfold crossing the Pacific Ocean three times on the BC Ferries, visiting Campbell River, Powell River, Sechelt and Squamish to it’s conclusion in Whistler BC.Last year's champions Neal Kindree and Wendy Simms will take on challengers from all over the globe as they defend their right to wear the leaders yellow jersey on the final podium.Top Male Competitors:Neal Kindree – Defending his 2012 BCBR title as the fastest man over seven days of singletrack. Neal hails from the local town of Squamish and has been a member of the Canadian National Team. Matt Hadley

### Top Comment:

I know they probably bumped the contrast on those photos, but holy shit B.C looks beautiful

### Article Summary: 

Movies For Your Monday - Pinkbike: Keep it Real - Matt Macduff/JP Maffret Segment: A heavy hitting split segment from Keep it Real movie.Another Year of Adventure: 2015 in a nutshell. Thank you to the sponsors who supported me through it. Riders: Ray George, DJ Brandt, Brayden Barrett-Hay, Liam Wallace, Reed Boggs, Max Fredriksson, Adolf Silva, Eric Walenta, and Ricky Grimal. Macro Genesis - A Bike Comes to Life: Sometimes the devil is in the detail. Or the beauty. We took a set of macro and tilt shift lenses to bring you a different perspective of setting up a mountain bike. Thanks a lot to Hensel Light and Isarfoto Bothe for the support on this project! This video is produced by Moment Pictures.Dylan Emmerson Shredit: Dylan Emmerson riding his local mountain. Zack Knudson: Fall shred in the Pacific NW.Fall Lines - Justin Hoelzl: Riding some of my favourite trails that good friends have built and some of my personal trails throughout CT and NY.Dreaming of Out There: ''Out There,'' one of the most beautiful bike trails in Whistler. Worth checking out...2015 Demo Reel: The 2015 season featuring: Max Langille, Riley Sobush, and Evan Wall.A Mountain Biker's Valentine: Although they are expensive to maintain, they always want to be with you. Rider: Jackson Hare. Producer: Jackson Parker.Downhill Dash - Rotorua Bike Festival: A straight sprint down Old Exit brought out Rotorua's finest riders and canines alike. A dog friendly gravity race, the first of it's kind. Even with a cruisy event atmosphere sub two minute times were thrown down with Mocha Coker taking the canine honours!Gemma Corbera - 2015: The best moves from Gemma's 2015 season.DH with Dave Watson: World Sport catches up with mountain bike legend Dave Watson, as he discusses the development of downhill and how the advancement of

### Top Comment:

I had a skater friend tell me skating is easier than biking. He doesn't know how we do bunny hops and jumps and he insisted kickflips are easier. I cannot for the life of me do anything on a skateboard. Have nothing but respect for the guys pushing street like that. Aaron is a animal.

### Article Summary: 

O’Neal Launch 2021 Riding Apparel Collection - Pinkbike: Press Release: O'NEALAs the seasons shift from Summer to Fall for many of our riders the weather can be unpredictable – warm with clear blue skies one day; colder and even raining the next. As the first of our 2021 collection starts to land we’ve got both outcomes covered…Summer, Fall and even Winter riding…for the trails, bike parks or even racing as events start to open up again finally in many places.2 exciting new developments for 2021 – the PUMPS and SENDER PRO – both answering questions we’ve had from our riders over the last couple of years:With the PUMPS Shoe we bring a shoe that is as technically competent as any other flat shoe in the range but with more casual styling can be worn all day with jeans making a true one-stop solution for not only your riding shoe needs but possibly all your shoe needs!The SENDER PRO Shoe brings our micro-adjust ratchet lacing system to a flat shoe for the first time. We’ve often heard riders ask why this lace closure system is often only available on SPD shoes from O’Neal and most other brands yet we see at least as many if not more riders wearing flat shoes compared to SPD these days. The SENDER PRO offers all-over protection and the lacing gives the perfect tailored fit and quick-release – the perfect all-round race and riding shoe for the serious rider who demands the best.⮕ EXPLORE THE SHOE RANGEFor many the onset of winter is just around the corner. Our new WINTER WP and WINTER Gloves offer maximum protection from the elements – both warmth and water-resistance and waterproof protection. When paired with our RAINWEAR Collection you’ll be covered whatever the weather throws your way.⮕ EXPLORE THE RAIN-/WINTER

### Top Comment:

What's with those detail pictures but not showing the compete pants/jackets? Is that just to improve traffic on their website?I've been thinking about buying their kit for around two years but something is holding me off.

### Article Summary: 

Mark Scott's Santa Cruz Hightower LT: EWS Bike Check - Crankworx Whistler 2017 - Pinkbike: BIKE CHECK Mark Scott's Hightower LTMark Scott hails from the Edinburgh region in his namesake country. The Santa Cruz ripper transitoned from downhill racing to the Enduro World Series and never looked back. He likes tough courses and mach speeds, so the Whistler Crankworx EWS should be as perfect a race as the Scottish lad could wish for. PB photographer caught up with mark in the pits for a pre-practice bike check of his Santa Cruz Hightower LT and a conversation about how he plans to keep it in one piece come race day.For the record: Mark is five-foot, nine inches tall (174 cm), weighs near 150 pounds (68kg) and rides a large-size frame. So, you’re going to be on a Hightower LT. You’ve been on a 29er all season, right? Scott: Almost two years now, actually. Any special tires for Whistler?Scott: Downhill Minion DHFs 2.5, front and rear. I use 22psi in the front and 24 for the rear tire. So, you are sponsored by RockShox, right? Any custom tuning?Scott: Yeah, I have the new Charger damper in the Lyrik fork and there's a Monarch Plus in the rear—I just ramp it up with a load of tokens for these faster tracks. There's maybe five or six in there. That's a monster chainring for Whistler, Any other components we should know about?Scott: It's a 36. Yeah—the biggest one I can find. Brakes are the new SRAM Code RSCs with 200-mm rotors. My bars are Descendants, cut to 760 millimeters. How are those new wheels working out? Scott: Yeah, the new Santa Cruz wheels. They’re sweet. We have the 30s on now. We had the 27-millimeter ones, then we got a hold of these. They’re

### Top Comment:

last time I came this early my girlfriend left me...

### Article Summary: 

Update Interview: Rachel Atherton - "I Didn't Want to Look Down" - Pinkbike: Rachel Atherton came into Les Gets second in the women's series with the momentum of a win in Vallnord driving her forwards. Unfortunately, that all came to a grinding halt on the final jump of the track after a heavy landing led to her snapping her Achilles tendon. We've all seen the brutal footage she later posted on her Instagram but we decided to catch up with her on the opening day of DyFi bike park, where she was taking on her new role doing sign ons, to get the full lowdown on her injury and what happens next. Talk us through it. It was first practice wasn't it? Yeah, first practice day on the Thursday. I'd done a couple of practice runs down the course and I was loving it, really excited but trying to contain myself and not hit everything first run. It was the final drop into the last few corners before the finish, I didn't even register in trackwalk that it was a big jump or that it might be hard, and then our junior Mille Johnset, had a really big crash on the jump in morning practice. Yeah, she's a really good jumper too. Yeah, she's from Hafjell in Norway and has been sending the massive jumps since she was like 10 or 11 years old. She knows what she's doing. link="https://www.w3.org/1999/xlink"> View this post on Instagram A post shared by Mille Johnset🖤 (@millejohnset) Did that ring any alarm bells for you? Yeah, I was like shit, maybe it is hard. It was just a super flat landing, a bit ridiculous really. Apparently, the French are not very good at building jumps, I didn't know that, I just learned that afterward (laughs).

### Top Comment:

Crib notes for building a DH track:Flat turns - goodFlat landings - bad

### Article Summary: 

Homemade in Queenstown - Video - Pinkbike: UK riders Harry Steer and Dom Knight putting together their GoPro clips from their season in Queenstown. With almost 700 laps between them and no camera skills what so ever... Here's their edit 'Homemade' presented by Do It Yourself Media. Rider: Dom Knight | Photo by: @martinrojosphotoRider: Dom Knight | Photo by: @martinrojosphotoRider: Harry Steer | Photo by: @doityourselfmediaRider: Harry Steer | Photo by: @doityourselfmediaMENTIONS: @domknight10

### Top Comment:

Savage cunts

### Article Summary: 

Tenerife: The Shadow of The Volcano - Video - Pinkbike: This adventure begins in the Teide, the highest peak in Spain and the third largest volcano on earth from its base on the ocean floor. When you are looking for new biking adventures, sometimes all you want is that the sun caresses your leathery face. This time the fervent pursuit of the hot sun took us to the Canary Island of Tenerife. A truly earthly paradise where winter and summer almost shake hands. When the sun was already reflected in our faces and everything seemed to flow with an island tranquility, suddenly, a huge shadow loomed in front of us. It was the Teide and it was not willing to deviate from our path, I assure you. So we had no choice but to go around him at any price. Our adventure began in the highest part of the island, the volcano known as Teide. As I said before it is listed as the third largest volcano on Earth if we start the measurement on the ocean floor and it is also the highest peak in Spain at 3718m. Staring up at Teide is impressive, majestic and as impressive as any peak I would say. After enjoying the landscapes that seemed to be taken from another planet as we breathed in the fresh air and walked between long since cooled lava fields we couldn't help but feel like tiny beings inside the great magnitude of the environment that makes up the Teide National Park. Which has been declared a World heritage Site by UNESCO. We also needed to try one of the great claims of the island. A typical meal at the Parador Nacional del Teide. Tenerife is very rich with amazing gastronomic wealth. Dishes like the canary ranch, soup

### Top Comment:

skilled rider but awful and boring vid, sorry

### Article Summary: 

Team Psynyde at Bangalore Mountain Festival 2017 - Video - Pinkbike: Avathi Hills in Karnataka, India has become the landing zone for some of the top Indian and Nepalese Downhill racers.Isuzu Motors India threw in a truck for the weekend.Team Psynyde's racing star Harith Noah of Kerala was blazing all day during practice.Fish bone ladder bridges are Bangalore Mountain Festival's trademark! Harith coasting.The rock garden was full of sneaky lines to save time. Harith Noah making full use of the rock poppers.Pune's Ajay Padval was part of the track design team at BMF 2017. Testing the drop zones in practice.A berm or a wall ride? A rock slab! Ajay Padval sticking on the wall in practice.Ajay raced to a podium finish on his old horse. Photo: Utkarsh Rao.Meghalaya's Gregory Warjri came all the way to south India only to race at the Bangalore Mountain Festival and that, on his new bike he won in the "Psynyde Bikes Ride On" Contest.Putting the new bike to good use, Gregory launching off the drop on course with ease. Photo: Utkarsh RaoThe podium at Bangalore Mountain Festival 2017 saw new names in the mix.Nepal's National Downhill Champion Rajesh Magar was the king of the day. Followed by Harith Noah in 2nd place and Ajay Padval in 3rd, Rugved Thite in 4th and Piyush Chavan in 5th. A good start to the season for Team Psynyde. More Continental Championships and National level races in store for 2017. MENTIONS: @menon

### Top Comment:

Ow yeaa!!

### Article Summary: 

Review: WTB's New CZR i30 Carbon Wheels - Pinkbike: WTB launched their CZR rims late last season, but at the time there weren't any pre-built wheel sets to go with them. That's not a big deal if you're a wheelbuilding wizard, or have a trustworthy mechanic at a local shop to turn to, but not all riders have the skills or patience to go that route. That's why WTB now offers the CZR i30 wheels, which use those distinctive-looking carbon rims laced up to WTB's Frequency hubs with 28 double-butted spokes and brass nipples. The 29” wheels are aimed at trail and enduro riding, and according to WTB, they were designed with a focus on strength rather than achieving a specific weight target, although the 1884 gram figure on the scale is fairly typical for carbon wheels in this category. CZR i30 Details• Intended use: trail / enduro • 29" only• Carbon rims, asymmetric design• 30mm internal rim width• 28 spokes, brass nipples• WTB Frequency hubs, 5-degrees between engagement points• Weight: 1884g; front: 871g / rear: 1013g• MSRP: $1,600 USD• www.wtb.comThe front wheel is priced at $749.95, and the rear goes for $849.95, with either a SRAM XD or Shimano Microspline driver body. WTB covers the wheels with their 'Ride With Confidence Guarantee', which says that if the wheels break during a ride then they'll replace them for free. The terms are a little different if you run them over, or forget they're on your roof when you hit up the Wendy's drive-through. In those cases, WTB offers the rim replacement for 50% off of MSRP. DetailsAs the name implies, the CZR i30 rims have a 30mm internal width, and use a hookless bead. The spoke holes are reinforced with a raised, diamond shaped section of extra carbon to help

### Top Comment:

Alternate use #1: spin the rear wheel fast enough to shred lettuce to make a perfect CZR salad.Bonus: Dressing will also lube your drivetrain.

### Article Summary: 

World premiere of New Clay Porter Movie - F1RST - Pinkbike: Clay Porter and Distinction Productions are proud to announce that the World Premiere of F1RST will take place on Friday, April 18, 2008, in Monterey, California. The World Premiere takes place during the week of the Sea Otter Classic, and will get underway at 8pm at the majestic Golden State Theatre.F1RST is the highly anticipated follow up to the 2007 runaway success "Between The Tape", and like BTT is a documentary, about the sport of downhill mountain bike racing and specifically the 2007 World Cup Series. FIRST was shot in stunning locations all over the world including South Africa, Australia, and from the USA to Eastern Europe and the UK. The feature length movie highlights the world's greatest downhill racers both on and off the course, praising their race abilities and nudging them into candid interviews about their lives and their first experiences with the sport. F1RST breaks new ground in documenting the extreme and comparatively young sport of downhill mountain bike racing, and does so with a depth and intensity not seen in the sport. Porter's directorial vision has taken F1RST to another level. The images captured throughout 2007 are simply remarkable. Featuring the stars of the sport such as Sam Hill, Steve Peat, Greg Minnaar and the accomplished Atherton family, the film also taps into the lesser known world behind the scenes of mountain bike racing, and some equally remarkable athletes who are about to explode onto the scene; their back-story is fascinating. To date, the film has already received financial support from the bike industry; in particular Fox Racing Shox, Santa Cruz Bicycles, Troy Lee Designs, decline Magazine, adidas eyewear, FUNN Mountain Bike Components, and e.thirteen Components. The World Premiere is a ticketed event with limited

### Top Comment:

looking forward to it. BTT has yet to leave my DVD player since i got it. 

thanks clay for making sick videos!!!

### Article Summary: 

Review: Look X-Track En-Rage Plus Pedal - Pinkbike: Look's new X-Track En-Rage pedal comes in two widths: 63 millimeters for trail and 67 millimeters for gravity and enduro applications. We review the Plus here, which is the wider of the two options. Look makes no apologies for the likeness to Shimano's SPD trail pedals, and in fact, the French brand utilized the same basic engagement mechanism and their X-Track pedal cleats are interchangeable with Shimano cleats. Those are good things. They began with a design that has never been exceeded for reliability or durability - and, according to Look, their X-Track En-Rage pedal also touts some substantial performance improvements over Shimano's gold standard trail pedal.X-Track En-Rage Plus Details: • Purpose: AM/enduro• Forged aluminum body• Wide platform: 67mm wide, 92mm long• 2 adjustable forward pins • Adjustable release tension• 6-degree float/13-degree release• Cleat interchangeable with Shimano• Weight: 450g/pair• Gold or black• MSRP: $130 USD• Contact: Look CycleFeatures Before most mountain bikers were born, Look pioneered what would become the most successful clipless pedal design for road racing, and later, fielded the first dedicated clipless MTB pedal. That said, Look has since produced a handful of off-road pedals that never managed to capture the imaginations of mountain bikers. Their latest X-Track Series pedals, however, could reverse that trend. For starters, Look followed Shimano's lead on both the engagement mechanism and the cleat. That means you should be able to bash X-Track pedals mercilessly into rocks without phasing their ingress or release pressure. It also means that you'll be able to adjust your release tension, and like Shimano, Look offers an easy release cleat that should make mid-corner foot dabs easy shmeazy.Larger platform: Look has a lot to say about their expanded platform. Reportedly, the widest Plus option sports 664 square millimeters of

### Top Comment:

While I am a full believer in any SPD system as they do not chew up the soles of your shoes like the rails on crankbrothers pedals do and hence will provide a slop-free interface, the most underrated feature of Shimano's pedals is that the bearings have been indestructible. I haven't had to maintain or buy new pedals for my mountain bike in 6 years... Before I was trashing a set of CB's every season.

### Article Summary: 

Contest Closed: Win a Bike Park Trip of a Lifetime in the US & Canada - Pinkbike: A Dream Trip for You and a FriendWith four stops in the USA and Canada over 12 days, this will be an action-packed Bike Park Trip of a Lifetime. You will ride some of the best bike parks in the Northern Hemisphere with stops at Trestle Bike Park, Northstar California Bike Park, Big White Bike Park PLUS a bonus day at Whistler Mountain Bike Park in time to catch all the action at Crankworx. Read the following press releases to discover what the lucky winners will get to experience.Trestle Bike Park A temple for all things two wheeled, Trestle Bike Park is a mountain biker's paradise. Over forty miles of gravity fed goodness. Three full time lifts. Twilight hours all weekend. 600+ miles of additional trail right next door. Can it get any better? We submit that it cannot! In a park that is built to challenge and hone skills, a full time trail crew expertly maintains our beloved dirt. Come ride everything from beginner flow trails and progressive jump lines, to technical downhill and our signature wood features. No matter your riding level, our coaches and camps can get you started on the right foot, or help you take your riding to the next level. The party starts June 15th, and lasts all the way till October. This summer Trestle Bike Park will see our largest trail expansion in recent memory, as well as host the USA Mountain Bike Nationals. You ready? We are. Your wheels. Our Dirt. It’s time to ride your damn bike!Northstar Bike Park Northstar California is the largest lift-served bike park in Lake Tahoe. With some of the most exciting and challenging terrain in the country, Northstar is

### Top Comment:

Those are the worst pictures of Northstar I've ever seen

### Article Summary: 

BMX Dominates Parkour Ride - Pinkbike: BMX Supercross champion Liam Phillips rounded off his season by becoming the inaugural Parkour Ride champion in London this weekend. Phillips beat Ryan Stack in the best of three final with fellow GB BMX professional, Tre Whyte, rounding off the podium in third place.The event saw amateur and professional road, BMX and MTB riders racing on a specifically designed circuit in the multi-storey car park at Tobacco Docks in East London. Twenty amateur riders qualified for the evening elimination tournament where they came head to head with ten pro riders including Phillips, David Millar and MTB Downhill World Champion, Manon Carpenter.On his way to the final Phillips had to beat tough competition eliminating Manon Carpenter in the quarter finals and Tre Whyte in the semis before meeting the young BMXer Ryan Stack in the final. Phillips showed the form that helped him become Supercross champion getting faster as the competition progressed eventually setting a course fastest lap of 50.60 seconds.Nearly 1000 spectators packed into the venue to watch the action unfold and organisers are already making plans to develop the concept in 2015, “We’re really pleased with how it went and the first event was always going to be a proof of concept” said MD of Face Partnership, James Pope. “We learnt a lot and have had some great feedback so we are already making plans for the next event and will continue to work closely with Liam Phillips and other riders to develop the Parkour Ride format in 2015.”For full results, images and GoPro footage from the event visit www.parkourride.com and follow @ParkourRide.

### Top Comment:

Done my best I could do on a 650b. Would have been nice for a mention....

### Article Summary: 

Lezyne Expands Collection of GPS Computers - Pinkbike: PRESS RELEASE: LezyneWe have once again stepped up our offering of GPS cycling computers. Utilizing our in-house team of cycling focused engineers and programmers, our continually evolving line of cutting edge cycling computers offers a device for any type of cyclist.While our Mega XL GPS and Mega C GPS units remain atop the collection, the two existing models have been greatly improved. And a new, simpler device has been developed called the Macro Easy GPS.Cedric Gracia's Macro Plus-equipped Forestal. Photo by Sam Decout.The existing, mid-sized Super GPS and Macro GPS models have both been significantly overhauled. Now named Super Pro GPS and Macro Plus GPS, each feature a completely redesigned body, improved screen sharpness and added features.The all-new Macro Easy GPS was developed for simplicity and ease of use. While still offering a fully functional GPS recording system, much of the extensive features our other devices offer have been paired down to just the essentials. Our goal is to offer a device for the user that just wants to press start, ride and record the basic cycling metrics.Super Pro Details • Improved screen resolution and hardware from Y10 Super GPS.• Detailed map screen.• Optional horizontal orientation.• Longer battery runtime (up to 28 hours).• New sleeker aesthetics & buttons.Battery Runtime: 28 HoursMemory: 400 HoursConnectivity: ANT+ & BTLEScreen: 32.6mm (W) x 39.8mm (L)MSRP: $149.99View Product on Ride.Lezyne.comThe completely redesigned Super Pro GPS cycling computer is an excellent choice for all riders looking for a full-featured, mid-sized device. New styling gives the device an enhanced look and feel, and it can be rotated horizontally for those that prefer a landscape view. Its screen has improved resolution and contrast and it now features a map page for a much better navigation experience. The device’s firmware has

### Top Comment:

Any luck on getting trailforks maps on the super pro?

### Article Summary: 

Eric Porter Interview - Sea Otter 2011 - Pinkbike: To learn more about Eric, his new team and Diamond Back bikes please visit www.diamondback.comStay tuned for more from Sea Otter!

### Top Comment:

Damn I want a sponsorship were i get free bikes and trips to Virgin, NYCE!!!!!! Porter is el Badass

### Article Summary: 

Good Friends, Good Dirt, Good Times in Queenstown - Video - Pinkbike: Once again, a Queenstown "lifestyle" edit. Six months of a long and crazy summer, the same scenario, over and over again: good friends, good dirt, good scenery, and good fun! It doesn't get any better than this, and should make you remember: it's always summer somewhere!MENTIONS: @luckyfactory

### Top Comment:

Awesome edit! I'm there now and the riding is amazing! Too bad I crashed last week though, haven't been able to ride ever since. Vids like this one make the not riding a bit more bearable!

### Article Summary: 

Pinkbike Video of the Year - Last Hours to Vote - Pinkbike: 16 peeps just added a Contour Roam camera to their prize pool and are now fighting it out to get to the elite 8. March Madness continues on Pinkbike with the next round, so make your voice heard in round 2 Check out over $40,000 in amazing prizes for this year's Video of the Year contest.

### Top Comment:

Akrigg out! How is that possible? Favourite video of them all.

### Article Summary: 

Live to Ride - Episode 6 - Pinkbike: Here it is, the final episode in the Live to Ride series - The First Days of Spring. Winter has flown by and Spring is on our doorstep. This month we caught up with Matt Simmons for a little pre-season training and went back to Woburn for a session with some friends we've met along the way.This series has been tough. Getting up at 7am on a Saturday twice a month during the coldest part of the year to go and ride non stop for six hours does eventually get quite tiring. That said, it has all been 100% worth the effort and I would do it again in a heart beat. All six episodes have turned out exactly the way we wanted and the hard work has paid off. Now it's time to use all the skills I've gained over the Winter to improve my race results over the Summer.I love racing. I think it's at the heart of my passion for the sport simply due to the buzz generated by riding out of your skin for a weekend. When you make a sport competitive, everyone ups their game. People start riding lines and hitting jumps that they would normally avoid and all to shave a few seconds off their time. Matt Simmons is probably the most accomplished rider I've spent time with and that time was invaluable. From suspension setup to cornering technique, I learned tips that I've used at every race so far and hopefully they will improve my results over the season. Matt is a none stop power machine! He never lets up, always pushing as fast as he can on every trail and every jump. For that reason alone, he is a fantastic person to film with,

### Top Comment:

Did anyone else notice he didn't wear a leatt brace the whole vid?.

### Article Summary: 

Middleburn RS8 X-Type Cranks - Reviewed - Pinkbike: Middleburn RS8 X-Type CranksBeing from the British Isles you might expect me to rave about how good Middleburn products are, and on one point you'd be right. But it's not because I'm British that I do this, definitely not. Give me something made and designed by a monkey in the swamp of a far flung land and I'll use it and recommend it, but only if it's actually any good. If it's not then it either doesn't get used or we say it isn't any good. In the case of Middleburn I have bought products of theirs in the past with my own money and, in the case of their RS7 cranks, have raced downhill on the same pair since the start of 2006. Five years of solid abuse on the same set of cranks is good in anyone's book. Unfortunately, whilst these cranks are superb, the bottom brackets they use are less so and, in the case of 83mm bottom bracket shells, not the easiest to track down. Two bottom brackets a season has been the average and this is far from ideal when they're not exactly cheap. So it has been with baited breath that we eagerly awaited the release of the new external bottom bracket compatible cranks.Middleburn's RS8 X-Type cranks have been greatly anticipated by downhillers and trail riders alike.Middleburn RS8 X-Type details:- Hot-forged from 7075 T6 aluminum- External bottom bracket- Length options: 175mm, 170mm- The RS8 is designed to work with bottom bracket with a 24mm ID this is the size of Shimano and many other after market companies like Hope and chris King.- LIFETIME warrantyWith Middleburn, everything except for the crank arms is open to change and custom spec'ing, so we'd best start with the basics. With

### Top Comment:

1. The crank arm looks like a turd2. Great, another proprietary "standard". Wonderful.3. In typical Pinkbike fashion the 'review' sounds like a thinly veiled advertisement. I found a single "negative" point in the whole post (the lack of BB) and even that was spun in such a way that it could be taken to be a good thing, because it keeps the price of the cranks down!

### Article Summary: 

Review: Mondraker’s 2020 F-Podium RR is a Rapid XC Racer with Great Handling - Pinkbike: REVIEW Mondraker F-Podium RR Reviewed by David ArthurThe Mondraker F-Podium RR is an all-new cross-country race bike from the company best known for popularising the long, slack and low geometry with its longer travel models like the Foxy and Dune. But there’s clearly XC blood in the Spanish company (it has already produced a hardtail) and the new F-Podium RR is designed around 29” wheels, 100mm front and rear travel, a light and stiff carbon fiber frame, swingarm and rocker linkage, and the sort of progressive geometry you’d expect given this company’s reputation and the current trend for XC race bikes. But above all else, it's designed to be fast, seriously fast. The F-Podium comes in several builds priced from €4,999 to €10,999, but showing a modicum of conservatism, I’ve been riding the second-tier €8,999 F-Podium RR. It’s packing some serious kit, including a Fox 32 Step Cast FIT4 fork and Float DPS shock, Shimano XTR M9100 12-speed transmission and brakes, DT Swiss XRC1200 Spline wheels and carbon fiber handlebar and seat post. There are four sizes, and the size large pictured weighed a scant 22.10lb on the scales.Mondraker F-Podium RRIntended use: XCTravel: 100mmWheel size: 29"Frame construction: Stealth Air Full CarbonSuspension: XCO Optimized Zero SuspensionHead angle: 68ºReach: 480mm size LargeSizes: S, M, L, XLWeight: 22.1lb (10 kg) - size large, w/o pedalsPrice: €8,999More info: www.mondraker.comIt’s just really good fun, I can’t remember the last time I had this much fun on an XC race bike."— David ArthurContents• Construction & Features• Geometry & Sizing• Suspension Design• Specifications• Test Bike Setup• Climbing• Descending• How Does it Compare?• Technical Report• Pros & Cons• Is this the bike for you?• Pinkbike's Take

### Top Comment:

Can pinkbike get reviewers that actually race XC and understand race bikes ffs?

### Article Summary: 

Qualifying Analysis from the Loudenvielle DH World Cup 2023 - Pinkbike: With qualifying all wrapped up riders now await a packed day of semi-finals and finals in France on Sunday. The fresh course in Loudenvielle is already offering some great racing as the flat-out and open top section lead into some of the steepest sections of track ever seen at a World Cup.As riders prepare for a big day of racing on Sunday, let's get into the results and stats from Qualifying.Qualifying ResultsOverall:Elite Women1st. Vali Höll: 3:57.9772nd. Nina Hoffmann: 3:59.2393rd. Marine Cabirou: 4:04.2824th. Lisa Baumann: 4:06.1375th. Mille Johnset: 4:10.040Elite Men1st. Benoit Coulanges: 3:29.3792nd. Loic Bruni: 3:30.0273rd. Thibaut Daprela: 3:30.6094th. Andreas Kolb: 3:31.1655th. Finn Iles: 3:32.028Full results, here.Sector by Sector ResultsOverall Split PositionsElite WomenSector 11st. Vali Höll: 45:0342nd. Mille Johnset: 45.7523rd. Marine Cabirou: 46.1274th. Nina Hoffmann: 46.1475th. Lisa Baumann: 46.448Sector 21st. Nina Hoffmann: 1:52.2652nd. Vali Höll: 1:52.4523rd. Mille Johnset: 1:54.4054th. Marine Cabirou: 1:54.8975th. Lisa Baumann: 1:56.136Sector 31st. Vali Höll: 3:02.4302nd. Nina Hoffmann: 3:03.0393rd. Marine Cabirou: 3:09.1294th. Lisa Baumann: 3:10.4385th. Monika Hrastnik: 3:13.133Sector 41st. Vali Höll: 3:33.3992nd. Nina Hoffmann: 3:33.6923rd. Marine Cabirou: 3:40.4854th. Lisa Baumann: 3:42.4305th. Monika Hrastnik: 3:46.106Finish1st. Vali Höll: 3:57.9772nd. Nina Hoffmann: 3:59.2393rd. Marine Cabirou: 4:04.2824th. Lisa Baumann: 4:06.1375th. Mille Johnset: 4:10.040Elite MenSector 11st. Loic Bruni: 39.9512nd. Matt Walker: 40.5573rd. Thomas Estaque: 40.6084th. Dean Lucas: 40.7255th. Johan Garcin: 40.772Sector 21st. Loic Bruni: 1:39.2752nd. Benoit Coulanges: 1:40.1283rd. Dakotah Norton: 1:40.5064th. Matt Walker: 1:40.5185th. Finn Iles: 1:40.561Sector 31st. Benoit Coulanges: 2:41.4652nd. Loic Bruni: 2:42.0233rd. Finn Iles: 2:43.1954th. Thibaut Daprela: 2:43.6795th. Andreas Kolb: 2:43.969Sector 41st. Benoit Coulanges: 3:08.5632nd. Loic Bruni: 3:09.0663rd. Thibaut Daprela: 3:10.133 4th. Finn Iles: 3:10.235 5th. Andreas Kolb: 3:10.731Finish1st. Benoit Coulanges: 3:29.3792nd. Loic Bruni: 3:30.0273rd. Thibaut Daprela: 3:30.6094th. Andreas Kolb: 3:31.1655th. Finn Iles: 3:32.028Split RankingsElite WomenSector 11st. Vali Höll: 45:0342nd. Mille Johnset: 45.7523rd. Marine Cabirou: 46.1274th. Nina Hoffmann: 46.1475th. Lisa

### Top Comment:

I really hope Benoit wins a race in France this season.

### Article Summary: 

First Look: Deviate Claymore High Pivot Enduro Bike - Pinkbike: Deviate have been making high pivots since before they were cool. Or at least, before they were everywhere. They've been designing them since 2016, and their gearbox-equipped Deviate Guide was one of my first tastes of a pedal-able high-pivot bike. So while high-pivot bikes are hardly novel these days, Deviate says "Our extensive experience designing nothing but high pivots means we can confidently claim that our system is the most robust and well-engineered out there." Big words. Today they're launching a high-pivot enduro bike, this time with a derailleur. It's called the Claymore, named after the monstrous two-handed swords once used in the Scottish Highlands, where Deviate are based. It offers 165 mm of rear-wheel travel, 29" wheels and is built around a 170 mm fork.Suspension designWhen Deviate says 165 mm of travel, they mean 165 mm in the vertical direction. The rear axle also moves backwards by about 21 mm over its travel, lengthening the rear centre and (in theory) helping it to suck up large bumps without pushing up the frame as much or as fast.The 18-tooth idler pulley is connected to the swingarm in such a way as to keep the anti-squat around 110% at sag, according to Deviate's calculations, which should keep it from bobbing or slouching on the climbs. Being a high single pivot, the anti-rise level (the effect of the braking force on the suspension) starts high and drops off throughout the travel. This will minimise brake dive but may make the rear suspension firmer in some scenarios. The leverage over the shock decreases throughout the travel from 2.95 to 2.3. That makes it 22% progressive. Most of the resulting ramp-up in the force at the back wheel happens towards the end of the

### Top Comment:

This is a sick bike and a great option. Not because it has good geometry, a great frame design, or a great price but because it doesn't have headset cable routing.

### Article Summary: 

Cycle Solutions O-Cup DH#4 Pre Race Report, Camp Fortune July 19/20 - Pinkbike: Source: Peter Appleton I have received tons of emails from both Ontario and Quebec, this will be a sanctioned race in Quebec and Ontario this weekend and will hopefully lead to the 2009 Ontario/Quebec DH Challenge!Finally the answer everyone has been waiting for....What Course??? What Course??? Well Matt Woods and his amazing trail crew have created a whole new jump section on last years Provincial Championships course, so this should provide some excellent flow at the start of the course and lead into some of the more demanding technical sections lower down.- Camping is free as always in the parking lot!- Save $10-20 and pre-reg online at www.ontariocycling.org- Map and Directions are here:http://www.campfortune.com/en/velo/find.php - Bring lots of TUBES, you're gonna need em!REMINDER: Minime Category IS NOT allowed to race in Quebec currently, hopefully next year the FQSC will allow it, so we'll see all the Minime's at Blue Mountain in August.We can’t thank enough our amazing support staff, Lee Allen, Kris Somers (MC/DJ), Allan Hawley and his timing staff, Pro Patrol and ofcourse the amazing volunteers and sponsors:Cycle-Solutions.com Bike Store, Commencal Bikes, Norco Performance Bikes , Kenda Tires, Titec Components, Dropmachine.com, Privateer Racing, To Wheels, Industry Bike park, Trident Distribution, Gamut, FUNN, YODO bike, E-13, Atomlab, Azonic.For all results and Ontario Cup DH/4X racing info go towww.sirbikealotracing.com Peter AppletonSirbikealot Racing and Promotions

### Top Comment:

please, bring it on frenchie

### Article Summary: 

Video: Max McCulloch & Felix Burke Escape the Whistler Crowds - Pinkbike: The chaos and energy of the Whistler village and bike park is something every mountain biker should experience, it is at the center of mountain bike culture. However, the best part of mountain biking for me and a lot of my friends happens when we are out in the hills and away from it all. During Crankworx, Max, Merin and I realized this and tried to capture it in a short video.—Felix BurkeSome of the best berms in Whistler aren't found in the bike park, this quick trail on the west side of the valley is a (somewhat) hidden gem. It's perfect for all skill abilities and also not too far from the village.While many of the other trails are blown out, this one has held up surprisingly well. There is something relaxing about the sound of tires ripping through a set of smooth berms.Merin Pearce, an up-and-coming enduro racer from Vancouver Island was able to join for the photo session; unfortunately, he had to head back to work immediately after the Enduro World Series race and missed out on filming.Riding: Merin Pearce & Felix BurkeWords: Felix BurkePhotos: Max McCullochVideo: Max McCullochLocation: Whistler, BC

### Top Comment:

That was rad AF, but rather short. Still rad AF tho

### Article Summary: 

Drew Bezanson Sets His Sights on MTB Slopestyle - Pinkbike: Drew Bezanson poses with his new slopestyle bike. Image by Mitchell Hubble / Red Bull Content PoolOnly a handful of athletes have successfully pulled off 'the crossover', competing professionally in more than one sport's discipline.Back in the late ‘80’s, it was Bo Jackson; the multi-talented hero of North American pro-sports who played both baseball and football at their highest levels, and one of the few athletes to ever be named an All-Star in two major sports. In the world of action sports, athletes like Shaun White have claimed X-Games medals in snowboarding and skateboarding vert – and even taking a shot at competitive surfing.Now, Drew Bezanson intends to join those ranks as he enters the world of Slopestyle Mountain Biking this season with the goal of competing at Red Bull Joyride at Whistler this coming August.There’s no doubt that it will be a tough road to Whistler, but there aren’t many people out there more suited to the challenge. Read on as Drew talks about his plans for the upcoming season, the challenges he’ll face and if he will really leave BMX for good...What made you decide to seriously consider competing in slopestyle MTB? What really made me want to compete in Slopestyle MTB was the courses. Every Slopestyle course was exactly what I love riding on my BMX; big dirt jumps, flat drops and step on step off features. Then Crankworx sent me a tweet last summer when Uncontainable dropped saying I should compete at Red Bull Joyride next summer – I wasn't sure if they were kidding or not, but I’m going to take it seriously!Let's talk about Uncontainable. That was a quest to go even bigger and defy the limits of conventional BMX parks… did you foresee

### Top Comment:

He's gonna be a scary competitor in competitions. He'll give Semenuk a run for his money for sure

### Article Summary: 

The Atherton Project - Season 3, Episode 1 - Pinkbike: Series 3 of The Atherton Project begins with the family recalling an incredibly eventful 2010 – a year that saw Dan break his neck in a near-fatal crash, Rachel secure two world cup wins despite missing much of the season through injury and Gee win the world cup series in dramatic fashion at the last race of the season.Rested and rehabilitated the whole family are back in the saddle and ready to take on the 2011 season.We kick off the new series with Gee, Dan and Rachel putting in some winter training in Queenstown, New Zealand. Not only are there plenty of sick downhills to ride, but there’s scope for all kinds of mischief to get up to off the bike. This includes a trip to one of the world’s highest bungee jumps where the team test their nerve. Ultimately though, they’re in New Zealand to train, and the family share their personal goals for the season ahead. Now in its third series, Red Bull’s reality TV series ‘The Atherton Project’ is a fly-on-the-wall show tracking the exploits of the most famous family in mountain bike history. Follow British riders Dan, Gee and Rachel Atherton as they compete in events around the world in the 2011 season.Check out The Atherton Project website for more information.Want to catch up on Series 1 and 2? Watch every episode here:www.redbull.tv/The-Atherton-Project

### Top Comment:

Wish I had been born somewhere near a more freeride/DH friendly area.....That's something I always wanted to do in life, ride DH and freeride. This video just makes me want to do it more!

### Article Summary: 

Video: A Day of Dusty Trail Riding with Joe Barnes - Pinkbike: Joe meets up with Hazzard Racing teammate Ferg for this latest instalment of Lockdown Bites. The restrictions in Scotland have opened up to phase 1 and if feels so good to get some company and ride with a mate. This is what bikes are all about! Keep an eye open for more of Joe's Bites videos as his series progresses from not leaving the garden, singing with the Bee Gees and now meeting up with a friend.

### Top Comment:

Glad for the music credit, was beginning to question my sanity. Thomas the Train with Snoop rapping then Sabbath with Morrison vocals lol. 

Nice clip lads.

### Article Summary: 

Win an SDG JR PRO KIT - Pinkbike's Advent Calendar Giveaway - Pinkbike:

### Top Comment:

the nineteenth day of Christmas, my true love gave to me,Nineteen prodigious Pro kits,Eighteen stupendous stems,Seventeen titanic Thules,Sixteen awesome Aircrafts,Fifteen glorious Guides,Fourteen thoughtful Topeaks,Thirteen jazzed-up Joysticks,Twelve vibrant Vectals,Eleven exceptional Enves,Ten cavernous CamelBaks,Nine overwhelming Öhlins,Eight One up ornaments,Seven perfect Parachutes,Six amazing AG2s,Five spectacular Stans,Four playful Polygons,Three breathtaking Braces,Two dashing DBXes,And SRAM Code stoppers in type arr ess cee

