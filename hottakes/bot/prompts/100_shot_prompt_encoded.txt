### Article Summary: 

Letter from the Editor: Pinkbike’s Next Chapter with Outside - Pinkbike: This is the first photo ever uploaded to Pinkbike. The image of Rob Stevens dropping off a bank in Calgary, Alberta is the perfect representation of what this site has always stood for: riding bikes with your friends and sharing that with the community.Pinkbike founder Radek Burkat had spent his twenties playing other sports, but it wasn’t until he connected with mountain biking that he found his passion. He knew he’d found a sport he really loved because he was still eager to do it solo, but he did want to share it. He cringes now at how cheesy it sounds, but he started Pinkbike in 1998 to help others connect with mountain biking in the same way he had.Shaped by those glory days of early freeride, Pinkbike was built by a crew who wanted to share the ride with their friends through photos, videos, and stories—long before social media was a twinkle in Myspace Tom’s bionic eye.A new chapter with Outside.We’re excited to announce today that Pinkbike has been acquired by Outside, the world’s leading active lifestyle platform. Established in 1977, Outside Magazine was founded by Lawrence Burke, and the publication broke ground on the entire outdoor media industry. Its history is filled with iconic titles, with some of the world’s most talented writers and authentic storytelling. The new Outside, founded in 2019 by Robin Thurston, acquired Outside Magazine and OutsideTV in February 2021. Headquartered in Boulder, CO, Outside has offices across the US, Canada, in Europe, and now Australia. They own Outside Magazine, OutsideTV, Peloton Magazine, Bicycle Retailer, Beta MTB, GaiaGPS, Roll Massif, BikeReg, Ski Magazine, Warren Miller Films, and many more titles and services. Robin’s vision of bringing all these brands together into one organization is

### Top Comment:

"While our long term business model will evolve, a significant portion of our content will remain free."Welp, it's been a good run. Thanks for everything Pinkbike. I fear change and can only assume this is the end as we know it.

### Article Summary: 

British Councillor Objects to Local Bike Park Due to Fears of Child Molesters & 'Aggressive Males' - Pinkbike: A British Councillor has objected to a local bike park due to fears over aggressive males and child molesters, getsurrey.co.uk reports.The comments were made at a scrutiny committee of the Mole Valley District Council that was held to discuss turning the BMX track at Ranmore Common into a bike park that would be operated by Trail Academy.The BMX track has apparently been plagued by quad bikes during lockdown and become overgrown as the council struggled to afford its upkeep. Trail Academy is hoping to maintain an improved, fully staffed bike park and offer a range of all-ability trails, which it hoped would open in August this year. The proposal has caused controversy in the local area with protestors worried about nesting nightingales and the fact that the tracks will no longer be free to access. The site is currently free but Trail Academy will start charging for entry with both annual and daily prices available. Mole Valley District Council held a scrutiny meeting about the proposed bike park to allow concerned local residents to have their concerns heard. However, the most negative comments came instead from a councillor. Professor Patricia Wiltshire, an independent councillor for Ashtead Common, said: “If you've got adults there, and there will be a lot of adult males, and you have children, we know the problem of checking people. They have to be checked because of dangers to children. All that sort of thing has to be considered because it could be really quite serious, and you never know it could end up children being molested, goodness knows what. I’m not saying it would but it’s that sort of possibility."“I don’t think it’s for all ages and genders,

### Top Comment:

Oh come on.... It's not like they're building a Church.

### Article Summary: 

An Update From Aggy: "On Any Other Day I Wouldn't Have Dropped In..." - Pinkbike: Graham Agassiz has been chasing the top step at Red Bull Rampage for years. The steep and loose Utah desert terrain suits Aggy’s big mountain style, and in addition to the FEST series jams, Rampage has been a big focus for him for the past few seasons.In 2013 Aggy qualified in 1st place and nearly stomped a finals run that would have surely been a contender for first. In 2014 he repeated the qualifying performance, yet again solidifying his position as one of the riders to watch at this event, but a knee injury during practice kept him from the finals. In 2015 he was the top qualifier for the third year in a row and strung together a run that landed him in 3rd place in the finals. Close, but not quite. And so the chase continued.Aggy's run began with this massive chute.Rampage, as you might gather, is a fickle event. Every athlete who is invited to Rampage is riding a fine line between the run of their life and waiting until next year. After a week of hard labor prepping their line, every single element of a rider’s run is calculated, and those who stand on the top of the box link together a clean top to bottom run with style and amplitude. On those last two, Aggy’s got it.With his performance in 2015, Aggy would have been pre-qualified for this year’s event, skipping the extra competition runs that he’d been forced to do the past three years. As it turns out, Red Bull changed the structure, and the rider list was invite-only. Of course, Aggy was on that list.Arguably the most stylish rider at Rampage, and a fan favorite because of it.Last

### Top Comment:

What if Rampage wasn't a live event, and was divided into two days, one day for each run.  They could start early to avoid wind, and have much longer wind delay windows.  Maybe it would even make sense to have the riders be allowed to work on their lines for a few hours or something after the first day, to fix bomb holes or other wear.  Then the second day would have second runs for those who wanted to take them.  At the end of the day, I don't want people to drop in on their lines when the weather is bad just because the event is broadcast live.

### Article Summary: 

Check Out: A Gear Bag, FSA's Cockpit, Maxima's New Tire Sealant & A Different Take on the Waterbottle - Pinkbike: CHECK OUTMarch 2020A lot of gear comes across our desks here at Pinkbike. Check Out is a frequent round-up of everything our tech editors have gotten their hands on. Sometimes it's products we're doing long-term tests on, other times it's stuff we're stoked on but don't have time to fully review. And, sometimes it's crazy shit someone sent us unsolicited and we're having a laugh.Maxima Tire Sealant Features• Safe on aluminum and carbon wheels• Eco-friendly• Seals punctures up to ¼” • Remains functional for up to 6 months• Price: $16.99 USD• For use on all mountain and road bike tubeless systems• Combines fast-acting polymers with suspended rubber particles maximausa.comThis is Maxima's first foray into tubeless tire sealant, adding to their extensive range of bike cleaners and lubes. A 16 ounce (473ml) bottle will set you back $16.99 USD, which is the same price as the same amount of Stan's. There's a handle on the jug for easy pouring, but no flow restrictor so you have to be careful not to have too much sealant glug out when you pour it out.As for the amount of sealant that Maxima recommends, it's in line with the amounts that Stan's recommends, with extra precision. Instead of two suggestions, Maxima recommends 60-90ml for a road/gravel tire (1.0-1.95" wide), 90-120ml for a XC tire (1.95-2.3"), 120-150ml for an Enduro/DH tire (2.3-2.6") and at least 150ml for a plus or fat bike tire. Of course, there's no measuring device that comes with the sealant so you're probably just going to be eyeballing that very precise amount... A nice touch is the rim stickers that are included with the tire sealant. Do you remember the last time

### Top Comment:

Dick Pound.

### Article Summary: 

Trek is Being Sued for $5 Million Over Wavecel Safety Claims - Pinkbike: A New York man is suing Trek Bicycles for $5 million dollars over safety claims about Bontrager helmets that he believes are misleading, Bicycle Retailer and Industry News reports.Wavecel is Bontrager's proprietary rotational protection system that is applied to some of its helmets. Rather than using a slip plane, like Mips, it uses a collapsible cellular material that's designed to flex, crumple, and glide to absorb the force of an impact. This did not replace the EPS foam that is used in most helmets but the amount of foam that's used is greatly reduced.WaveCel was developed over the course of four years by Dr. Steve Madey, an orthopedic surgeon, and Dr. Michael Bottlang, a biomedical engineer. The technology was released with a peer-reviewed study that seemed to corroborate Trek's claims of increased protection, including that Wavecel was up to 48 times more effective than EPS foam at preventing concussions. Andrew Glancey of Staatsburg, New York, is the lead plaintiff in a class-action suit filed Thursday in U.S. District Court for the Southern District of New York. The suit claims that Trek's marketing was "false, deceptive and misleading". It questions the reliability of the study, claiming that its authors had a financial interest in its success and that they used a traditional helmet modified to include the WaveCel component instead of a Bontrager helmet. The suit also claims that Trek's marketing allowed it to sell more helmets at higher prices than it would have otherwise done, meaning higher profits at the expense of its customers.In a statement shared with Cycling Tips, Trek said, "Trek believes in and stands behind our Bontrager Wavecel helmets. This lawsuit is without merit and we will vigorously defend against it. The plaintiff has

### Top Comment:

Looks like a court session

### Article Summary: 

Mountain Biker in Spain Shot After Being Mistaken for a Rabbit - Pinkbike: A mountain biker was shot with dozens of pellets after being mistaken for a rabbit by a hunter in Alicante, Spain, theolivepress reportsMiguel Toran had just passed a pair of hunters on his ride but was then mistakenly shot by a third a few metres later. Torna was in colourful kit and wearing a helmet while riding on the Monte Orgergia forest trail, which is popular with riders and walkers. The hunter discharged a cartridge that contained hundreds of pellets and left Toran with impacts on his buttocks, lower back and legs. Fortunately, no major organs were hit but paramedics later removed 20 pellets that had become embedded in Toran's skin.Local emergency services were called and although the cyclist was not taken to hospital, his wounds are being monitored by doctors to see if further treatment is necessary. The hunter told the police that he had confused the movement of the cyclist with that of a rabbit and admitted that he shot him with a cartridge, which contains a high number of pellets, which corroborates with the victim's testimony.Toran believes that the incident was a genuine accident but he is still considering a complaint against the hunter. The hunter had a shooting license but could still be charged with recklessness. As hunters and mountain bikers share the same environment, unfortunately incidents between the two groups have happened before, often with the mountain bikers ending up worse off. In 2018, a British rider was killed in Morzine by a hunter's stray bullet and a similar tragic incident happened in Lapland last year.

### Top Comment:

He must have been doing a lot of bunny hops.

### Article Summary: 

Pole Bicycles' CEO Resigns, Company Founder Leo Kokkonen to Take Leading Role - Pinkbike: Pole Bicycles are best known for their early adoption of what's now considered 'modern' mountain bike geometry, and for using aluminum frame manufacturing techniques that are a departure from the norm. The company has been experiencing some growing pains over the last couple of years, and the move to a new factory combined with increased demand and component supply issues has led to long wait times and frustrated customers.In order to help steer the ship back on course, a recent announcement states that Leo Kokkonen, the company founder, will take over as the head of Pole, while Lauri Hulkkonen will resign after three years as the CEO. The goal with the changes is to improve customer service, speed up the warranty process, and provide more accurate timelines as to when bikes and parts will be available. The full press release can be found below.PRESS RELEASE: Pole Bicycle CompanyThe CEO of Pole Bicycle Company Oy, Lauri Hulkkonen, resigns after three years of service. This significant change is for us to evolve as a company. We want our service and customer experience to meet better with our philosophy and values. Pole will continue as an owner-managed company, as Leo Kokkonen takes the leading role. The resignation process started in early August and takes effect starting today, 30th of October 2020.Three grand years of progressWithin the past three years, we climbed up to the highest peak of our success so far. We introduced big things to the mountain biking community, gained fame for our products and made a big overall impact on the scene. As a company, to match the growth, we made considerable investments to fit the increased need. For example, we bought the machines and figured out

### Top Comment:

Did the recruitment agency send them a prototype CEO by mistake?

### Article Summary: 

YT Industries Acquired By Private Equity Group Ardian - Pinkbike: Private equity group Ardian has acquired a majority stake in YT Industries to invest in the bike industry's growth and expand YT's market in Europe and the US.Last fall, YT appointed former Amazon country manager Sam Nichols as the new CEO, replacing co-founder Markus Flossmann. Flossmann then took the title of CVO, or Chief Visionary Officer, and continues to direct the brand and product identity. The change was, in part, a response to the heightened demand from the COVID bike boom, and a decision aimed to help the direct-to-consumer company expand by bringing in someone with extensive experience in developing e-commerce platforms. Now, YT says investment from Ardian will help the brand to grow further.With Ardian as a partner, we look forward to taking the business to the next level by expanding our business internationally and getting even closer to our customers. For us, it is essential to remain faithful to our values ​​which have made our success: we focus on quality, innovation and our community. We look forward to leading the company to the next chapter in its young history.—Markus Flossmann, YT co-founder and CVOAccording to Nichols, YT has been moving at "full speed" to put more focus on customers and make data-driven decisions, which he says will help the brand to anticipate and meet demand, bringing new products to market "at the right time." Ardian executive Dirk Wittneben likewise said that YT has been making effective business decisions and backing from Ardian will help the brand to capitalize on the bike industry's recent explosion.The combination of one of the most popular mountain bike brands and the underlying structural growth in the markets international mountain biking offers significant growth potential for YT. The founders and the innovative and ambitious

### Top Comment:

At least somebody was able to acquire something from YT. I wonder how long they had to wait.

### Article Summary: 

What We Know So Far About the Heartbreaking Murder of Moriah "Mo" Wilson - Pinkbike: Where do we begin? One of the rising stars of gravel and endurance mountain bike racing – a friend, a daughter, an athlete who raced for the love of it – was murdered May 11 in Austin, Texas. 25-year-old Moriah "Mo" Wilson was traveling to race the Gravel Locos 150-mile race in Hico, Texas, where she was a favorite for the win until a vicious shooting ended her life and sent the off-road cycling community into a stunned, heartbroken unrest.The Austin Police Department responded to a call the night of May 11 and found Mo Wilson dead from gunshot wounds in her friend's house, where she was staying. Since her killing, the details have only become more horrifying: police have issued an arrest warrant for Kaitlin Armstrong, the partner of high-profile gravel racer Colin Strickland, with whom Mo reportedly had a brief romantic relationship last fall during a time when Strickland and Armstrong had separated. In a statement released last week, Strickland said he and Mo remained close but not romantically involved after he and Armstrong reconciled. Text messages and statements from others included in the police affidavit appear to contradict what Strickland said, suggesting that he continued his romantic involvement with Wilson after reconciling with Armstrong.The evening of May 11, Wilson went for an evening swim with Strickland, according to the affidavit. Soon after Strickland dropped Mo off at her friend's house for the night, Armstrong is alleged to have visited the house and shot Mo, whose friend returned later that night to find her shot multiple times with a 9mm handgun. She was pronounced dead soon after police arrived.Now, Armstrong is on the run and authorities have issued an arrest warrant for first-degree

### Top Comment:

It's almost like firearms should be heavily controlled.....

### Article Summary: 

Brage Vestavik Joins Red Bull - Pinkbike: Today, Brage Vestavik announced on Instagram that he has been signed by Red Bull. Unreal moment!! An honor to join the @redbull family. It’s a dream to have Red Bull stoked on my vibe, supporting my style of riding and building! Can’t thank everyone enough who has been there and got me to this point. Let’s GO!!—Brage VestavikThe 20-year-old Norwegian freerider burst into the spotlight with his raw and gnarly Real MTB segment in early 2020, sending massive skinnies and drops in the Norwegian woods. The segment earned him an entry to Red Bull Rampage (as well as the 2021 Pinkbike Video of the Year award). While he wasn't able to compete in finals after coming up short when guinea pigging the massive drop on his natural line and dislocating his shoulder and sustaining multiple fractures to his humerus, his attitude and approach to building and the event earned him the McGazza Spirit Award.We look forward to seeing what Brage Vestavik can accomplish with Red Bull and can't wait to watch the next time he makes his way to Virgin, Utah for Red Bull Rampage.

### Top Comment:

Red Bull joins Brage Vestavik. Fixed it for ya.

### Article Summary: 

Jared Graves Diagnosed with a Brain Tumor - Pinkbike: Some news of the not so awesome variety. To cut a long story short, since getting back home from Whistler I suffered a couple of seizures, and woke up from one last Thursday morning to paramedics taking me off to hospital, where tests and scans were done to discover I have a tumor growing in my brain. So for now more scans and doctors appointments and scans over the next week leading to surgery within the next approximately 10 days. The plan at the moment is to then start chemotherapy. Not sure what else to say for now, it’s all hit so fast....needless to say I won’t be at the last 2 EWS rounds this year as this new battle begins.—Jared Graves link="https://www.w3.org/1999/xlink"> View this post on Instagram A post shared by Jared graves (@jaredgravesmtb)Our thoughts and best wishes go out to Jared and his family and we all hope he has a speedy recovery.Click here to visit the #StrengthForJared GoFundMe campaign.

### Top Comment:

I'm reading this sitting in hospital in Newcasle with my 2 year old son who is fighting neuroblastoma cancer, he's slowly recovering from high dose chemo after a very tough few weeks - the bravery of the kids on this ward is mind blowing.

You can do it Jared, stay strong and I'm sure you will be back on the bike at full speed again.  All the best from me and Frank.

### Article Summary: 

Paul Bas - This Is Not An Injury Update - Pinkbike: An elite level athlete, Paul Basagoitia is a member of our community who has reached all of our homes and hearts through his riding and charisma. Paul had a terrifying crash during his Finals run at Red Bull Rampage on Friday. When something of this magnitude happens to one of our own, our immediate reaction is to want information. At this time neither Paul or his family have released a statement with regard to his situation or prognosis. We ask that you continue to send positive thoughts and energy Paul’s way. We are a global family and in times of crisis we need the support of our entire community.

### Top Comment:

Red Bull,its your time to shine,HELP him with what he needs!!!

### Article Summary: 

Judges' Results: X Games Real MTB - Pinkbike: Warning: Spoilers below.The results of the judged portion of the X Games Real Mountain Bike video competition were announced today in an hour-long segment aired on ABC after last week's release of six edits from DJ Brandt, Danny MacAskill, Veronique Sandler, Brandon Semenuk, Brage Vestavik, and Cam Zink.The results are as follows:1. Brandon Semenuk2. Brage Vestavik3. Cam ZinkCongratulations to Brandon, Brage, and Cam. Also, don't miss the other edits from Vero Sandler, Danny MacAskill, and DJ Brandt.What does it take to win X Games gold in Real Mountain Bike? For the six athletes competing in the inaugural: it’s the power of the massive step down. Taking home the inaugural gold medal in Real Mountain Bike is Canada’s Brandon Semenuk, followed by the biking Viking, Brage Vestavik, in the silver medal slot, and veteran freeride royalty Cam Zink in the bronze medal position.All six athletes threw down in true MTB freeride fashion, but there was no getting around the collective step down power of Semenuk, Vestavik and Zink. For Semenuk, it was the corked barspin 720. For Vestavik, it was the Norwegian gap of death. And for Zink, it was the world’s heaviest backflip roof drop.—X GamesWhile the first part of the competition is settled, voting is still open for the fan favorite portion of the competition until the night of April 25 at xgames.com.

### Top Comment:

Brage got robbed

### Article Summary: 

Video: Spengle's 3-Spoke Carbon Wheels - Pinkbike: Remember those wild looking, three-spoke carbon fiber wheels that were all over the internet a few months back? The ones with the funny name that had all the old-timers reminiscing about how they saved their paper route money for a set of Spin wheels a hundred-ish years ago? Well, Spengle's 1,490 EUR wheels have gone into production, and I have a set of them to review. It's still early days - I've just got them on a bike now - but the Swiss company is saying things like how they're ''aiming for people to look at spokes and consider them to be the odd-looking wheels,'' in a few years time. Optimistic? Yeah, probably, and judging by the vibe in the comment section, ya'll agree... Not that I expected - or wanted - you guys to hold anything back because that'd be boring. Anyway, looking at the numbers kinda makes me want to type out my own snarky comment; a 24mm internal width, 1,750 grams, and 1,490 EUR. That's somewhere around $1,700 USD, and we all know there are lighter, wider, and less expensive wheels out there, so who the hell is gonna pony up for these funky looking things? Someone who likes funky looking things, obviously. But maybe there's more to these wheels than numbers and spec? Spengle says that the tri-spoke design isn't driven by appearance, but rather by performance: ''Effectively what we are saying is that when a spoked wheel interacts with the ground, it is passing that force straight back up to the rider, but by using the tri-blade monocoque we are spreading that force away from the rider, giving them a smoother, more comfortable ride.Using the black stuff to engineer-in a degree of forgiveness isn't anything new, and we

### Top Comment:

It makes total sense. Finally, a set of wheels with room for water bottle mounts.

### Article Summary: 

First Look: Shimano's New Deore 12-Speed Group & Other 2021 Updates - Pinkbike: Almost a year ago, Shimano came out swinging with the launch of the XT and SLX 12-speed group sets, music to the ears of Shimano fans and people looking for an alternative to SRAM's 12-speed options.The trickle down continues, and now they're releasing the new Deore 12-speed which takes inspiration from the higher tier XTR, XT and SLX parts while delivering an even lower price point. Not content with offering only one options, and with Shimano's love for product codes, the Deore name has accompanying 11 and 10-speed group sets which retain many of the same features but in even more value-focussed packages.Additionally, there are some other updates to the rest of the Shimano line-up for 2021 with added crank set options, flat mount brake callipers plus bigger e-bike batteries to round out a very brain melting product launch.Deore M6100 12-SpeedThe Deore M6100 group set is the 12-speed option and uses the 10-51 tooth cassette range with the Micro Spline freehub, Hyperglide+ shifting technology, I-Spec EV shifter mount option and direct mount chainrings. That list of technologies means that the Deore group set shares the same standards with the higher SLX, XT and XTR group sets, so opens up the possibility of mixing and matching between component levels, allowing you to spend your money where you'd get the biggest bang for your buck.Crank SetThe Deore 12-speed crank sets are single-ring only and use Shimano’s direct mount chain rings, available in 30 and 32-tooth options. Chainrings and spider are again a split affair with the spider being aluminum and the ring being steel to drop the cost. Being the same spider-less fitment means you can also run chainrings from the SLX, XT or XTR range.The cranks are a

### Top Comment:

Bike companies: please please please spec this instead of SX and NX

### Article Summary: 

The Top 20 Pinkbike Comments of the Past Decade - Pinkbike: Love 'em or hate 'em, participate in them or simply indulge when they go awry, the comments section is an integral part of the Pinkbike experience. I mean, who hasn't signed in just to see the below threshold comments on a particularly contentious article? While sometimes the trolls and keyboard warriors get the upper hand in the land of anonymity, it really just makes it that much more rewarding when the comment section is full of positivity and praise. Here are the 20 comments that got the most upvotes in the past decade. Note that we've omitted comments with more than 100 downvotes and chose not to include repeat top-commenters (looking at you @scottsecco). 1. +2441 upvotes Article: Stevie Smith Passes Away2. +1954 upvotes Article: An Update From Aggy: "On Any Other Day I Wouldn't Have Dropped In..."3. +1902 upvotes Article: Sam Pilgrim Signs with Haibike4. +1671 upvotes Article: Athertons Launch Their Own Bike Company With Dragon's Den Investor5. +1608 upvotes Article: In Memoriam: Kelly McGarry6. +1468 upvotes Article: Jared Graves Diagnosed with a Brain Tumor7. +1465 upvotes Article: Paul Bas - This Is Not An Injury Update8. +1454 upvotes Article: Aaron Gwin and Specialized Part Ways - Here's Why9. +1412 upvotes Video: Spengle's 3-Spoke Carbon Wheels10. +1292 upvotes Article: Steve Peat Announces Retirement From World Cup Racing11. +1197 upvotes Review: Scott Gambler 900 Tuned - A Sub-35 Pound Downhill Bike12. +1176 upvotes Field Test: 2020 Pole Stamina 140 - The Fastest Trail Bike*13. +1158 upvotes Contest: Name This Frame From Dartmoor Bikes - Winner14. +1155 upvotes Article: What's the Deal With SRAM's DUB System? More Questions15. +1118 upvotes Pinkbike Poll: What If....?16. +1085 upvotes First Ride: 2016 Specialized Stumpjumper FSR17. +1082 upvotes Article: Yamaha to Launch Their Own

### Top Comment:

Guys, WAKI didn't make it...

### Article Summary: 

UCI & Warner Bros. Discovery Announce Viewing Options & New World Series Branding for 2023 World Cups - Pinkbike: The UCI and Warner Bros. Discovery (WBD) have announced more details on the plans for this year's World Cup racing with a series of viewing options and the new UCI Mountain Bike World Series brand.To bring together the World Cup formats of XC, Short Track, Marathon, Downhill, Enduro and E-enduro there is now the new branding of the UCI Mountain Bike World Series. The press release states its alignment plans for the formats will be showcased when all major UCI MTB disciplines will be held at the same time during a ten-day event scheduled for September in Les Gets, Morzine and Châtel.Also included in today's announcement is the long-awaited reveal of the broadcast location for the events which will be available on discovery+(Austria, Denmark, Finland, Germany, Italy, the Netherlands, Norway, Sweden and the UK and Ireland), the Eurosport App and GCN+. The press release does say more ways to watch will be announced at a later date but there is no further information about this or whether there may be a free way to view the racing. Going into specifics about coverage the XC, XCC (Short Track) and Downhill will be shown live while Marathon and Enduro disciplines will only receive highlight shows. The global popularity of mountain bike is on the rise, and by combining all its major formats as well as racing for Elite and amateur riders in one major series, we will further increase the appeal of this discipline. With its festival atmosphere, mix of racing and expanded live coverage, the UCI Mountain Bike World Series offers a fresh and appealing experience for athletes, hardened fans and newcomers to the mountain bike community.— UCI President David Lappartient By

### Top Comment:

There's only one Warner Bro I want to hear from, and his name's Rob3

### Article Summary: 

Field Test: 2020 Pole Stamina 140 - The Fastest Trail Bike* - Pinkbike: PINKBIKE FIELD TEST2020 POLE STAMINA 140 ENThe Fastest Trail Bike* Words by Mike Levy, Photography by Trevor LydenThe Pole Stamina 140 EN was always going to be the most interesting bike at the Field Test. There are no bolts or welds on the frame—instead, two halves are machined from 7075 T6 aluminum before being glued together. Yes, glued together. It's a downsized version of their Stamina 180 that's intended for trail bike duty. The EN model reviewed here goes for $6,940 USD as pictured, one step down from the Gucci LE spec, and Pole also offers a few different frame/shock configurations as well. Our test rig gets a 150mm Pike Ultimate, but you can go up to 160mm up front, while a four-way adjustable Cane Creek DBair IL shock looks after the 140mm of rear-wheel travel. Stamina 140 EN DetailsTravel: 140mmWheel size: 29"Frame construction: Machined, glued 7075 T6 aluminumHead angle: 64-degreesChainstay length: 450mm Reach: 470mm (med)Sizes: Sm, med (tested), lrg, xl Weight: 30.6 lbs / 13.9 kg (as pictured)Price: $6,940 USDMore info: www.polebicycles.comWhile the Norco, Orbea, and Intense are all large-sized test bikes with reach numbers between 474mm and 480mm, Pole has a slightly different sizing chart; our medium has a 470mm reach, which they say is ideal for someone between 5' 7" (170cm) and 5' 11" (180cm) tall. In other words, the sizing is a little unconventional, so pay attention if you're ordering from their website. The Stamina 140's numbers might not seem as wacky as they would have a few years ago, but Pole is still pushing the limits with the 78.6-degree seat angle. For comparison's sake, that's 4.6-degrees steeper than what you'll see on the Intense Primer. The Stamina gets longish 450mm chainstays and

### Top Comment:

Nothing worse than going for that full bottom out and having your pole break.

### Article Summary: 

Adolf Silva Without a Frame Sponsor in 2021 - Pinkbike: Adolf Silva, one of the boldest senders in all of mountain biking, has announced on Instagram that he will not have a frame sponsor for 2021 and will instead be riding a bike that he bought himself.Despite not having a frame sponsor, he has recently announced new support from Michelin and Propheus Bikewear, and has not announced any other separations from previous sponsors. His split from YT was announced in December after a successful six-year partnership.Rather than renew his deal with YT or start a new relationship with another bike company, Silva said he opted for more independence and decided he would rather buy himself whatever bike he wants to ride without some of the trade-offs that come from representing a specific company.I actually love the change and the new bike feels incredible. I'm riding better than ever. I will be working on some banger videos, one big thing with Monster and hopefully the events are back to shred.—Adolf SilvaConsidering his impressive accomplishments with YT, we can't wait to see what 'better than ever' means for Silva.Since a lot of people has been asking about my "new" bike sponsor I wanted to let you guys know that I will not have a bike sponsor in 2021, will be riding a bike I bought and thought it would be best for me.Pretty stoked on the new build, bikecheck fotos will be coming soon.—Adolf SilvaSilva will be revealing what frame his new bike soon. We'll update you with more info as we learn more.

### Top Comment:

I have also chosen not to be sponsored this year

### Article Summary: 

Video: Jaxson Riddle’s 50 Foot Huck to Flat Crash (Updated) - Pinkbike: Video credit: @dude_in_slcJaxson Riddle took a huge crash last week as he attempted to jump off the roof of the Natural History Museum of Utah in Salt Lake City. The building is 50 foot high and Jaxon had commissioned Super Ramps to build a 25 foot tall and 16 foot wide ramp to help him land the stunt. Unfortunately, Jaxon went too deep, missed the landing ramp altogether and landed to flat on the pavement below. The hit was apparently being filmed for a Red Bull Rampage promo.Thankfully Jaxson was able to walk away from the crash, reported no serious injuries and posted a video of himself riding the day afterwards.Update:Jaxson told us he was filming with Red Bull to show the scale of Rampage features using things around the city. He said he went too deep because the landing was too steep for the set up but thankfully he walked away just feeling a bit sore. He says he's currently healthy and ready for his debut at Red Bull Rampage in October.Super Ramp also posted some behind the scenes info in a social media post:We can’t express how stoked we are to have been part of such an awesome project. It started with a random conference call brought to us by Brandon Murray (much ❤️ homie), he connected us on a conference call with the Wzrd Media crew. They had a simple request: “can you build a landing ramp for Jaxson Riddle to jump off a 50’ building into?”. This seemingly basic request came with some serious logistical hiccups that needed to be addressed. #1: We would only have 3 hours time prior to the shoot to get the ramp setup. #2: The location didn’t lend itself

### Top Comment:

Is this the Natural Selection Exhibit?

### Article Summary: 

Tested: Does a Lockout Actually Make Climbing Faster? - Pinkbike: Have you ever wondered if reaching for the lockout lever is worthwhile? Sure, a firm lockout can make a bike feel more efficient, but does this really translate into faster climbing? And if so, how much faster can you go for the same effort?To find out, I've ridden up the same climb way too many times, using a power meter and a stopwatch to try and find some answers. To control variables and keep things repeatable enough to measure this in the real world, I picked a short road climb with 44m of elevation gain and a nice consistent gradient. The short climb made it possible to do lots of timed runs so I could see if my times were consistently faster with the lockout on or off - if you only do a couple of timed runs you can never know if you would have gone faster anyway.The climb's consistent gradient is important because changing gear or effort mid-climb can make it harder to stay consistent between runs. I picked a day with barely any wind and kept the same position so changes in aerodynamic drag didn't affect the results. I measured my time and average power output over a marked section of the climb, and aimed for smooth, efficient pedaling at a cadence of around 80 rpm, trying to keep as close as possible to a 315 watt power output. I did a total of twelve timed runs over two bikes, alternating between riding with the lockout on and off.I rode eight runs on a Privateer 161 (four with the lockout on and four with it off), then I did four more runs (two on, two off) on a Geometron G1.The 161 has 161mm of rear wheel travel

### Top Comment:

My experience of lockouts:1. Remember halfway up a hill to lock out the shocks.2. Fumble around losing momentum, speed and line trying to get the switches flipped.3. Get to the top of the hill.4. Forget I locked out the shocks.5. Get halfway down the hill wondering why my bike feels like crap.6. Remember I locked the shocks.7. Fumble around losing momentum, speed and flow trying to get the switches flipped.8. Use above as an excuse to my friends as to why I was so slow.9. Forget lockouts for about 6 weeks, then repeat above steps.

### Article Summary: 

New U.S. Congress Bill Proposes a Tax Rebate for E-Bike Purchases - Pinkbike: A proposed bill in the United States aimed to help the environment and promote car-free commuting could potentially benefit prospective eMTB-ers, too.The Electric Bicycle Incentive Kickstart for the Environment (E-BIKE) Act is scheduled for introduction to Congress Feb. 11 and proposes financial incentives to encourage consumers to buy e-bikes in an effort to reduce carbon emissions.The bill proposes a refundable tax rebate for 30% of a bike’s purchase price up to $1,500 and would be applicable to bike purchases up to $8,000. The tax credit could be claimed once per person every three years or twice for joint-return couples who purchase two e-bikes.Although the bill promotes e-bikes for environmental reasons, it doesn’t discriminate between commuters and eMTBs. A “qualified electric bicycle” is a two-wheeled vehicle that has pedals, a seat, and an electric motor up to 750 watts that doesn’t provide assistance at speeds of more than 28 mph. (For reference, an e-bike motor producing more than 750 watts would be pretty sporty.)The E-BIKE Act is led by Jimmy Panetta (D-CA) and Earl Blumenauer (D-OR) and echoes the tax incentives already in place for electric car purchases.E-bikes are not just a fad for a select few, they are a legitimate and practical form of transportation that can help reduce our carbon emissions. My legislation will make it easier for more people from all socio-economic levels to own e-bikes and contribute to cutting our carbon output. By incentivizing the use of electric bicycles to replace car trips through a consumer tax credit, we can not only encourage more Americans to transition to greener modes of transportation, but also help fight the climate crisis.—Congressman Jimmy PanettaThe bill has support from PeopleforBikes, the League of American Bicyclists, the California Bicycle

### Top Comment:

Know what else doesn't produce emissions, NORMAL FUCKING BIKES!

### Article Summary: 

Pinkbike Poll: What If....? - Pinkbike: Would you ride bike park trails on a carbon bike? It wasn't all that long ago when the overwhelming answer would have been, "Hell no!" If you were then pressed to answer: "What if the frame were stronger and more durable than the aluminum one you are riding now?" The most probable reply would be, "You'll never convince me that a carbon frame could be trusted." The first "carbon" frames were basically aluminum or titanium frames with the straight sections replaced by carbon tubes. Unsurprisingly, they cost more and often weighed more than an unmolested aluminum or titanium frame did at the time. Component makers followed suit, replacing aluminum with carbon tubes for stems, fork sliders, and cockpit items, and after those over-hyped products underwhelmed, carbon was downgraded by its detractors (especially, by the cycling media) as "black aluminum" and the proponents of the material are still fighting their way out of that corner.Carbon wasn't at fault. The pathetic debut of carbon fiber as a frame material fell upon the shoulders of bicycle industry designers and manufacturers, who were locked into the vision that a bicycle frame was nine sticks of pipe, joined together with molten metal and could not create outside of that box. Carbon fiber's promise of greater strength and stiffness at significantly lower weights would not be realized until the manufacturing process was re-tooled, from conception through final product, to take advantage of pre-impregnated materials and molded monocoque-style construction techniques. It was a steep learning curve, but the end result was that carbon became the performance material of choice. The take-away here is that the material was the same. It was the adoption of technology and manufacturing techniques, new to the cycling industry that turned failure into success. Few remember that

### Top Comment:

what if... the prices went down

### Article Summary: 

First Look: 2021 Trek E-Caliber - A Motorized XC Machine - Pinkbike: FIRST LOOK Trek ECaliberThe eMTB has come a long way in the last few years. Many of the models we've seen are geared to the bike park or more aggressive trail riding, but Trek's new eCaliber is a bit of a different take than. Aimed more at the distance chasing, marathon cross-country crowd, the E-Caliber aims to give the long-distance 'XC' style rider a little more gas in the tank on those epics.The E-Caliber looks quite similar to Trek's XC race bike, the Supercaliber, except with a larger downtube where the battery and Fazua Evation drive system lives, but there are a number of other differences between the two.Trek E-Caliber Details • Wheelsize: 29"• Travel: 60mm (r) / 120mm (f)• Carbon Frame• 67.5° head angle• Fazua Evation drive • 250 Wh battery• Weight: 34 - 40 pounds• $6,500-12,500 USD• trekbikes.com While the E-Caliber uses the same IsoStrut suspension system and 60mm of travel that the Supercaliber does, it has a 120mm fork, and a slacker 67.5-degree headtube angle. The reach is also between 10-15mm longer depending on the frame size for increased stability at speed. The E-Caliber is designed to fit somewhere in the middle of the gap from standard non-pedal assist bike to eMTB. It's not a full throttle with minimal effort style of ride, and riders will still need to have some fitness. Trek calls it more of an equalizer for riders who may want a little extra assist, for instance, you trying to keep up with your World Cup level friend on their recovery day without it feeling like a World Cup race to you.Frame and Drive System DetailsThe E-Caliber uses Fazua's Evation drive system to deliver 55Nm of torque. This is powered by a

### Top Comment:

lol

### Article Summary: 

Dakotah Norton Unable to Race in Maribor World Cup Following Positive COVID Test - Pinkbike: link="https://www.w3.org/1999/xlink"> View this post on Instagram A post shared by Dakotah Norton (@daknorton)Dakotah Norton will not be racing at the Maribor World Cup this year after he tested positive for COVID before his flight into Slovenia.Dakotah was enjoying a successful start to his season with results including a ninth-place finish in Leogang and a win at the US National Championships early in July. Unfortunately he won't be able to show off his first Stars and Stripes sleeve or his 12th place overall number board this weekend as he was unable to board his flight. Thankfully Dakotah is not currently experiencing any symptoms of COVID and is hoping to be back for the World Championships that take place on 25-29 August.As much as it devastates me to write this, I have to inform everyone that I won’t be making it to the Maribor World Cup. I was tested yesterday pre flight and it came back positive. I’m currently not experiencing any symptoms and feel fine other than being bummed I’m not going racing. Time to regroup for World Champs! Can’t thank everyone enough for continuing to support me through these difficult times.—Dakotah NortonWe hope Dakotah is able to brush off the virus quickly and look forward to seeing him back in Europe on the race track soon.

### Top Comment:

So much for Norton anti-virus

### Article Summary: 

The Champion Moves On: Rocky Mountain Thanks Jesse Melamed - Pinkbike: PRESS RELEASE: Rocky MountainJesse Melamed has been riding Rocky Mountain his entire professional career. He’s landed nearly 20 Enduro World Series podiums, 12 of which are on the newest generation of the Altitude. Jesse has worked directly with our team to drive innovation for the Altitude, and it shows. We couldn’t be prouder of Jesse’s achievements with our bikes over the years.This season, Jesse claimed the Enduro World Series Overall Champion title and, alongside teammates Remi Gauvin and Andreane Lantheir Nadeau, the 2nd Overall Enduro World Series Team title. But all good things come to an end. We bid farewell to Jesse as he moves on to a new team in 2023. We’re so proud of him, and wish him nothing but the best moving forward. To celebrate this remarkable athlete and all of his successes, we put a little edit together and compiled a collection of Jesse's notes from his rise to the top.What a run eh!? A young Jesse back in his cross-country race days with Team Whistler. In 2017, Jesse secured his first EWS top 10 outside of North America in Ireland. Jesse's result, the trails and the energy of the crowds kickstarted his confidence to race on the world stage.The dynamic between Jesse, Remi and ALN has been infectious. Reflecting, Jesse noted that creating the first episode of Jank Files with filmmaker, Tom Caldwell really bonded the team. "Tom asked questions like 'what is a good trait (about the others) and what is a bad trait.' I was surprised at how easily we knew each other's strengths and weaknesses but that it didn't affect how we felt about each other.""Tom asked questions like 'what is a good trait (about the others) and what is a

### Top Comment:

Thank you Rocky Mountain for everything! I wouldn't be where I am without you.P.S. I'll still accept my invite to the annual Christmas party

### Article Summary: 

SRAM Enters Softgoods Market with Purchase of Velocio Apparel - Pinkbike: Velocio Apparel has announced today that they are selling to SRAM. The company launched in 2013 selling high-end women's road cycling kit. They eventually began to create men's apparel, and more recently, mountain bike apparel. This is SRAM's third acquisition in the past year after the purchase of Time Sport and Hammerhead, but will be SRAM's first foray into apparel.Velocio says that they were looking for a larger brand to partner to help with sustainable growth, stating that "succeed and your reward is a deeper expectation to grow. Grow too large, too fast and the risk is the often-lamented loss of brand, the dilution of product, and corner-cutting changes to boost profits. We won’t do any of those things."In selling Velocio, our focus was on finding a partner, a large brand or brand family that would value our three pillars: design, responsibility and culture. We approached SRAM precisely because we thought there might be a place in their well-respected orbit of components and bike products for us. We approached SRAM because our cultures are compatible.—VelocioSRAM and Velocio shared sponsorship of the UCI pro cycling team Velocio-SRAM back in 2015 and so, although softgoods is unchartered territory for SRAM, their history of partnering with Velocio goes back several years. Both brands have also been supporters on World Bicycle Relief throughout the years.Velocio says their supply chain, manufacturing, and product design will remain independent and will not fold into SRAM's manufacturing arm. Their guarantee policy will remain the same, as will their customer service team. What’s exciting is that we’ll now have SRAM’s backing for more independent product design and development, including a still bigger push towards sustainability in our product offerings and how we deliver them. We’ll also have SRAM’s

### Top Comment:

First foray into softgoods? Tell that to my Reverb

### Article Summary: 

Lewis Buchanan Signs With... OnlyFans? - Pinkbike: Today in news we aren't quite sure is real, Lewis Buchanan has signed with OnlyFans. For those pretending to be unfamiliar, OnlyFans is a content subscription service used largely for "direct to consumer" adult content, but it also features other kinds of content creators. Creators earn money from fans who subscribe to their content. The site has over 3 million creators and over 220 million users.I am proud and very stoked to announce my signing with OnlyFans for 2023 as title sponsor. I have always wanted to partner with a company outside the MTB industry but who are keen to get stuck into something new. OnlyFans is a social media platform where anyone can be creative and showcase their talents. Sharing exclusive content or whatever you are passionate about and connecting with your fans. I will use my account to share my tips and tricks on bike setup, on track tips and behind the scenes footage at events across the world. It is cool to bring a brand this large into the MTB world and I’m excited on what this will do for me and everyone involved. I look forward to working alongside the people behind the company and having their support and backing to create the coolest MTB content and visit the most insane locations around the world on two wheels. This job I do is a business more than it ever used to be and I am proud of myself for making moves outside of the industry, stepping into something that’s never been done before in MTB and to see this come together after months of piecing it together. Let’s have a good one!—Lewis Buchanan via InstagramLewis Buchanan's OnlyFans can be found here. Be aware that the platform hosts lots of

### Top Comment:

“Hey babe whats this Onlyfans charge doing on the account?”Mountain bikes i swearLol

### Article Summary: 

First Ride: 2016 Specialized Stumpjumper FSR - Pinkbike: Specialized's Stumpjumper FSR is a mainstay in the company's lineup, a bike that's designed to bridge the gap between an XC bike and a full-blown enduro race machine. Last season saw the introduction of the Stumpjumper 650b, signalling the official end of Specialized's reluctance to enter the mid-sized wheel market. For 2016 any hint of that hesitation is gone, and there are new versions of the 650b and 29” models, a tool storage solution that's unlike anything currently on the market, and even a 27.5+ option that's sure to raise some eyebrows. As the action packed week of Crankworx came to a close in Rotorua, New Zealand, we headed to the outskirts of town for a few days to get a closer look at the updated bikes, as well as spend some time on the trails with the athletes and employees who were instrumental in the design process.No More EVOIn years past there had been two different versions of the Stumpjumper FSR: the standard configuration, and the EVO, which had slightly more travel and slacker geometry to suit the needs of aggressive riders. The EVO designation is gone for 2016, but the longer travel and relaxed geometry remain - both the 650b and 29” options have slacker head angles than ever before. Dropper posts are also standard equipment on every single version, all the way down to the base model aluminum Stumpjumper FSR Comp. The same goes for wide rims, with every model getting either alloy rims with a 29mm internal width, or carbon rims with a 30mm internal width. There are a total of five bikes for each wheel size, three with carbon front triangles, and two with full alloy frames. Prices for the alloy version start at $2900, and carbon

### Top Comment:

Finally a bike that can fit a small bong and bag of weed inside.

### Article Summary: 

Yamaha to Launch Their Own eMTB Lineup - Pinkbike: The Yamaha PW-X motor system.Yamaha Motors is launching a new division, dubbed "Yamaha Bicycles," to enter the electric-assist fray with their own line of complete bikes. Previously they'd supplied eMTB motors to companies like Lapierre, Giant, Haibike, and more, but it appears they will now also be bringing an in-house offering to market.Our own Richard Cunningham has been predicting motorcycle companies' entry into the eMTB market for quite some time now, and with both Yamaha and KTM (via Pexco) developing eMTBs it certainly feels like a significant shift is underway.We've heard many anecdotal stories about eMTB users often coming from the motorcycle world, and Yamaha is clearly taking aim at those riders who will recognize a familiar name. It is possible that motorcycle brands like Yamaha will come in and eat traditional bike manufacturers' lunch with eMTBs. Surely Yamaha has some competitive advantages over the companies that they supply motors to, but will they bring enough bike experience to the table to create a compelling offering?Another major question will be on pricing, which is yet to be announced. Yes, the familiar refrain of "I could buy a motorcycle for that" could ring out—more ironically than usual; but it is possible that Yamaha's economies of scale and production efficiencies could result in lower, disruptive prices.Their focus here is clearly the US market, where many feel that eMTBs could threaten trail access. While some eMTB manufacturers that are selling in North America have chosen to not address trail access issues, it seems likely that Yamaha will work to help safeguard our sport's most important resource. Conversely, Yamaha being a motorcycle company may fan the flames of opposition to eMTB access.No word yet on distribution channels, but we expect Yamaha to open accounts in

### Top Comment:

Title should read "Yamaha Continues to Make Motorbikes"

### Article Summary: 

Are Shimano & SRAM Developing Brakes For Headset Cable Routing? - Pinkbike: Shimano and SRAM have both filed patents that show a brake lever with a hose that attaches close to the handlebar. It seems likely that this is related to the current trend for bike manufacturers to run cables and hoses through the upper headset bearing. These levers would allow the hoses to run from the headset to the brake lever in close contact with the handlebar, potentially getting rid of the loose loops of brake hose which normally run in front of the head tube. The hoses could even be run through the handlebar and stem. In combination with wireless shifting, this could create a visually cable-free bike. Perhaps the brakes have been developed in response to manufacturers putting cables through the headset, or perhaps bike manufacturers, who know what's coming from component manufacturers years before we do, have already been designing bikes to take advantage of these brakes. This possibility was hinted at by Merida when we asked various manufacturers about their thinking behind this style of cable routing:Particularly in view of the brakes that might be introduced soon, which will route the cables much closer to the handlebars, we expect that headset cable routing will become more common among brands.—MeridaIn the case of Shimano's design, the master cylinder is offset from the hose port and a hole perpendicular to the handlebar connects the two, allowing hydraulic fluid to flow from the master cylinder into the hose. While most brakes work by directly pushing the master piston when you pull the lever blade, which in turn forces hydraulic fluid through the hose into the caliper, this design appears to work by pulling the piston towards the lever blade, which then forces fluid down the hole, then into

### Top Comment:

I'd like to make a suggestion on where SRAM and Shimano can route their hoses.

### Article Summary: 

First Look: 2023 Commencal T.E.M.P.O. - A New Short Travel Trail Bike - Pinkbike: After plenty of build up, including a ridiculously good video featuring Hugo Frixtalon, Commencal have finally released the Tempo, their new short travel trail bike. When images of the bike first emerged there was speculation that this would be an XC-race oriented machine, an aluminum steed built to go head-to-head with the lightweight carbon whippets already on the market. As it turns out, that's not exactly the case. Instead, the Tempo falls into the do-it-all category, with 29” wheels,125mm of rear travel, and a 140mm fork. It's also the first production bike to feature Commencal's new Virtual Contact System suspension layout, a departure from the link-driven single pivot design Commencal has become known for on their trail and enduro bikes.Commencal T.E.M.P.O Details• 29" wheels• Aluminum frame• Travel: 125mm / 140mm fork• 65.5° head angle• 76.6° seat angle• Chainstay length: 435mm (S, M) or 440mm (L, XL)• Sizes: S, M, L, XL• Price: $3,200 - $6,200 USD• www.commencal.comThere are four complete bikes in the lineup, with prices starting at $3,200 USD for the Tempo Ride, and going up to $6,200 for the Tempo Signature LTD. The frame only is priced at $1,800. As you'd expect, aluminum is the only frame material option. Before going any further, I should note that the official spelling of this model is T.E.M.P.O. As far as I can tell that's not an acronym – the periods are just there for style - so for the sake of readability and ease of typing I'm going to call it the Tempo from here on out. Frame DetailsI'll reserve final judgment until I see one in real life, but based on all the images I've seen I'd say this is one very good looking bike.

### Top Comment:

YOU WERE THE CHOSEN ONE COMMENCAL 

YOU WERE SUPPOSED TO DESTROY THE HEADSET ROUTERS, NOT JOIN THEM

### Article Summary: 

Results: Fort William DH World Cup 2018 - Pinkbike: Live timing here.Watch the event live on Red Bull TV here.The rain held off, but Fort William still had plenty of variables to offer. Unsurprisingly, Valentina Holl left the Junior Women’s field in the dust with almost a 30 second lead. But the battle for second came within 0.027 seconds, with Paula Zibasa just barely earning her spot on the second step over third place Anna Newkirk. On the Junior Men’s side, Kye A’Hern took the win with just under a second on Thibaut Daprela, and Kade Edwards rounded out the top three coming in with a 2.69 second gap behind first. Tahnee Seagrave came away with her first Fort William win, crushing the competition, gaining time at every split. She got the win ahead of Myriam Nicole by 8 seconds. The most impressive run of the day so far might have been Rachel Atherton, who snapped her chain only a few pedal strokes out of the gate. Not surprisingly, she still pulled off an impressive finish, coming in 3rd, and less than a second off 2nd place. Not to mention she crashed mid-run too. Amaury got his first ever World Cup win, taking the top step by 0.27 seconds. Loris Vergier and Troy Brosnan round out the top three, with Reece Wilson coming in 4th after holding the top spot for much of the day. Aaron Gwin and Luca Shaw both suffered mechanicals. Snapped chains seemed to be a theme of the day. On to Leogang next weekend….Live Updates:7:36am: Pierron takes his first ever World Cup win!7:34am: Luca Shaw finishing with a flat rear tire, securing a win for Pierron.7:33am: Luca Shaw up by more than a second at split 1. 7:32am: Danny taking different lines, but they don't seem

### Top Comment:

Hey REDBULLTV!!!  
I KNOW THIS MAY BY SHOCKING TO YOU, BUT PEOPLE ACTUALLY WATCH WOMENS DOWNHILL RACING!  
WOULD IT BE THAT CRAZY TO AT LEAST SHOW THE FULL RUN OF THE TOP 10 WOMEN...OR HEY, EVEN THE TOP 5!!!
I KNOW I'M NOT THE ONLY ONE WHO WOULD LIKE TO SEE MORE THAN THE START AND THE FINISH!!
GROW UP!!

### Article Summary: 

Five Things We (Sometimes) Miss About Older Bikes - Pinkbike: There's no doubt that bikes have got a lot better over the last few years. I don't want to go back to fixed seatposts, sketchy geometry, inadequate brakes, and carrying five spare inner tubes on every ride. But there are a few features that have inexplicably gone out of fashion and that I'd like back - at least sometimes. External cable routingWhile brands like Raaw are still fighting the good fight, it's getting increasingly difficult to find bikes with external cable routing. Long before manufacturers decided it was a good idea to start putting cables through the headset, aesthetics had been edging out serviceability for years as brands went fully internal.It's really the external rear brake lines that I miss. Being able to upgrade or swap a brake over was once a matter of minutes but now involves a re-bleed at a minimum. Even if threading the hose through the frame is as painless as possible (which it rarely is), it's the re-bleed that makes it a fuss. Sure, most people rarely swap brakes, but when you do it's so nice to be able to simply bolt a new one on. When one of my brakes failed on the first day of a riding holiday in the Alps, I was able to swap to a spare set in minutes. Not having to charge anythingA bicycle is fundamentally a simple, mechanical device, and that's a big part of its appeal for many of us. While electronic gears and droppers have considerable advantages over cable-operated versions (the lack of cables being the most obvious one) there's something about having to connect your smartphone to make adjustments or check that the batteries are charged before you can go out riding that doesn't sit

### Top Comment:

1. Being able to afford them.

### Article Summary: 

First Ride: Fox's New 38 Fork - Pond Beaver 2020 - Pinkbike: It hasn't exactly been a secret that Fox was working on a new single crown fork – Richie Rude showed up with one at the final round of the Enduro World Series last year and the rumor mill immediately kicked into high gear. The wait is over, and now it's official: meet the new Fox 38. As the name implies, it has 38mm stanchions, and it's the stiffest single crown fork in Fox's lineup. The 38 is brand new, but many of the design features are also found on the new 36 and 40 – you can read more about those two forks here. Fox 38 Details• Intended use: enduro• Travel: 160, 170, 180mm • Wheel size: 27.5" or 29"• Stanchions: 38mm • Lower leg bleeders• Damper: Grip 2 w/ VVC, Grip• Offset: 37mm, 44mm, 51mm• Optional mud guard• Floating thru-axle, QR and Kabolt options • Actual weight: 2430 grams (29" w/ QR thru-axle)• MSRP: $949 - $1199 USD• More info: www.ridefox.comThe 38 is available with 160 - 180mm of travel for either 27.5” or 29” wheels. Prices range from $949 - $1199 depending on the damper and stanchion coating. Color options include orange, black, and a limited edition 'pistachio' version. Weights start at 2180 grams for the 27.5” version, and the 170mm 29” fork I'm currently on weighs 2430 grams with the QR thru-axle installed. For comparison, that's about 200 grams more than a 2020 36. DetailsJust how much stiffer is the 38 compared to the 36? Well, according to Fox it's 17% stiffer fore and aft, and 38% torsionally stiffer. Those are significant numbers, especially since the 36 wasn't exactly a noodle. That increased stiffness was achieved in part by increasing the stanchion diameter, but the

### Top Comment:

Why wasn't the bleed valve called the "Fox Air Release Technology"  valve instead?Disappointed

### Article Summary: 

Spotted: Evil's Unreleased eMTB - Pinkbike: Shimano MTB's Instagram page posted a photo series of what is undeniably an unreleased eMTB from Evil Bikes. A bike check was published in Shimano's 'Further' magazine reveals that the frame boasts 166mm of rear wheel travel using Evil's Delta System suspension design, like the rest of their bikes, and uses a 170mm fork. Shimano's EP8 motor runs off of a 630 Wh battery and stats are visible from the SC-EM800-display. The carbon bike looks like it has been built up with dual 29" wheels, but that doesn't rule out mixed wheel possibilities. There's also plenty of room in the front triangle for a water bottle too.The full story where these photos first appeared can be found here in Shimano's Further magazine that is available online and promotes adventures and advocacy trail with e-MTBs. Titled Homecoming Horsepower, the words play on the e-MTB riding experience, written by Shimano ambassador Elladee Brown about rediscovering trails in the Selkirk region of Southeastern B.C. where she grew up. We've reached out to Evil Bikes for further information about a new bike, but no, there won't be a review coming tomorrow.

### Top Comment:

The E-wrecktion

### Article Summary: 

Nino Schurter Reprimanded by Swiss Army After Mooning at the White House - Pinkbike: Nino Schurter has landed himself in hot water after mooning in front of the White House and tagging Donald Trump.The Olympic Gold Medallist and reigning World Champion posted the Instagram story with Florian Vogel, Lars Forster and mechanic Kurt Gross en-route to the Snowshoe World Cup with the caption "White (peach emoji) for the White House". The post has since been deleted but was screenshotted and posted on Twitter here.All three riders are members of the Swiss army, which funds their training. Schurter was on service duty between races in the United States and Daniel Reist, spokesman for the Swiss armed forces, told the press he was paid a day's wages on the day the photo was posted. “Mr Schurter’s commanding officer will deal with the matter in a proportionate but disciplinary way,” Reist told swissinfo.ch. Reist also defended Schurter, saying that cyclist had previously behaved in an exemplary way when representing the army and this was his first slip up. Schurter has apparently already apologised to his superior officer and the Swiss Army says it did not want to make a scandal of the incident. Nino may face a reprimand but the severity of the punishment is up to the commanding officer and won’t be made public. The 33-year-old has also already apologized in Swiss media. He told the Swiss tabloid Blick: "The photo was a spontaneous one. America is a magnificent country and I love traveling there.”

### Top Comment:

Does a high-five count as a reprimand?

### Article Summary: 

Update: Industry Veteran Michael Bonney Passes Away After Announcing Decision to End His Life - Pinkbike: link="https://www.w3.org/1999/xlink"> View this post on Instagram A post shared by Orange Bikes (@orangebikes)After announcing his decision to allow his life to end last Tuesday, Michael Bonney passed away on Saturday.Bonney was injured in a road biking accident in 2013 at age 54 and has been living with near total paralysis for the past six years. He posted a beautiful, heartfelt letter explaining his reasons for turning off his life support systems last week. In it, he explained that he expected to pass quickly and that he would be sedated to reduce his suffering. The original story is below.His wife Linzi Anne announced his passing yesterday and Orange posted a heartfelt tribute. Both can be read in full here:Michael, for those who don’t already know, passed away on Saturday afternoon in a peaceful and dignified manner at home as he wished. I feel so sad Michael felt unable to continue on but at the same time I’ll take solace that he is finally free from suffering and at peace.At this sad time I’m minded of a conversation we had shortly after his accident, at a time when he still had dreams and the reality of complete paralysis was sinking in. He told me of a dream he had the previous night and how gutted he felt to wake to the realisation it was only a dream - he told me:I dreamt of my hands and legs being stung by nettles as I rip down the trail that leads to the Beamish Burn, it's dry dusty and all I hear is the laughter from JMC and Colin D who lead me down, Brian F is behind me and the summer sun is setting, it’s a perfect

### Top Comment:

Total respect. Peace.

### Article Summary: 

Contest: Who is Chester? - Pinkbike: To view this video please enable JavaScript, and consider upgrading to a web browser that supports HTML5 video Who is Chester? by raceface Add to Favorites Added to Favorites Views: 10,552 Faves: 56 Comments: 9 Race Face is stoked to announce a new addition to their flat pedal lineup: the Chester Pedal. This tough nylon composite pedal gives your feet a large, thin platform to stomp on, meaning the same grip as traditional alloy pedals with less weight. The Chester offers great performance for DH shredders through to Dirt jump senders. All at a price that leaves plenty of cash in your pocket for that round of bevies after a day of hammering out laps with the crew!Who is Chester? Do you want to win a set of new Chester pedals? We know you do – but there’s a price for this hook-up! We heard some of the Chester rumors and showcased them in the video above; now we need you to spill the beans on what you know about Chester! Share your juiciest ‘Chester facts’ in the comments below from November 11th - 20th for a chance to win! The Top propped Chester‘ism will get a Race Face Chester group (Chester 35 bar, stem, pedal, crankset, grip and post), the next 10 top favorited Chester facts will each score a set of Chester pedals. Plus Race Face staff will choose 2 Wildcard pedal winners. Dig deep and get creative – the world wants to know all about Chester’s exploits!Features:Nylon composite bodyThin and lightweight concave platformLarge platform with the same grip as traditional pedalsReplaceable steel pins (8 per side)Cro-mo axleSmooth and durable sealed bearing and bushing systemFully sealedServiceableSpecs:Built For: DH/FR/DJ/AM/TrailBody Material: Nylon composite body Axle Material: Chromoly steelHeight: 15mm – 18.4mmPlatform Size: 110mm x

### Top Comment:

I heard Chester is a new Kardashian. Light as their heads, wide as their butts, and mostly made of plastic...

### Article Summary: 

Pinkbike Poll: How Much Would You Pay For These Hypothetical Upgrades? - Pinkbike: Bike designers have to compromise somewhere. I'm sure we'd all love a super-light, ultra-reliable bike with space for five water bottles. But if you had to put a price on these things for your main bike, how much would you be willing fork out?To make things simpler I've gone with US dollars, but it's a ball-park-figure kind of question so don't worry too much about currency conversions.I look forward to reading a million paywall comments below. What's the most you'd be willing to pay to drop 1Kg (2.2lbs) from your bike? No compromises in performance or reliability - this is purely hypothetical. $0 $0-$100 $100-$200 $200-$300 $300-$400 $400-$500 $500-$600 $600-$700 $700-$800 $800-$900 $900-$1,000 More than $1,000 Responses: 9596 Faves: 0 Comments: 0 If it didn't already have one, what's the most you'd be willing to pay for a water bottle mount on your bike? $0 $0-$100 $100-$200 $200-$300 $300-$400 $400-$500 $500-$600 $600-$700 $700-$800 $800-$900 $900-$1,000 More than $1,000 Responses: 9248 Faves: 0 Comments: 3 What's the most you'd be willing to pay for adjustable suspension travel? $0 $0-$100 $100-$200 $200-$300 $300-$400 $400-$500 $500-$600 $600-$700 $700-$800 $800-$900 $900-$1,000 More than $1,000 Responses: 8926 Faves: 1 Comments: 0 What's the most you'd be willing to pay to never get a puncture again? No compromises in performance or weight - this is purely hypothetical. $0 $0-$100 $100-$200 $200-$300 $300-$400 $400-$500 $500-$600 $600-$700 $700-$800 $800-$900 $900-$1,000 More than $1,000 Responses: 9322 Faves: 0 Comments: 2 What's the most you'd be willing to pay for a 100% reliable drivetrain? Again, assuming no compromise in performance. $0 $0-$100 $100-$200 $200-$300 $300-$400 $400-$500 $500-$600 $600-$700 $700-$800 $800-$900 $900-$1,000 More than $1,000 Responses: 8902 Faves: 1 Comments: 1 What's the most you'd be willing to

### Top Comment:

Just important to note:  I would pay absolutely nothing for Outside+

### Article Summary: 

Review: Enve’s M735E Wheels Fail Our Test - Pinkbike: Enve started producing carbon rims back in 2009, and by 2010 had produced the first carbon wheelsets to be ridden to victory in a UCI World Cup DH race, under the Santa Cruz Syndicate. Since then, they have been continually improving their products while still manufacturing in the USA. These M735E wheels are their eMTB specific enduro wheels from the latest M-ranges that use the new patented and 'un-pinchable' Protective Rim Strip (PRS). Like all Enve products, these wheels are about as far from cheap as you can get, but the Utah-based brand prides itself on in-house development and production from the start to finish of the product cycle. They are also proud of the fact that their wheelsets essentially cost the same as they did 10-years ago when they started. The 29" x 35mm internal rim-width wheelset isn't particularly light at 2087g (Enve's website quotes 2,218g) for the pair and the whopping price tag of $3,080 USD.Enve M735E Wheel Details• 27.5" or 29" (tested) options• Carbon rims, 35mm internal width• Protective Rim Strip• 32 spokes / 2 cross lace pattern• Chris King hubs• Sapim CX-Ray bladed J-bend spokes• Made in Utah, USA• Weight: 966g front, 1121g rear, 2087g pair (29", Chris King hubs, Protective Rim Strip and valves, actual) • MSRP: $3,080 USD• www.enve.comThe hookless carbon rims have an internal width of 35mm, and arrive with the protective rim strip and tubeless valve stems included.Chris King's hubs give that distinctive buzz and use 72 points of engagement.PerformanceJudging the on-trail performance of these wheels was tough, as the following saga unfolded throughout the testing period. Initially, I started by using the front wheel on my hybrid setup on the Specialized Turbo Kenevo, I had great success and liked the more accurate

### Top Comment:

Wow. Brutal.

### Article Summary: 

How Much Do Professional Mountain Bikers Get Paid? - Pinkbike's State of the Sport Survey - Pinkbike: In some major sports such as soccer, Formula One or even road cycling, athletes' salaries are common knowledge and published annually. In mountain biking, this definitely isn't the case. How much a rider gets paid in downhill, enduro, slopestyle or xc is often a closely guarded secret that gets even more obscured as earnings are mixed in with bonuses, prize money and sponsorship fees. It's often not as simple as saying rider x will earn y dollars in a given year as their pay is often heavily tied to their performance. To try and get a better picture of how much riders are earning, we included remuneration as a section of our State of the Sport survey. One thing to note is that rider pay does not equal the total money a brand has spent on that rider. Regardless of the rider's remuneration, the total investment from a brand to go racing with them on an international stage is significant; it's easy to spend $50K+ per rider on travel, accommodation, food, fees, mechanical support, etc. for a season. Especially with EWS where the travel is extensive. There are instances where racers take a lower dollar figure to get on a factory team versus a higher wage and managing all their own independent deals (and sleeping in vans).The most interesting results from the remuneration section of the survey are below. We offered any rider that had finished in the top 40 of their discipline in the past two seasons the opportunity to take part in the survey, for more information on the riders surveyed, click here. Note, junior riders have been removed from all the below calculations and some riders declined to answer this

### Top Comment:

The gender pay gap isn't real in mountain biking.  Men choose high paying disciplines like slopestyle and cross-country.  But women on the otherhand choose lower paying disciplines like women's slopestyle and women's cross-country.

### Article Summary: 

Field Test: 9 XC Bikes & the Grim Donut VS the Efficiency Test - Pinkbike: PINKBIKE FIELD TESTCross-Country & Down-Country Bikes VS The Efficiency TestGravel roads, power meters, a dose of bro-science, and no lock-outs allowed.When you hear someone say "cross-country," what do you picture? No, I'm not talking about a bunch of really skinny people with an odd enthusiasm for suffering, although you're not far off. While it doesn't get spoken about with the same affection as descending, cross-country riding - and especially racing - puts much of the focus on climbing. That's where races are usually won or lost, and being as quick as possible up the hills requires a special type of training and dedication from competitors, as well as a particular emphasis from their machines. Not only must the bikes be as light as possible, but they also have to utilize a rear-suspension design that maximizes pedaling efficiency. After all, wasted watts mean you're going slower and that just won't do. If you're thinking ''That's what lock-outs are for,'' you're 100-percent correct; firming up a bike's suspension is a useful tool that makes sense to use when racing. But if you've raced, you'll know there are often occasions when you're speeding across rolling terrain, suspension unlocked and you out of the saddle, stabbing at the pedals because all semblance of good form was forgotten after the first hour. And when the eyes cross and you lose control of your breathing, sometimes you can forgot that your bike even has a lock-out. So yeah, of course they're efficient when locked out, but want to know how they perform when the suspension is allowed to do its job. There are a bunch of different suspension designs out there, many of which claim to be able to smooth your

### Top Comment:

The Grim Donut, upset with having been forced to complete the course with enduro tires rather than the XC control tires, gave this statement:“Look at the way I’ve been treated lately, especially by the media. No bike in history, and I say this with great surety, has been treated worse or more unfairly.” “I’m efficient. Some people would say I’m very, very, very efficient.” “And then people say oh, is he a good climber? I’m a better climber than all of them put together, but they can’t admit it.” “My efficiency is one of the highest — and you all know it! Please don’t feel so stupid or insecure; it’s not your fault.”His focus then turned to Levy’s comment on the size of his cranks: “My cranks are long and beautiful, as, it has been well documented, are various other parts of my body.” “All of the bikes on the field test flirted with me – consciously or unconsciously. That’s to be expected.” “I’m so good looking.” “I feel like a superbike except, like, times 10, OK? It’s true. I’m a superbike.” “How handsome am I, right? How handsome?”

### Article Summary: 

Redalp Downhill Bikes 2012 - Pinkbike: THE INVENTION of an articulated chain link (patented) allowed Redalp to go a different way in frame design. This configuration gives more rearward axle path for outstanding suspension performance, links the head tube with the rear wheel on a straight line for maximum stiffness and minimum weight and solves all problems associated with high pivot points. KEY FEATURES: * Chain link [Pro-Motion]. No chain growth, no squat, no pedal back kick!* Lightweight – both models are less than 37lb (16.8kg)* Reliable, robust aluminum/carbon frames in 6061-T6* Increased rearward axle path dominates rocks and roots* Single pivot point, reasonable production cost, competitive sales price* Low maintenance“Our flagship, Replica DH, comes with a Fox 40, UST compatible Deemax and a 10 speed cassette. We offer this bike for a very reasonable price” says Andy Wuthrich from Redalp. “The Team DH Bike is probably an even better value for money. Equipped with Easton Havoc UST wheels, a 10 speed cassette and a Boxxer R2C2, some riders may prefer this bike regardless of the 2’000 Dollar cost saving”REDALP is a Swiss Mountain Bike manufacturer. The Company was founded in Crans-Montana, Switzerland in August 2011. For more information please visit http://www.redalp.com

### Top Comment:

Kill it before it lays eggs!

### Article Summary: 

Tragedy At Enduro World Series - Race Cancelled - Pinkbike: We have just received official announcement that a rider died today during round five of the Enduro World Series in Crested Butte USA. Here is the official word from the organisers:It is with the deepest regret that Big Mountain Enduro and the Enduro World Series announce that there was a serious accident during Stage 3, the first stage of Saturday's race, resulting in the fatality of a competitor. The rider's family has been informed and the competitor's identity will be released in due course.Emergency personnel immediately arrived at the scene. The competitor was treated on scene by medical personnel and transported to the nearest roadway. The Gunnison County medical examiner confirmed the fatality. With respect for the rider and their family, this round of the Enduro World Series competition has been cancelled. Our deepest thoughts and sympathies go out to the rider's family. The thoughts of everyone here at Pinkbike are with the rider's family and friends.

### Top Comment:

Condolences to the rider's family. It is terrible to lose someone, regardless of the circumstances.

### Article Summary: 

Consumers Threaten to Boycott Backcountry.com as Retailer Sues Businesses for Using the Term ‘Backcountry’ - Pinkbike: Some consumers are expressing frustration with online outdoor retailer Backcountry.com on social media using #boycottbackcountry on Twitter and Instagram because the e-commerce retailer has reportedly been taking legal action against small business owners who use the word “backcountry" as part of their name. The Colorado Sun first reported the story late last week, listing several of the businesses that have been impacted.The publication said that while women-focused avalanche education clinics Backcountry Babes reached an agreement with Backcountry.com and will be able to continue using the term in their name, Utah bikemaker Backcountry eBikes settled in May and will henceforth be known as Backou eBikes. Jordan Phillips rebranded his jeans company from Backcountry Denim to BDCo after his trademark for Backcountry Denim was canceled. Backcountry's Arcylon long-sleeve jersey and Mid Mountain hip pack are two of the mountain bike focused products they've introduced under their own brand.Backcountry.com originally got the trademark for use of the word "backcountry" for “retail store services, mail order services and computerized online retail store services" in 2007. Last year they filed for trademarks for hundreds of pieces of gear and in March of this year, they announced in a press release that they would be expanding their brand product offerings to include climb, mountain bike, and winter collections as well as outdoor lifestyle apparel and travel gear.My feeling is that nobody should have the right to the term 'backcountry.' It’s like trying to trademark 'road' or 'beach' or 'mountain.'—Jordan Phillips of BDCo to the Colorado SunThis is not the first time that consumers have flocked to social media to condemn a brand that's attempting to protect a trademark. You can still find the Specialized #roubaixgate tweets here. And, going back

### Top Comment:

Come on Backcounty.com, get the fuck outta here with this shit.

### Article Summary: 

Mountain Lion Shot & Killed After Stalking Family on California Trail - Pinkbike: A mountain lion has been shot and killed after it was reported stalking a family on a cycling trail near Placerville in Northern California. A couple called 911 and reported they had been followed by a cougar for 10 minutes on the El Dorado trail, a 32-mile trail that links Placerville to Folsom. The couple were walking along the trail with two children in a stroller and two large dogs.The lion did not retreat when shouted at by the family, other trail users or by a deputy who responded to the call. The lion was pacing back and forth on the trail when the deputy arrived but after he shouted it started walking towards him instead of running away as a normal healthy mountain lion would.According to a Facebook post from the El Dorado Sheriff's Office, "In a last effort to scare the animal away, the deputy fired a warning shot into the ground in front of the lion. The lion continued in its path toward the deputy, further showing that it was not well and dangerous to the public. The deputy had no option other than to put down the animal."Only one lion was observed during the incident and it has now been taken by the California Department of Fish and Wildlife for further study. The post also stated that "It is important to note that mountain lions live throughout El Dorado County and should be allowed to live undisturbed."Mountain lion attacks remain extremely rare and there have only been seven fatal attacks in the United States since 1994. The only one in Northern California was on a trail near Auburn about 20 miles from the site of Monday’s incident.

### Top Comment:

I was stalked by a cougar once. In the end she went back to her husband and all was well.

### Article Summary: 

First Look: Santa Cruz's First eMTB, the 2020 Heckler - Pinkbike: Hold onto your hate: Santa Cruz has entered the world of eMTBs with their all-new Heckler, a 150mm-travel all-mountain machine that's powered by Shimano's 250-watt Steps E-8000 motor and rolling on 27.5" wheels. Their first e-bike is modelled after like the non-motorized Bronson, which we loved when we tested it last year. Santa Cruz will offer the Heckler in four different configurations, ranging from $7,399 to $12,599 USD, with all of them based on their top-tier CC carbon frames; there's no less expensive C or alloy Hecklers in the pipeline... Yet. There's also no frame-only option at this point. Heckler Details• Intended use: All-mountain • Wheel size: 27.5" • Rear-wheel travel: 150mm • Fork travel: 160mm • Shimano Steps E-8000 drive system• Head angle: 65.5-degrees• Sizes: S - XXL• Weight: 46lb (as pictured)• MSRP: $7,399 - $12,599 USD (X01 RSV $10,899 pictured & ridden)• More info: www.santacruzbicycles.comThe Heckler that I rode (and the one shown here) is the CC X01 RSV model that's one step down from the top-dog CC XX1 AXS RSV bike. If you don't suffer from acronym envy, or just don't want to spend that kinda coin, there are models with slightly less letters and slightly less dollar signs.The 150mm-travel Heckler uses Shimano's E-8000 Steps motor, a 160mm e-fork, and is on 27.5" wheels.All of the complete bikes get four-piston brakes with big boy 200mm rotors, single-click Eagle drivetrains from SRAM, and a RockShox Super Deluxe shock. On the front, you'll find 160mm-travel e-ready forks from RockShox and Fox. Want more carbon? The X01 and XX1 versions come stock with Reserve carbon e-bike wheels (32h DH rear rim, 28h front), but you can also get them on less expensive models if you want to make them,

### Top Comment:

Thay should have ran 29" wheels and called it the "Lazyboy"instead of the "Tallboy"..

### Article Summary: 

Review: 6 of the Best Tire Inserts Ridden & Rated - Pinkbike: Welcome to the two-part insert test. First up, some visual comparisons and my initial assessment of how they feel. The second part will feature a data led approach with impact resistance and real-world telemetry testing. Stay tuned for part two!Tubeless tires have won-out against their tubed counterparts in mountain biking but that doesn’t mean that it’s the perfect system. Not only is it vulnerable to the possibility of burping the air out of the tire at high load or while cornering, it also needs to be a system that keeps damage and destruction at bay while withstanding a whole variety of different forces and abrasions.How to best keep our tires inflated? And, what’s more, is there a way that not only means we’re less likely to puncture but also includes a handful of performance benefits?Tire inserts are one potential solution. Maybe you need them, maybe you don’t. How we spec our wheels, tires and even our inserts largely depends on where and how we ride. It’s a really interesting topic. Some people would choose a heavy tire and no insert and some would combine the two for all out protection. What I’m interested in during this comparison is the idea of running a slightly lighter tire than I normally would while hopefully reaping all the benefits the insert has to offer.Typically, I would run a rear tire weighing around 1200g or 1250g. For this test I ran tires that were around two or three hundred grams lighter. My ultimate goal was to have a tire and insert that was roughly the same total weight as a heavier duty tire.The benefits of this could be three fold. A more supple tire that was yet further enhanced by running lower

### Top Comment:

Insert comment here

### Article Summary: 

Brett Rheeder to Ride Without a Suspension Sponsor in 2021 - Pinkbike: 400 [Failed to load instagram embed] https://www.instagram.com/p/CNBjJUKpLNo/?maxwidth=1000&hidecaption=1Brett Rheeder has explained on Instagram that he won’t be riding with any particular suspension sponsor in 2021 after announcing he was parting ways with Fox in February.After Fox apparently moved all of its freeride athletes over to Marzocchi, Rheeder couldn't come to terms with them so instead decided to test some smaller suspension brands using his own money. So far he has bought suspension from EXT and Ohlins and has been sent suspension by Intend. Rheeder intends to test the dampers throughout the year and see what happens from there.Hey guys,I’ve been getting lots of messages lately asking what suspension brand I’m going to be riding this year so I thought I’d take a second to explain my situation. First of all, I’d like to thank Fox for the last 9 years, it’s been an amazing partnership and I’m sad to see it go. They’ve decided to reserve Fox for race athletes only moving all of their freeride athletes over to Marzocchi. When we were working on my transition, we couldn’t come to terms and instead I decided to test some different suspension brands out on my own dime.To start things off I bought a set of EXT, a couple sets of Ohlins and Cornelius from Intend has sent me some of his suspension, which I’m super excited to try. It’s the first time that I haven’t been affiliated with a suspension brand and I thought it would be the perfect way to test the waters and give my opinions and feedback. Here’s to a year of testing new brands and let's go from there.—Brett RheederRheeder has since posted a video of this new build that features an Ohlins fork and

### Top Comment:

Such a coincidence , I too will be riding without a suspension sponsorship this year, again,

### Article Summary: 

What 5 Things Would Make Red Bull Rampage Even Better? - Pinkbike: WHAT 5 THINGS WOULD MAKE RAMPAGE EVEN BETTER?2018 Red Bull RampageWe asked insiders, athletes, and spectators what would make Red Bull Rampage even better. This is what they said:1. More Money for the Athletes From the athletes' perspective, obviously the prize money for first place is pretty good, but I think, really when you look at what this event is and the media behind it and the non-endemic stuff, a bigger prize purse all the way down [would be good]. If you look at one golf tournament, one of the majors - these athletes, in my opinion, aren't getting paid enough. I think it's gotten better, but I think it still has a little further to go.—Andrew Shandro Honestly, with the risk we are taking and everything, for sure, there is a lot of money involved and they could give more reward to the riders for what they do. That's the first obvious thing I want to say about the whole thing. —Antoine Bizet There was more money in the sport back when we raced then there is now. It's crazy. The amount of money that the guys earn for what they are doing, it doesn't compute to me. They put their lives on the line, literally. —Brian Patterson I was number one pro [in BMX racing] in the nation in 1980 and Brian was number one pro in the nation as brothers in 82 and 83. They gave away cars at that point. We won three Trans Ams. I was number one cruiser - the 24" bike, three years in a row. I actually rode for Nike. I signed a contract with Phil Knight and rode Nike shoes for two years. —Brent Patterson 2. A Different Judging

### Top Comment:

I think they should have a new format.Let all riders take their first run without receiving scores. Then take an intermission and let the judges rank them all together and release the scores once all the first runs are completed. The judges could compare all the runs on video, and get them stacked correctly. Give the riders 30 minutes after the scores are released to plan their second run. And then run the rest of the comp giving scores as they go. This would eliminate the need to "leave room" for higher scores. It doesnt seem so hard. Yes it would leave a larger time gap for shenanigans but it would be much more fair, and I doubt riders would disagree.

### Article Summary: 

Aaron Gwin’s Race Bike Stolen in Edinburgh - Pinkbike: link="https://www.w3.org/1999/xlink"> View this post on Instagram A post shared by Intense Factory Racing (@intensefactoryracing)Aaron Gwin’s race bike was stolen last night as the team were en route to the Fort William World Cup.The Intense Factory team were stopping over in a hotel near Edinburgh airport last night when the van was broken into and Gwin’s large race bike was stolen. The van was left damaged and the trailer was also targeted but nothing else seems to have been taken. A cash reward has been offered for the bike’s return.Please be on the lookout for Aaron Gwin’s M29 large race bike stolen from team van in Edinburgh last night. Cash reward for return.—Intense Factory RacingAaron was switching between a large and XL frame in Maribor so hopefully he will still have a frame and enough parts to practice and race with in Fort William this weekend. We’ll update this story when we get more details.Update 14:00 PST: Team Manager Todd Schumlick says that the team has another Large M29 being built tomorrow for Aaron thanks to Intense UK!

### Top Comment:

If he can win without a chain does he really need the rest of the bike anyway?

### Article Summary: 

Aaron Gwin Using Box's Shifter and Derailleur? - Pinkbike: If you're the kind of racer who's a World Cup regular, you likely have a single drivetrain sponsor, possibly one that has suspension or even brakes in their catalog as well. But if you're the kind of racer who'll likely go on to be the winningest male downhiller of all-time, and who does crazy shit like winning a World Cup race without a chain or defying mother nature, you can do things a bit differently.YT's Aaron Gwin (who else?) has used Shimano and Fox components while on Trek, and then a SRAM and Fox combo during his Specialized days, but his move to YT saw the Californian's bike get a whole lot more eclectic. Last year he had a SRAM X0 DH derailleur and shifter paired with a set of e*thirteen cranks arms, chain guide and wheels, tires by Onza, a set of HT pedals, and stopping done by TRP. Talk about unique, and especially in a world where most top pro's bikes simply get a SRAM or Shimano blanket thrown over them. It appears as though Gwin's YT is about to get even more out-there, too. Earlier tonight Gwin posted a photo to his personal Instagram account announcing that he has re-upped his contract to wear Bell helmets for a few more years. Okay, that's not too exciting (sorry, Bell), but take a much closer look at the photo itself, and zoom in especially tight on the right side of his Renthal handlebar. See that shifter? Yeah, that's not a SRAM shifter, and it's not from Shimano, either... You don't need to be Sherlock Holmes to know that it's some version of Box's new, downhill-specific clicker.The shifter's shape is a dead giveaway, but just in case that's not enough proof

### Top Comment:

Does it really matter what drivetrain he uses?   Gwin has won without a chain.

### Article Summary: 

Pinkbike Poll: How Long Do You Keep Your Bike? - Pinkbike: From those who cycle through a bike each year to those who build bikes with longevity as the top priority, there are countless approaches to buying and keeping or selling a bike. It's easy to be caught up in trying to always have the newest and shiniest things, but with a bit of maintenance and attention, bikes can stay dialed for longer than we sometimes expect.Brian Park, Pinkbike's head of editorial, recently showed off his RAAW Madonna V2, which he built with a 10-year lifespan in mind. (Though he admits he won't actually keep it for that long.) There are plenty of others out there, too, who put their retro bikes through the wringer at bike parks all summer. We suspect there are lots of you who pick your parts in hopes that they'll last forever, and we want to hear about it.On the other side of the spectrum, there are those who get free bikes for one reason or another, work in the industry, or are willing to pay for cutting-edge tech, and we're curious about that, too. How long do you usually keep your bike? I sell it after a season because I get free shit I sell it after a season because I don't get free shit but my bikes don't survive longer than a season I sell it after a season because I'm willing to pay for new tech I sell it after 2 seasons; I get decent value for my bikes I sell it after 3 seasons; I get my money's worth then upgrade to the new model I sell it after 4-10 seasons; I make my stuff last I'll keep it for 10+ years and eventually it'll be priceless to vintage MTB enthusiasts

### Top Comment:

I replace my bike when my wife let's me.

### Article Summary: 

Review: Hunt Trail Wide V2 Wheels - Pinkbike: Hunt are a UK-based brand focusing on a no-nonsense and value-minded approach to bike components. That’s not to say they don’t have other projects in the works, though, they’re the same group behind the Privateer bike brand.They’re also trying to establish themselves as a brand that not only offers value but also genuine innovation and engineering merit. On paper, their Trail Wide wheels look to strike a nice balance between price, weight, and features, with a price tag of $459 for the 1872 gram wheelset.Hunt Trail Wide V2 Details• Wheel size: 29"• Intended use: Trail riding• Rim material: 6069 T6 Alloy• Rim width: 30mm (internal)• Hubs: 5° RapidEngage• Weight: 863 g (front) / 1009 g (rear) / 1872 g total• MSRP: $459 USD• More info: www.huntbikewheels.ccDesignThe wheels were part of Hunt’s reworking of their wheel range for more aggressive riding. Its terminology is rather simple too. Trail, Enduro and Wide. Simple enough, really. Both the Trail Wide and the Enduro Wide wheels underwent a complete reworking. Although they share a similar design ethos they’re very different wheels - right from the rim to the hub.Hunt tried to establish two key thresholds - how much force a wheel should take before sustaining damage, and how much should it sustain before failing. They built their own jig in their workshop and began testing both their own and competitors' rims. In fact, they were even kind enough to let us use the impact tester during our insert test last year.During their testing, they showed not that their wheels were far out and away the best on the market, but rather tried to demonstrate that rims are often a trade-off between stiffness, strength, and weight, and it’s hard to alter or improve any single aspect in

### Top Comment:

Same pros and cons my wife has about me

### Article Summary: 

Guerrilla Gravity Appears to Have Closed Up Shop - Pinkbike: Questions about Guerrilla Gravity’s future started circulating back in July, when Yoann Barelli shared an Instagram post reminiscing fondly about his time representing the Colorado brand for the last 2.5 years. The split seemed odd considering the mid-year timing plus the clearly affectionate relationship that stayed in place.What seems to be happening is that Guerrilla Gravity is shutting down, probably unexpectedly. A source with knowledge of Guerrilla Gravity who would like to stay anonymous told Pinkbike that the angel investor(s) who had been supporting the brand previously decided to pull out and shut the company down. September 1 seems to have been Guerrilla Gravity’s last day.As to what exactly happened, we really don't have much besides a vague understanding here. A few of us have reached out to various parties at GG, but no comment seems to be the comment of the day. From what we've gathered, the primary funding source behind the brand has been lost, and as a result production had to cease.It seems as though Revved Industries - Guerrilla Gravity's parent company - is still operational, so it's possible that we'll still see something come of the novel carbon fiber manufacturing process that they've pioneered. It was a promising concept, with solid social and environmental gains made over traditional carbon manufacturing techniques. That said, money talks and it's possible that bike manufacturing just wasn't the ticket to success. Employees on social media do seem to be confirming the company’s end. Plus, the brand’s marketing manager – who would probably be the person in charge of creating a public statement – seems to have departed around the same time as Barelli, so that might be our easiest explanation for the radio silence. There also hasn't been any activity

### Top Comment:

Former GG/Revved Employee here. Most of this information is true with a couple minor errors. Revved and GG were basically one company all along. Both were under one roof and employees all worked together on a day to day basis. Revved was created to allow us to make parts for other OEMs. Both companies were officially done as of last Friday (9/29). The companies are for sale. Go buy them if you have the money. All employees saw that the end was near. There were four rounds of layoffs that began in February. The company was a blast to work at and I would never trade that experience. We had our growing pains, but we made the best of it. I love my GG bikes, the community, and the experience I gained from my time with them. Go hire an ex GG/Revved employee and I’m sure you won’t be disappointed. Ride your bike and pour one out for a cool company that had great potential.

### Article Summary: 

Hiker to Claim Self Defence After Right of Way Dispute Stabbing - Pinkbike: A hiker who is facing a felony assault charge following an altercation with a mountain biker is likely to claim self-defense at his trial, the Bellingham Herald reports.69-year-old Dake Traphagen is accused of stabbing a 66-year-old mountain biker following a right of way dispute on a multi-use, bi-directional trail in Bellingham. He is charged with first-degree assault and an additional gross misdemeanor charge of possession of a dangerous weapon for the use of a spring-blade knife.A statement provided to The Bellingham Herald by his defense attorney Angela Anderson states, “Mr. Traphagen has a very strong self-defense claim which is supported by two independent witnesses who we expect to testify about the attack on my client. Unlike the alleged victim, he remained at the scene and cooperated with law enforcement... My client is a 69-year-old man who cares about his community, volunteers often, and has no history of violence or aggression. We ask that people refrain from judgment and let the truth come out through the court process.” Traphagen was released on a $1,000 cash bail and will enter his plea at his arraignment on April 12.More details revealed about the incidentRecords show that Traphagen was charged on March 23 in Whatcom County Superior Court, where further details emerged about the case. As we previously reported, the incident took place on the Stewart Mountain Trail on March 6 and it appears that neither party was willing to yield while passing each other so an argument broke out over who had right of way. Traphagen claimed that the mountain biker attacked him with his bike after the disagreement and they fell to the ground. During the altercation, he had pulled out a pocket knife and stabbed the mountain biker

### Top Comment:

“ Unlike the alleged victim, he remained at the scene and cooperated with law enforcement...”Uhhhh - Maybe he left the scene because he was bleeding profusely and had to get to the hospital? Odd take...

### Article Summary: 

Video: Christopher Walken Stars in New YT Jeffsy Teaser Video - Pinkbike: The YT Jeffsy with was first teased with a controversial but admittedly effective video teaser campaign back in 2016 and it looks like the German brand might just have trumped it with this latest edition of the bike. Hollywood legend Christopher Walken fronts the video describing his experiences with friendship and Jeffsy while sat in a study. Nothing more, nothing less. It's totally out of left field but I'm definitely a fan. There's no shredding here but we do get some fleeting glimpses of the new bike at the end. I've posted the screengrabs I could get below.We’re born alone, we die alone. And in between we spend our lives looking for something, a connection. That’s all we want. Every once in a while we might find it, in a true friend. Many friendships will come, only to fade as quickly as a firework. But some, a rare and precious few, turn life up to 11 and keep it there. You got to hold on to friends like these because, just like air, you’ll miss them when they’re gone. No one else gets “it” but they do. Cause they know what’s in your soul, your heart, your mind. They can blindside you - come out of nowhere but you’ll know them right away, you’ll click as perfectly as a jack plug into an amp. They’ll know what you’re thinking before you’ve thought it, anticipating your every move. They’ll understand the demons as well as the angels inside of you. Never judging you for it either. And together, you’ll uncage a thrill that makes you surge with life. But don’t be fooled: friendships are not easy. You’ve got to put the effort in and take as good care of

### Top Comment:

YT seems to be really struggling to figure out what to do with the money they were paying Gwin...

### Article Summary: 

SRAM Guide RS Brake - Review - Pinkbike: SRAM's new Guide brake lineup consists of three models with varying degrees of tool-free adjustability, with the middle of the road RS model that's reviewed below foregoing the free-stroke adjustment of the higher-end RSC but retaining a tool-free reach adjustment dial. That omission sees them come in at $149 USD per end, which is about $50 less expensive than the premium model. Want to save a bit more coin? $129 USD gets you the basic R version that still boasts the same reach adjustment but loses the ball bearing lever pivot that's employed in both the RS and RSC versions. All three take advantage of the same four piston caliper, and they can be fitted with the same brake pads as used on Avid's four piston offerings. That leads us to the question of why the Guide brake falls under the SRAM banner rather than the Avid name, with the most obvious answer being that SRAM is looking to separate the Guides from the somewhat potted history of Avid's older offerings. Below, we find out if they've been able to do exactly that. Guide RS Brake Details• Intended use: all-mountain / trail• Four piston caliper• Tool-free reach adjust• MatchMaker X compatible• Lever pivots on ball bearings• Top loading pads• DOT 5.1 fluid• Weight: 385 grams (front system, 160mm rotor)• MSRP: $149 USDWhat's Up Top?The Guide brake's top end looks quite different compared to the Avid offerings that came before, with a revised in-line master cylinder that holds more DOT 5.1 fluid and a reach adjustment dial that has been moved to a new location at the front of the lever. The forged lever blades themselves are a bit shorter as well, but the entire shadow of the master cylinder and lever blade

### Top Comment:

Now with new and improved avid turkey warble sound effects

### Article Summary: 

Video: RockShox's Wireless Reverb AXS Dropper Post Explained - Pinkbike: RockShox Reverb AXSThe Reverb Goes WirelessIf you're going to make a wireless 12-speed drivetrain, you might as well throw some of that technology at your dropper post, right? That's exactly what RockShox have done with the new Reverb AXS that uses an encrypted wireless network in place of the normal Reverb's hydraulic hose. The post's travel is still non-indexed, and it's controlled by a funky, button-style remote, with 100mm, 125mm, 150mm, and 170mm travel options.If this is what the future looks like, the future ain't gonna be cheap; the Reverb AXS will sell for $800 USD when it hits the shelves this coming April. SRAM hasn't released a weight yet, but they say that it's within a few grams of the normal Reverb, so expect it to come in around 650-grams with its remote. Reverb AXS Details• Travel: 100, 125, 150, 170mm• Electronic, wireless design• Re-designed head, clamp• Faster, fixed return speed• SRAM battery, CR2032 in remote• Lengths: 340, 390, 440, 480mm• Sizes: 30.9, 31.6, 34.9mm• Weight: TBA• MSRP: $800 USD• More info: www.sram.com/rockshoxInside the Reverb AXSSo, what exactly is happening when you push the remote's button? And why isn't this thing called the E-verb? I only know the answer to the first question, with the gist being that RockShox has combined existing wireless tech with tiny electric motors and batteries.Let's start up top with the remote, pictured to the right.Without the need to pull any cable or, in the hosed Reverb's case, push some oil, they were free to come up with an entirely new remote. The new AXS ''controller'' (their words, not mine) sees a wide, easy to hit thumb paddle that's tucked up close to the underside of the handlebar so you don't have to unwrap your

### Top Comment:

Why not try and make normal reverbs work first?

### Article Summary: 

First Ride: SRAM's 12-Speed Eagle Drivetrain - Pinkbike: After months of rumors, leaked photos, and plenty of heated internet speculation, it's official: SRAM's new XX1 and X01 1x drivetrains go to 12. Twelve speeds that is - both groups are based around a massive looking, 10-50 tooth cassette. Called 'Eagle', the project initially began with the goal of improving SRAM's current 1x11 offerings, but as the company's engineers dove deeper into their tasks, they realized it was possible to add a 50 tooth cog with only a minor weight penalty, a move that would increase the drivetrain's gear range to 500%. That number is greater than the range of a typical 2x10 drivetrain, effectively squashing the complaints of anyone who'd been hesitant to commit to a single ring drivetrain due to the available gear range. In fact, SRAM is so certain that 1x drivetrains are the way forward that they've disbanded their mountain front derailleur division. Front derailleurs have already become a rarity on most high-end mountain bikes, and they'll be even more of an oddity when the 2017 models debut.It's easy to puff your chest and scoff at a 50-tooth cog as being only for out-of-shape riders, and there's no denying that the dinner plate-sized ring does look odd at first, but Eagle is about more than being able to ride up vertical walls. It's about having a wider gear range, and SRAM encourages riders to choose the chainring size that best suits their needs. For instance, if you're perfectly happy with the climbing gear on a 1x11 setup with a 32-tooth ring and a 10-42 cassette, going with a 36 tooth ring on an 10-50 cassette will feel nearly the same when climbing, but greatly extend the higher end of the cassette, making it much less likely that

### Top Comment:

Nobody needs a fifty tooth cog or twelve gears. This is stupid dumb and unecess.....er.....wait...hold on... nobody told me it was going to be GOLDTAKE M|Y MONEY

### Article Summary: 

Hope Say Their Super Short 155 mm Cranks Are 'The Sweet Spot' - Pinkbike: Last year we covered the surprisingly strong scientific evidence that, despite popular opinion, shorter crank arms don't compromise a rider's power output or pedalling efficiency, and in fact, may offer certain biomechanical advantages when compared to typical 170 or 175 mm cranks.After making shorter cranks for e-bikes, Hope Technology have been experimenting with crank lengths over the last year with staff and athletes, going as short as 140 mm. They say that 155 mm is "the sweet spot" for mountain biking. As a result, a 155 mm version of their Evo crank is now available to buy."The main benefit for gravity orientated riding is it allows you to get a more neutral body position on the bike allowing your hips to rotate to be more forward facing, increasing stability and having greater control of the bike."— Hope TechnologyHope Say the shorter cranks offer the following advantages:• "Body weight remains more centred on the bike increasing stability and making it easier to shift your body weight around."• "Quicker to 'spin up' which can help when transitioning from descending to sudden steep uphill features." (This claim is supported by this study). • "More ground clearance for reduced pedal strikes."• "Lighter and stiffer due to shorter length."Other than the length, the specs remain the same as Hope's other Evo cranks. They use 30 mm diameter axles with axle lengths to suit most bikes from XC, DH, SuperBoost and Fat bikes.Because shorter cranks reduce the overall leverage between the pedal and the tyre, requiring a faster cadence, Hope recommend dropping your chainring size by 2 teeth for every 10mm reduction in crank length. So, if you'd normally run a 34-tooth chainring with a 175 mm crank, you'd want a 30

### Top Comment:

“Lighter and stiffer due to shorter length”This has been my advertising shtick for years!

### Article Summary: 

Pinkbike Poll: What Area of Mountain Bike Technology Needs the Most Improvement? - Pinkbike: Now that the chaos of Eurobike and Interbike has subsided and many of the hot new products for next year have been revealed, it's a good time to take a step back and examine the state of the modern mountain bike. As far as we've come from the era of coaster brakes and rigid forks, there's always room for improvement, although these days technology is so far advanced that new ideas tend to be less disruptive compared to the days when inventions like the suspension fork or hydraulic disc brakes first appeared. DrivetrainElectronically controlled suspension and shifting have arrived, but they're not yet the norm largely due to the sky high cost, and the fact that non-electronic shifting and suspension work so well. 1x drivetrains continue to increase in popularity as more riders see the benefits of ditching the front derailleur, and as frames emerge that have been designed without even the option of mounting a front derailleur. What about gearboxes? That's the cry that comes up whenever drivetrains are mentioned, but although the concept is novel, the weight and added complexity continue to limit the number of options. GeometryBike geometry has seen a pronounced shift over the last few seasons, and the latest crop of all-mountain machines are longer and slacker than ever. Some companies are pushing the boundaries further than others, the Nicolai GeoMetron being the most obvious example, but it does seem like at a certain point the limits will be found – after all, riders still need to be able to reach their handlebars from a seated position, and no one wants to ride a bike that makes it feel like they're stretched out like Superman. Suspension Technology Coil sprung shocks have

### Top Comment:

improve the prices

### Article Summary: 

We're Back! - Pinkbike: And… we’re back. Little internet gremlins saw fit to take Pinkbike offline, but we found the gremlins, we killed the gremlins, and we’re back to regularly scheduled programming.Serious Jake: I’m sorry for a very long outage. We weren’t in the middle of any major changes or adding new features. I’m embarrassed, because you came to Pinkbike for hot (ish) takes and MTB community, and got an error page instead. Despite Levy’s fetish for made-up-words and Henry's comma abuse you’ve stood by us, and today we didn’t deliver.What actually happened: An intern at our domain registrar went on a wee power trip and took us off the internet without warning or recourse. Now we know, and it won’t happen again.What this means for Pinkbike users: Hundreds of thousands of people around the world suffered the indignity of actually having to do the thing they’re paid to do during normal business hours. I’m sorry. Cable routing arguments may now resume.What we’re going to do about it: We’re going to dump the registrar for a younger, less terrible service with better support, because communication is actually what matters in a relationship.Thank you,Jake Moritz, Pinkbike Product Manager

### Top Comment:

PB went down because of cable routing through headsets.

### Article Summary: 

Pinkbike Awards 2015: Suspension Product of the Year Winner - Pinkbike: Suspension Product of the Year Winner Fox Float X2 ShockA wise man once said that geometry is the most important factor when it comes to how well (or how poorly) a bike performs, followed closely by its suspension. That's never been truer than today, and as geometry has evolved to allow us to ride quicker than ever, suspension has also had to develop in order to keep us in control. The three Suspension Product of the Year nominees were RockShox's new Lyrik, a single crown fork that can be had with up to 180mm of travel that's controlled by their Charger damper; Fox's sub-four-pound Factory Series Float that offers heavyweight performance; and the new Float X2 shock, with an internal design that's a major departure from the architecture that Fox has used for their previous shocks.It's the Fox Float X2 that takes the win in 2015, due to its massive and effective range of adjustments, reliable performance, and action that anyone would be hard pressed to tell the difference between it and a coil-sprung shock during a blind test.FOX Float X2 Shock Billed as Fox's “highest performing air shock,” and aimed at gravity-oriented riders, the $595 USD Float X2 has externally adjustable low- and high-speed compression damping, as well as low- and high-speed rebound adjustment. Also, the amount of ramp up at the end of the shock's stroke is also adjustable by sliding off the outer air sleeve and adding or removing volume spacers as needed, all of which makes it Fox's most adjustable mountain bike shock to date. Internally, the X2 employs a twin-tube design, which is exactly what is sounds like: a smaller tube is situated inside a larger tube, with bleed holes strategically situated at the

### Top Comment:

The suspension product of the year should go to the height adjustment on office chairs.  Only they have been able to handle all of these desk jockeys complaining about every single award that Pinkbike has posted.

### Article Summary: 

Fox's Featherweight 32 Step-Cast Fork - First Look - Pinkbike:

### Top Comment:

Is it gluten free ?

### Article Summary: 

MUST WATCH: Brandon Semenuk's ''Revel In The Chaos'' Trailer - Pinkbike: To view this video please enable JavaScript, and consider upgrading to a web browser that supports HTML5 video Brandon Semenuk - Revel In The Chaos - Teaser by revelco Add to Favorites Added to Favorites Views: 137,804 Faves: 765 Comments: 43 REVEL IN THE CHAOSA NEW FILM BYBRANDON SEMENUK & RUPERT WALKERRevel In The Chaos is a darkly cinematic reinvention of the typical mountain bike movie. No timelapse filler shots, no globetrotting helicopter pageantry, no gratuitous 'may as well have been a still photo' slow mo. Revel Co is the brainchild of Brandon Semenuk, reigning FMB World Champion, and Rupert Walker, a true auteur filmmaker. It's not an exaggeration to say this movie features the best freestyle riding ever done on a mountain bike. One rider, one filmmaker, one vision: the next level. Revel In The Chaos premieres August, 2015.Presented By: SRAM Supported By: Trek / PinkbikeCREWDirector: Rupert WalkerOriginal Music: Sonny Parmar Sound Design: Keith White AudioAnimations: Scott Waraniak MENTIONS: @SramMedia / @trek / @rupertwalker / @KeithWhiteAudio

### Top Comment:

We need another season of life behind bars!!!

### Article Summary: 

Shocking! Mountain Bike Stolen At Gunpoint - Pinkbike:

### Top Comment:

What a bunch of muppets!  Imagine their horror when they realise its a 26er.

### Article Summary: 

Update: Sam Hill Confirms 3 More Years with Nukeproof CRC Team - Pinkbike: link="https://www.w3.org/1999/xlink"> View this post on Instagram A post shared by S A M H I L L (@samhill13)”Sorry everyone. Looks like I forgot to say thanks to Chain Reaction Cycles and Nukeproof for the contract extension in my last post. Bring in the next 3 years with the best bike and team.”Fair play Sam!Three-time Enduro World Series champion Sam Hill appears to be hinting at some changes with his long-time sponsor Team Chain Reaction Cycles / Nukeproof. Sam has been with CRC Nukeproof since the 2013 season, winning three overall EWS championships and standing on 15 individual EWS podiums in his time there.The man himself posted this on Instagram earlier.I’d like to say a massive thank you to @chainreactioncycles and @nukeproofbikes for all their support and belief in me over the last 8 years. It’s been an awesome time and we have achieved a lot together. Thank you—Sam Hill link="https://www.w3.org/1999/xlink"> View this post on Instagram A post shared by S A M H I L L (@samhill13)While this is the ususal format for a rider leaving a brand, I suppose technically this isn't announcing his departure, so team fans will have to cross their fingers and hope his next post says "...which is why I'm excited to have signed for another 8 years with Nukeproof CRC!"We reached out to Nukeproof for more information but all they would say is that "The man's a wildcat" and that some more news would be coming soon.Whether he's got a big new deal in the works, he's dialling back the racing, he's fully retiring, or we've been royally trolled, we'll update this as we get more information.

### Top Comment:

Sam Hill doens't retire from Mountain Biking, Mountain Biking retires from Sam Hilling.

### Article Summary: 

Jolanda Neff Criticizes Pauline Ferrand Prevot for 'Stupid Move' at Tokyo Olympics - Pinkbike: We reported yesterday on Mathieu van der Poel's Olympic crash after the 'training ramp' was removed from the Sakura rock drop on the Olympic mountain bike course in Japan and the same feature has made the headlines again today but for completely opposite reasons.An overnight storm left the track slippery so the ramp was put back into the course today, allowing riders to roll the drop again. Longtime rivals Jolanda Neff and Pauline Ferrand-Prevot led the race in the first lap and the pair approached the ramp at high speed, Neff following closely behind Ferrand-Prevot. Just as both were committed to the ramp, Ferrand-Prevot braked before rolling it, while Neff was forced to drop off the side at low speed. link="https://www.w3.org/1999/xlink"> View this post on Instagram A post shared by Squadra Mondo (@squadramondo)Jolanda was unhappy with the maneuver and criticized Ferrand Prevot in her post-race press conference:She was in front of me and we were going at a good decent speed and then she pulled her brakes super hard and I couldn’t do anything. I couldn’t brake and I ended up jumping with no speed at all. I was super lucky that I didn’t crash. It was such a stupid move of hers because it’s really dangerous for the people behind.I don’t know if she knew I was right there behind, but after that, I just thought, ‘I have to get away from her.’ It’s scary because you never know what she’s going to do. It’s not the first time she does something like that, I’m just glad I wasn’t near her anymore, I was glad I was riding on my own and safe.—Jolanda NeffFerrand Prevot then had her own scare 20 seconds later when Neff

### Top Comment:

My take home is that PFP brake checks like a roadie, and Neff has been spending winters hucking big bikes and motos around in the mountains of NC with Luca Shaw.

### Article Summary: 

British Cycling Limits Transgender Women Competing in Female Categories - Pinkbike: Following a nine-month review and consultation, British Cycling has announced that it will not allow transgender women to compete in female categories.The British cycling governing body's updated Transgender and Non-Binary Participation policies from will see any athlete whose sex wasn't assigned female at birth or are a transgender man who is yet to begin hormone therapy having to race in redefined 'Open' categories. Current Men's racing categories will be replaced by this 'Open' category with a 'Female' category remaining across Elite and grassroots racing for riders with a birth sex of female. Previously for transgender women to compete in Women's racing they had to reduce their testosterone levels below 5 nmol/L for at least a year.British Cycling's new rules are not yet in place as it tries to figure out how to implement the policies, but it expects them to be in place by the end of 2023.British Cycling's New Eligibility Criteria:Under our new policy we will implement an ‘Open’ category alongside a ‘Female’ category in British Cycling competitive events. This means that the current men’s category will be consolidated into the ‘Open’ category. Transgender women, transgender men, non-binary people and those whose sex was assigned male at birth will be eligible to compete in the ‘Open’ category. The ‘Female’ category will remain in place for those whose sex was assigned female at birth and transgender men who are yet to begin hormone therapy. Those whose sex was assigned female at birth are also able to compete in the ‘Open’ category if they so wish. Once they have commenced hormone therapy, transgender men will be eligible to compete in the ‘Open’ category only, and should ensure that they continue to adhere to the requirements of UK Anti-Doping. We define

### Top Comment:

That's a win for women's sports.

### Article Summary: 

YT Nabs the Director of Good Times - Pinkbike: It was really only a matter of time until the Director of Good Times would end up with YT. Brett Tippie is now part of the YT Family and takes his place alongside Aaron Gwin, Cam Zink, and Andreu Lacondeguy.Brett Tippie is living proof that Young Talent is not about age, but about attitude. As a family member, his tools of shred will be the TUES, CAPRA, and JEFFSY. The Canadian is a perfect fit for Team Good Times and he is already looking forward to working together:I have lusted after the sexy YT bikes for some time, and after testing them, I was blown away with how plush, stiff and stable they really were with dialed angles and suspension kinematics. It's one of those bikes you feel natural on right away! With sick bikes, a cool punkrock image, and an amazing team of staff and riders I was sold and wanted to be a part of it.—Brett TippieAt 48 years of age, Tippie is not exactly a blank page. Back in the 90s he was already leaving his mark on the sport, as he and his Frorider bros showed that you don’t need shaved legs and lycra onesies to ride bikes. Right from the start Tippie and his boys developed their own style, far away from competitions and results. Cliff drops and steep, technical descents were on the To-Do list instead. As you can imagine, Tippie’s new teammates are stoked on the new addition:YT is living up to their namesake and hiring the hottest Young Talent. Brett Tippie is a future legend and if you don't already know him, you will soon!—Cam ZinkSo stoked to get Tippie as a teammate. YT is killing it. YT is all about the good

### Top Comment:

Thank you everyone.  Like anyone, I'm excited at the prospect of a new job, sinking my teeth into new adventures and moving forward with the next phase of my working life.
I am joining the YT family with a stacked roster of amazing athletes. I know I've gone from one great team to another. YT is a badass, progressive company, that fully supports my efforts to keep on riding and announcing, hosting and attending all the many awesome mountain biking events around the globe! I'd like to thank all my family, friends, sponsors and fans for their support. See you on the trails and here's to good times on bikes!!

### Article Summary: 

Spotted: New Fox 36 (38?) - EWS Zermatt 2019 - Pinkbike: Rumors have been swirling about a new Fox fork, one that will sit in between the 36 and the dual-crown 40, and it looks like that's exactly what Richie Rude has installed on his race bike for the final Enduro World Series race of the season. When we asked Craig Richey, Director of Brand & Product Marketing at Fox about a potential new fork at Eurobike he said, ''A 38 would fit nicely into the FOX naming convention so let the rumours swirl. We’re always working on new suspension products to help riders go faster and push their limits.'' My eyeball calipers aren't calibrated enough to detect a two millimeter difference, but I wouldn't be surprised if those black stanchions measure 38mm. Two millimeters may not seem like much, but it's typically enough to noticeably increase fork stiffness. The lowers are different than the current 36, with an air bleed port on each side similar to what's found on the Fox 40. That feature is used to release any air that gets trapped in the lowers, which can affect the fork's small bump sensitivity. Along with the bleed ports, the lowers also have a pinch single bolt on the drive side to further secure the thru axle. There's no word on the internals, but by all indications the fork still uses the proven Grip2 damper, and has the same externally adjustable high- and low- speed compression and rebound adjustments as the current 36.

### Top Comment:

great, finally a fork stanchion diameter that matches the average yeti owner's waist size.

### Article Summary: 

Must Watch: Brandon Semenuk - Raw 100 V3 - Pinkbike: MENTIONS: @revelco / @rupertwalker / @redbullbike / @Ian-Collins

### Top Comment:

I think this Semenuk kid might have some potential.

### Article Summary: 

Ridden And Rated - Six Dropper Posts - Pinkbike: Do you remember when high-end trail and all-mountain bikes didn't come equipped with dropper seat posts straight from the factory? That feels like it was sometime after the Middle Ages and before the industrial revolution, but it was probably more recent than that. Sure, there will always be riders who will never be convinced and who don't need a dropper post to have fun and feel confident on the descents, but they're probably in the minority these days. Thankfully, there are now a boat load of different dropper posts to pick from, some of them better than others, and all a bit different in design and function. While almost all of them depend on an air spring to bring the seat back up, companies have come up with all sorts of different ways to control their post's travel: some depend on a purely mechanical design, while a bunch of others employ hydraulic cartridges to get the job done. Regardless of how a dropper post works, the bottom line is that it simply needs to work, which is apparently something that took some figuring to do. Many early designs were about as reliable as a Ford Pinto, but to be fair, dropper posts don't burst into flames (just picture how bad that would be.) Durability has improved greatly over the past few years, although it always could be better, and there are now more options than ever to choose from when it comes to dropping your seat and upping the fun factor. Below are six choices that each have their own merits, as well as their own drawbacks. Proven ContendersThe lineup of seat posts below is by no means an all-inclusive list of every model out there, but rather a round-up of

### Top Comment:

Yes!  Finally, Pinkbike, a head to head review!  More of this, PLEASE!!!

### Article Summary: 

Specialized Cuts Global Ambassador Program - Pinkbike: Last week, Sarah Swallow was bikepacking through a rural stretch of Baja California Sur when she got the call: Specialized was terminating her contract that ran through December 2023, effective immediately.Swallow was one of Specialized’s global ambassadors, a loosely-knit team of cyclists who provide content and other services for the brand in exchange for product and a salary. In fact, the Baja bikepacking trip was just the type of adventure where Swallow would have generated some ‘deliverables,’ like photos and video, for Specialized as part of their agreement.However, as of next year, Swallow — along with a handful of other riders — won’t be doing business with Specialized anymore.Swallow said she was told that “the global ambassador budget had been cut to 0, that they were eliminating all global ambassadors, and as of last week they were prepared to resign everyone.”Other athletes, like Steve Fassbinder and Ty Hathaway, who had similar deals with Specialized, corroborated Swallow’s story.“I was told nobody’s going to be saying they’re an ambassador for Specialized any more, from someone who gets a bike and gives it back to someone like us who got a salary for being a good representative and providing content,” Hathaway said. link="https://www.w3.org/1999/xlink"> View this post on Instagram A post shared by Ty Hathaway (@tytanium)The exact number is unknown, but Specialized currently has a wide-ranging ambassador program, with athletes like Swallow, Fassbinder, and Hathaway who earn a salary for content creation all the way down to lay people who, through an application process, get deals on equipment and bikes.Hathaway said he suspects at least 40 people have been significantly impacted by the program cuts.VeloNews reached out to several people at Specialized for details on how the various ambassador programs were being affected and received this statement:

### Top Comment:

am I complete jerk for having little to no sympathy? People in the "real world" lose there jobs everyday due to budget cuts, even those with long standing ties to the companies. These influencers can still be a global ambassadors, and share their stories. They just have to do it on their own bikes.

### Article Summary: 

Is This the New Santa Cruz Nomad? - Pinkbike: The current iteration of the Santa Cruz Nomad debuted back in 2014, ushering in the next generation of pedalable, long travel all-mountain bikes. Now, thanks to a shot supplied by an eagle-eyed reader, it looks like the next version is on the way.This unmarked bike's carbon frame looks like the love child of the current Nomad and a V10, with a split seat tube, and a rocker link that's noticeably longer than the previous version – perhaps in order to eke out even more travel. With the bike flipped upside down it's tough to judge exactly how much standover room there is, but it's not a stretch to imagine that the bike would be designed to work with the latest crop of longer travel dropper posts. It's also nice to see that there's enough room for a full size water bottle in the front triangle. What happens when you combine these two bikes?The image isn't clear enough to suss out all of the details, but that Fox shock looks a little different, with what looks like a much larger rebound dial than the miniscule knob found on the Float X. As far as wheel size goes, I'd put my money on 27.5, but who knows - maybe a monster big wheeler is on the way too.

### Top Comment:

looks identical to something id never buy.

### Article Summary: 

Oh Shit! Grizzly Bear Charges Mountain Bikers - Pinkbike:

### Top Comment:

That bear is probably tired of hearing about enduro

### Article Summary: 

We Went To Taiwan and Started a Bike Company... - Pinkbike: If someone gave you enough money, could you go to Taiwan and start your own bike company? What's it really take to get some bikes built? We went to Taiwan to find out. Check out this video and stay tuned for an extended feature story.Make sure you subscribe to the Pinkbike YouTube channel here

### Top Comment:

That was by far the most insightful and compelling story I've seen on Pinkbike EVER.

### Article Summary: 

Carbon vs Aluminum: Separating Environmental Fact From Fiction in the Frame Materials Debate - Pinkbike: Is aluminum better for the planet? Does carbon fiber's performance live up to its high price? Will my frame end up as ocean fill? Is carbon fiber poisonous to work with? Recently there has been a lot of finger-pointing within the sport, with aluminum’s supporters claiming that the abundant metal’s well established recycling channels make its products more earth friendly than carbon fiber. Some hold that somewhere in Asia, children are slaving away, waist deep in toxic chemicals to produce high-modulus pre-preg so dentists in more developed nations can shave two seconds from their Strava times. Entertaining stuff, for sure. Accurate? Not so much.I've been a manufacturer, I've worked directly with factories in Asia, and as a journalist, I have visited many factories that produce frames and components with both materials. Like all hot topics, the truth can usually be found somewhere in the middle. This feature takes a step back from the hyperbole to compare the benefits and drawbacks of manufacturing mountain bike frames from either carbon fiber or aluminum. When you bought your last mountain bike, did you inadvertently finance its makers to rape and pillage the earth? If you bought your bike new, the correct answer is “yes.” Every part of that bike came out of a hole somewhere on earth. If your bicycle frame is made of carbon, that hole is 12 to 30 inches wide and oil comes out of it. If it is aluminum or steel, well, those holes can be seen from space. But, the journey only begins there. There are emissions created by hauling the materials to where they are needed. Trans-continental pipelines, excavation equipment, trains, long-haul trucks, cargo ships, and oil tankers move raw materials to

### Top Comment:

Without a doubt, the most comprehensive, informative article I've read on this site! Well sourced, in depth with as much detail as necessary that applies well beyond just bikes...those who still throw cans in the trash when the blue bin is 5 steps away are probably due for a full life re-evaluation.I'm proud of myself and all my fellow PB commenters who have no doubt read the entire article before spouting off because we are now better people than when we first clicked on this link. There is no longer any need to post our usual carbon vs Al BS because we all now know the full story and realize there are pluses and minuses to all aspects of each material and can make a well informed decision as to which is the best one for our next bike (or not next bike!).

### Article Summary: 

The Conundrum: More Shocks or More Shovels? - Pinkbike: I’m alone in the woods with a shovel, and I don’t know what to do. I’ve been putting in work to clean up the first rideable trail of the season. I’ve removed the fallen trees and branches, I’ve repaired the drainage, and I’ve raked away the layer of wet leaves glued to the trail. I even shoveled snow from one fifty foot shaded stretch (after such a long U.P. winter I need to ride!). I’ve worked my way down the trail to one of my favorite corners, and I’m frozen with indecision. The harsh weather has eroded (some might say evolved) it into a completely new animal. Near vertical roots now line the inside of this berm like the jaw of some wheel-eating, fork-exploding, iron-toothed monster. I can tell that to ride this turn properly (fast) I need a new bike with more suspension, or I need to smooth out the berm. This little trail isn’t anything crazy, but as I play last year’s laps in my head, I know that it can be so exhilarating. If I managed to string together all the earlier corners just right I’d arrive at this corner in a rush of wind and speed. Just as the trail drops down this tiny foot-tall catch berm carves to the right. Leaning into it my bike goes light. The little knobules of my front Assegai tire do their best to claw for some grip, but there’s just no gravity left to give them the downforce they need. The resulting two-wheel drift across the trail is one of my favorite out-of-control yet in-control feelings. If I float over this berm, it is a guaranteed catastrophic Moto GP ragdoll crash but thankfully… WHAM! The catch berm does its catching,

### Top Comment:

Trails that flow not flow trails.

### Article Summary: 

Ibis Enduro Team Pulls Out of World Cup Racing - Pinkbike: Following Katy Winton's news about her uncertain future the Ibis Racing team has announced it is stepping away from World Cup racing. Ibis Racing has become the first victim of what is expected to be a rough off-season for teams and riders as it has announced it will be pulling out of the EDR World Cups. Alongside the team statement, riders Zakarias Johansen and Cole Lucas have revealed that while they still want to continue racing they have nothing lined up for future seasons yet. There has been no word yet from Raphaela Richter on whether she has managed to secure a ride for 2024. From the rumours we are hearing while Ibis is the first to make this announcement we may see some of the biggest names in the sport also make similar announcements as the future of Enduro World Cup racing hangs in the balance. link="https://www.w3.org/1999/xlink"> View this post on Instagram A post shared by Ibis Cycles Enduro Race Team (@ibisracing)We are at the end of the road for this World Cup season and this will also mark the end of @ibisracing as we know it…It has been a privilege to be a platform for athletes to grow and give them the opportunity to chase their dreams!After numerous podiums, winning the team overall and developing up and comers into world class racers it is now time to say good bye. At least for now.We couldn’t have done any of this without all of you guys so a massive thank you to our supporters, sponsors, riders and staff both past and present. It has been an absolute honour and we hope to be back at the races with you all at some point!— Ibis Racing link="https://www.w3.org/1999/xlink"> View this

### Top Comment:

Can't help but wonder if Chris Ball has destroyed his beautiful creation from 2013 all in the name of "progress" .A stand alone race series without the shackles of a corrupted international body.  A race series that grass roots riders could race on the same track on the same day as their hero's. Incredible venues that sparked as much interest as the results would. A race series that was financially manageable for privateeteers and small teams , never mind the goliaths of the sport.Now reduced to a overly complicated , two tiered sideline in the cycling media  costing teams a fortune, that people  don't seem to care much about any more , shackled by an international body of dumbf*ckery.  Progress.... careful what you wish for  :-(

### Article Summary: 

Pinkbike Poll: How Much Does a Bike's Climbing Performance Matter to You? - Pinkbike: For some riders, climbing is a necessary evil, something that's endured only to reap the reward of a long descent, while others have a more masochistic take, and find enjoyment in the challenge and suffering that accompany a grueling climb. I'll admit, as much as I like bombing downhill, there's also a twisted part of me that doesn't mind grinding uphill for hours at a time, or trying to figure out how to get through a steep puzzling section of trail that's full of slippery roots and rocks. Some of that may be due to my East Coast upbringing – the trails I cut my teeth on were full of punchy ascents, often with a downed log or two to make things even more challenging. Of course, back then I was riding a hardtail with three chainrings up front, a seven or eight-speed cassette in the back, and some sweet Onza bar ends. It's a different world now, one where cassettes are bigger than brake rotors, with enough gear range to get up just about anything. Geometry and suspension designs have evolved as well, and there's no shortage of bikes out there that climb and descend remarkably well. But that doesn't mean that all bikes are alike when it comes to climbing performance – head tube angle, seat tube angle, chainstay length, and the suspension layout of a bike are just a few of the factors that make a difference in how a bike handles. There's no hard and fast rule as to what constitutes a good climber either – a super steep head angle may make the front end of a bike handle very quickly, giving the bike a more energetic feel, but does that

### Top Comment:

There should be a “I ride an E-bike so it doesn’t matter” option and when you select it it automatically deletes your Pinkbike account.

### Article Summary: 

Review: NX Eagle - SRAM's New Affordable 12-Speed Drivetrain - Pinkbike: REVIEW SRAM NX Eagle BY: Daniel SappMany riders were stoked when SRAM launched their 12-speed GX Eagle drivetrain last year. It offered a high level of performance at a more affordable price than its XX1 and X01 Eagle siblings. Now, that technology is available at the NX level with an even lower price tag. SRAM also moves away from the XD driver body for NX, with the 12-speed cassette mating with a standard 8, 9, 10 speed splined SRAM or Shimano driver body - which will further increase compatibility and allow upgrades to a 1x12 system without having to switch drivers.SRAM NX Eagle Details• 1x, 12-speed drivetrain• 11-50 tooth cassette• 8, 9, 10 speed splined driver body compatible• DUB BB compatible• Weight: 2049 grams• Price: $375 USD• Available: September 2018• www.sram.comGX Eagle was half the price of the XX1 Eagle and had similar performance. Priced at only $375 USD, (shifter, derailleur, cassette, cranks, chainring, and chain), the new NX Eagle system is even easier on the wallet and it still performs incredibly well. It does come with a weight increase 202 grams, but the functionality of the group will be difficult to tell apart. The big story with NX is the cassette. Rather than requiring an XD driver body, it mounts on the tried and true splined drivers common to SRAM and Shimano 10-speed freehubs, which are a lot more common and also less expensive. That's good news for companies trying to pack even more value into their entry- to mid-level bikes - this gruppo will likely be a common sight on bikes in that price bracket for 2019. NX Eagle is compatible with all SRAM 12-speed Eagle drivetrains (meaning you can mix and match parts). More compatibility is

### Top Comment:

Look at that, a 12 speed drivetrain compatible with a Shimano freehub! Not even Shimano could pull that off!

### Article Summary: 

Pinkbike Poll: How Do You Feel About eMTBs Today? - Pinkbike: We're seeing more and more e-bikes being released, and they're starting to get past that awkward "What the hell are they?" phase. They're clearly still a contentious issue, but I'm wondering if they're slowly starting to gain acceptance. Clearly, Pinkbike commenters are universally reasonable, rational people with thoroughly thought-through opinions, but perhaps a few of you have softened your stance or changed your mind in the last few years.We've turned of the eMTB filter for this one in order to get slightly less biased results. If you weren't even aware there was a filter, you can read the details here. Also, consider the e-bikes referenced in this poll to be pedal powered, Class 1 models, not ones that have a throttle and don't require any pedaling. Have you ridden a modern eMTB? Yes No Does a lap around the parking lot count? Responses: 17300 Faves: 0 Comments: 0 How do you feel about electric mountain bikes? I wouldn't ride one and would rather nobody did. They're not for me but I'm happy for others to enjoy them. I'd like one but can't afford one yet. I own one and ride it occasionally. I own one and it's my main bike. Responses: 17350 Faves: 0 Comments: 11 Have e-bikes adversely affected your access to local trails? Yes, ebikes have directly led to trail closures. Not really, but there's tension. No. Responses: 17040 Faves: 0 Comments: 11 Bonus section: how do you feel about 29ers these days? How do you feel about 29er mountain bikes? I wouldn't ride one and would rather nobody did. They're not for me but I'm happy for others to enjoy them. I'd like one but can't afford one yet. I own one and ride it occasionally.

### Top Comment:

There's no category for "e-bikes are great, but they're a different thing than mountain bikes and thus should be viewed and regulated separately."

### Article Summary: 

Tested: How Much Slower Are Idler Bikes For Climbing? - Pinkbike: Bikes with a high pivot and an idler pulley are nothing new, but until recently were pretty much confined to downhill and freeride rigs. Now though, following huge success in downhill racing, they're making their way into the enduro and trail bike categories. In fact, a pretty high percentage of the enduro and trail bikes released lately use high pivot suspension.With their rearward axle paths and minimal pedal-kickback, they have advantages when riding down hill, particularly when it comes to reducing harshness over square-edge bumps. But what about climbing? The idler pulley must create some amount of drag, not just to turn the bearing in the pulley, but also to articulate the chain pins as the chain (which is under tension) bends around the idler wheel. Many high-pivot bikes also require a lower guide pulley on the lower chain span to reduce the chain growth there, which could add a little more drag. The question is: how much drag, exactly? And how much slower (if at all) is an idler bike uphill?Crunching The Numbers From Levy's Efficiency Test The first thing that got me intrigued about this question was Mike Levy's Efficiency test from last year's field test. Levy rode all ten bikes - five from the trail bike test and five from the enduro category - up the same hill at an impressive 300W. What struck me is the fact that the two idler bikes (the Actofive P-Train and the Norco Shore) came dead last. The P-Train, which was in the trail bike category and so had faster-rolling control tires, was slower than all the non-idler enduro bikes.The Norco Shore and Actofive P-Train were the two slowest-climbing bikes from last year's field test by some margin.You could be

### Top Comment:

First to comment...probably gonna screw this up. Idle means doing nothing therefore idler pullys do nothing to impact climbing efficiency.

Did not read article first.

### Article Summary: 

The Outlier - The Full Story of the Wild Insolent DH Bike - Pinkbike: THE OUTLIERThe Story of Jean-François Boivin and his Insolent DH BikeWords: Mike LevyPhotos: Resistance BikesNothing wrings out an idea like the passing of time. You can do all the engineering and testing you want, and maybe you'll even speed the process up, but there's no getting around the fact that it takes many, many years - decades or longer, even - for a design to near its full potential. And something funny happens when that point gets near: designs can start to converge and appear quite similar as people learn what works and what doesn't. An obvious example is the mountain bike's distant motorized cousin, the dirt bike; most of us would probably have a difficult time telling modern specimens apart if they shared the same plastic bodywork. One could make the same argument about all sorts of things: internal combustion engines, squash racquets, the common fork and spoon. Oh, and of course the mountain bike. There's a reason that the "Looks like a Session" comment is so pervasive... it's because, well, a hell of a lot of bikes look like a Session.The vertical shock, big ol' rocker link, four-bar layout makes a load of sense, so it's no wonder that many brands employ those basic principles in one way or another. This was happening long before the Session was even a twinkle in Trek's eye, too, don't forget. But as we get closer and closer to there being only a handful of truly different suspension designs out there, albeit being executed in distinct ways, it's the outliers, those who go in a different direction, that stand out more and more.No, an engineer doesn't need to be an artist. This is an initial sketch of the

### Top Comment:

This is what innovation looks like. Not shifting hub standards an irrelevant distance from side to side, not adding a silly fork offset, not an absurdly sized rear cassette... I could go on. But this right here is some outside of the box thinking that actually has some relevant, real world improvement.

### Article Summary: 

14 Riders Receive Fines at the Les Gets World Champs 2022 - Pinkbike: Just like previous World Cups this year, the UCI has handed out more fines after the World Champs with 14 riders failing to "present to the start".After the incredible weekend of racing the UCI announced that it has handed out 14 fines to riders who were announced to race but did not "present to the start". The list of riders includes the likes of Tahnee Seagrave, Tuhoto-Ariki Pene and Oisin O Callaghan. It's interesting to see Tahnee on the list as she shared just before racing kicked off that despite being on the GB team she would not be riding.We have looked through the UCI rules and regulations and while we couldn't find an exact match for this rule breach we did spot this in the specific World Championship rules. Unless prevented by an act of God, a rider once announced as taking the start and who fails to present, shall be liable to a fine of CHF 500 to CHF 5,000. An injury or sickness shall be recognised as an act of God only if the rider is declared incapable of taking the start by the UCI official doctor.— UCIThis seems to fit with the "fail to present to the start" reasoning for the fines from the UCI although it's strange that Tahnee Seagrave who is suffering from concussion symptoms wouldn't have been signed off by a UCI official doctor. We are not sure what fine the riders were given in the wide range of CHF 500 to CHF 5,000 ($523 to $5174) if this is the rule breach that has been applied to the 14 riders.

### Top Comment:

Fuck the UCI

### Article Summary: 

This Tool Takes The Guesswork Out Of Cockpit Setup (With Lasers) - Pinkbike: While bikes have become ever more advanced (and expensive) over the years, it seems increasingly strange that something as fundamental as getting your bars aligned is still done by eye. Even for an experienced mechanic, bringing the bar precisely parallel to the fork crown can take several rounds of trial-and-error. Personally, I'm often left with a nagging doubt that it might be a few degrees off.Dead Naught Tool Co. hopes to change this with their handlebar laser tool. Laser-based tools for aligning handlebars have existed before, but they tend to rely on the front tire as a reference point. This tool straps onto the handlebar and shines two calibrated lasers to project the plane of your handlebar onto the fork. These can be lined up with the fork's crown, arch or axle in order to ensure the bar is straight, before tightening the stem bolts. The tool is the brainchild of pro mechanic, Derek Corbett. "I believe the front tire is a poor thing to use to align the handlebar as tires are rarely straight or in dish," Derek explains.It sits on the handlebar with two machined acetal vee-blocks (which apparently won't scratch the bars). It's powered by two AAA batteries, which should last for 40+ hours of continuous use (over a year of regular bike shop use). Custom electronics mean the laser intensity won't fade over that time.Dead Naught Tool Co. is launching on Kickstarter with a campaign that ends on September 11th. The handlebar alignment tool may just be the first product from the company. "I've got a new tool in the works that will allow for a wide range of adjustments, with one laser-based system," Derek tells me.

### Top Comment:

Nothing wrong with the old school way of doing it:Step 1; loosen stem boltsStep 2; loosen bolts more because they are not loose enoughStep 3; realize bolts are too loose so tighten them upStep 4; straddle bike with one eye closed and twist bars, bar don't move easily because bolts are too tight nowStep 5; twist bars only to over-compensate cause bolts are too tightStep 6; twist bars back the other way only to over-compensateStep 7; get off bike and go around to front and straddle front wheelStep 8; bars look square WTFStep 9; re-straddle bike, nope bars are not squareStep 10; go back to straddle front wheel and over compensate twisting another 3-4 timesStep 11; get back on bike in your 'attack' position to make sure it feels good while wiggling your bars back and forth a bit to make sure they are squareStep 12; bars slip and get mis-aligned whilst doing thisStep 13; &$(# it, get it close and tighten up your stem boltsStep 14; realize you are hyper aware of bars being .0001 degree off and it's screwing with your head for the first 1/2 mileStep 15; ride it like this for 6 months and never think about it againBut maybe it's just me?

### Article Summary: 

Hyper Cam Zink Edition Bikes Available at Walmart - Pinkbike: Last February, Cam Zink, the 2010 FMB World Tour champion known for his massive backflips and hard charging riding style, announced that he had signed on with Hyper Bicycles. Now, bikes bearing his name are available at Walmart, the world’s largest retailer. The hardtail bikes, which sell for $199.97 USD, have 26" wheels, mechanical disc brakes, front suspension and a 1x7 drivetrain with a basic chainguide system.In an interview with Pinkbike last year, Eric Carter, Hyper’s brand manager, said, “We do a lot of business with Walmart, and we’re proud of that. One of Hyper’s main goals is to get more people onto bikes. Not everyone can afford a $1000, $2000 or $4000 bike. I grew up in a household that was struggling to make a buck, to put food on the table. My first bike was a big box bike, and without having that big box bike I may never have found my passion for cycling.”Zink isn't the only professional athlete with his name on a bike at Walmart - snowboarding's favorite redhead, Shaun White, has his own line of 20" BMX bikes, as does Australian BMX rider Steve McCann, but so far Zink is the only mountain biker whose name can be found in the big box retailer's bike department. Although they seem to have gotten off to a slow start, with no new products announced since signing Zink over a year ago, Hyper is still planning on debuting a line of high end bikes at Sea Otter, with slopestyle, downhill, and 27.5” wheeled offerings reported to be in the works.

### Top Comment:

Looks like a Trek Session

### Article Summary: 

Pinkbike Poll: Euro Styling - Pinkbike: The Europeans have taken a lot of flak in the past about their style within the mountain bike industry, especially from the Brits, even though we are part of Europe and come with plenty of our own designer downfalls. In the past, the common notion was that most of the perceived cool products came from the USA: Intense Bicycles, Santa Cruz, Troy Lee, Fox Clothing and a bunch of other cool kids led out by Palmer. The Euros had to take years of lycra related abuse on the chin, especially when donned under huge Dainese body armour. There are still plenty of brands that continue to implement the ugly stick in their design studios, on both sides of the ocean. The MET Parachute I reviewed last year and the resulting comments sparked the idea for this poll. But, there have been many a beauty born in Europe in recent years: the YT Tues carbon won the hearts of many at its inception and I think the Mondraker Foxy was the best looking bike at Eurobike this year. Troy Lee have been styling things up stateside forever, but over in Europe POC, ION and iXS have been fixing up and looking smart over the last few years.Spot the odd one out in the following corners:In the European Corner...In the American Corner...

### Top Comment:

That ellsworth is not helping our case

### Article Summary: 

Pinkbike Poll: How Much Does Your Bike *Actually* Weigh? - Pinkbike: We've run polls before asking how much a bike should weigh and how much weight matters to you, but never a poll on how much the bikes(s) you own actually weigh.While the importance of bike weight is often overstated, it definitely has an effect and most of us would make our bikes lighter if we could. But saving weight is insanely expensive - aside from a few extra bells and whistles, one of the main selling points of a $10,000 bike over a $3,000 bike is a few hundred grams difference in weight.I weigh every bike I test, and I find that most bikes weigh a surprisingly similar amount. If you weigh a load of bikes at a similar price point, with the same intended use and frame size and (crucially) with the same tires, a lot of the variation goes away. But when Matt Beer reviewed the 2022 Santa Cruz Bronson, a 150/160mm-travel bike that weighed 14.1 kg / 31 lbs, he described it as "relatively light". That seemed to get some commenters up in arms, "Since when did 30+ lbs become light lol?"That got me thinking, how much do typical bikes actually weigh in each category?If you own a bike in a category and you know accurately how much it weighs, let us know in the polls below. To make it comparable, tell us the weight without pedals or other accessories. If you only know how much it weighs with pedals, a pair of trail pedals typically weigh about 1 lb / 450 g. How much does your XC bike weigh without pedals? We're talking XC-race bikes (sub-120 mm travel). Less than 20lb / 9.1kg 20lb / 9.1kg 21lb / 9.5kg 22lb / 10kg 23lb / 10.4kg

### Top Comment:

my bike has pedals on it

### Article Summary: 

Who's Going to Win Rampage? - Pinkbike Poll - Pinkbike: The 11th edition of Red Bull Rampage is just around the corner and promises a few new twists including a new location and a much smaller group of competitors—about half as many competitors as in years past. Red Bull pared the invite list down to 21 riders. Every rider who finished in the top 12 at Rampage 2015 got the automatic thumbs up for this round. The remaining nine riders comprise the "Wild-Card" and were chosen by committee. Five alternates were also designated, just in case something goes egg shaped and prevents one of the 21 from saddling up for the main event.So, here’s the question: Who do you think is going to walk away the actual winner? We've listed all 26 of them. Take your pick. Who's going to win Red Bull Rampage in 2016? Red Bull has pared the competitor list down to 21 riders--about half as many as in 2015. We've listed them here, as well as five designated "alternate" riders. Take your pick. Kurt Sorge Andreu Lacondeguy Graham Agassiz Brandon Semenuk Thomas Genon Cam Zink Darren Berrecloth Brendan Fairclough Sam Reynolds Remy Metailler Kyle Strait Pierre-Edouard Ferry Antoine Bizet Logan Binggeli James Doerfling Conor MacFarlane Tyler McCaul Kyle Norbraten Brett Rheeder Carson Storch Tom Van Steenbergen Bas Van Steenbergen Mitch Chubey Ryan Howard Louis Reboul Ethan Nell Responses: 17735 Faves: 0 Comments: 9 MENTIONS: @vernonfelton

### Top Comment:

I don't know who will win, but I know for sure it won't be the best run.

### Article Summary: 

Video: Claudio's Best Of Course Previews - Pinkbike: For more Red Bull related content visit redbull.com/bike.MENTIONS: @redbullbike, @SCOTT-Sports

### Top Comment:

GO Claudio GO ! If you want Claudio, Tippie and Rob to comment the next Crankworx, click on Like

### Article Summary: 

Lazer Revolution Helmet - Review - Pinkbike: And now for something a bit different. There are loads of trail and all-mountain helmets (or whatever you want to call them) on the market, all of them offering added protection and a different style compared to the pure cross-country lids that you see on racers' heads, but Lazer's $160 USD Revolution trail helmet takes protection and style to new places. The Revolution sports a pretty unique shape, and it also comes with removable ear guards, making it a helmet for those who don't mind standing out from their buddies.The Revolution's shell features twenty-three vents to let air enter and escape, and, like many designs on the market, Lazer has incorporated channels between the rider's head and the shell that further help warm air to be replaced by cooler air that enters at the front of the helmet. Hidden inside of the EPS foam is their Rigidity Brace System, which the company says is a lot like a roll cage, but for your brain. It consists of a thin plastic frame that Lazer builds the helmet's EPS foam shell around, and they claim that it helps to keep broken pieces of the shell together in the event of a major impact. I did my best to avoid testing his aspect of the Revolution.Revolution Details• Intended use: trail / enduro • Goggle storage under visor • Multi-position visor • Twenty-three vents• Lazer's ATS retention system • Removeable ear protection• SMS camera / accessory mounting • CE, CPSC, AS certified• Sizes: S, M, L• Weight: 424 grams (medium, w/o ear gaurds)• MSRP: $160 USD Lazer has built-in a clever breakaway accessory mount that they say has been fully crash-tested with cameras mounted on it. It's a two-position mount that's held onto the shell by way

### Top Comment:

Good thing it has those ear guards so you won't hear everyone laughing at you while you wear it

### Article Summary: 

Pinkbike Poll: Who Will Win the 2016 DH World Champs? - Pinkbike: This is it: The World Cup season is a wrap, no need to play it safe for overall glory. One run, all on the line. One monstrous bike and body bashing mountain to tame. I'm voting with my pictures:Junior Women Who Will Win the Val di Sole World Champs? - Junior Women Samantha Kingshill Sian A'Hern Beatrice Migliorini Flora Lesoin Alessia Missiaggia Eva Battolla Melanie Chappaz Aston Tutt Bianca Alba Aracil Shania Rawson Responses: 4683 Faves: 0 Comments: 0 Junior Men Who Will Win the Val di Sole World Champs? - Junior Men Finnley Iles Gaeten Vige Jackson Frew Elliot Heap Sylvain Cougoureux Matt Walker Remy Morton Nikolas Nestoroff Magnus Manson Steven Ceballos Christopher Philogene Simon Read Moritz Ribovich Responses: 9330 Faves: 0 Comments: 6 Women Who Will Win the Val di Sole World Champs? - Women Rachel Atherton Manon Carpenter Tracey Hannah Tahnée Seagrave Veronika Widmann Emilie Siegenthaler Carina Cappellari Eleonora Farina Jana Bartova Marine Cabirou Mariana Palomo Salazar Miranda Miller Myriam Nicole Responses: 11796 Faves: 0 Comments: 1 Men Who Will Win the Val di Sole World Champs? - Men Loic Bruni Aaron Gwin Troy Brosnan Danny Hart Greg Minnaar Remi Thirion Connor Fearon Marcelo Gutierrez Josh Bryceland Slawomir Lukasik Michael Hannah Florent Payet Johannes Fischbach George Brannigan Jure Zabjek Greg Williamson Luca Shaw Loris Vergier Laurie Greenland Gee Atherton Mark Wallace David Trummer Brook Macdonald Brendan Fairclough Adam Brayton Responses: 13747 Faves: 0 Comments: 0

### Top Comment:

Gee Atherton, because he rides a lot with his sister.

### Article Summary: 

Injury Update - Sam Hill - Pinkbike: Following the news that Sam Hill wouldn't ride in the first round of the 2015 World Cup in Lourdes due to an old injury, it has been announced that the initial problem was worse than both Sam and the team thought. Earlier today Sam took to Instagram and told followers he'd had surgery not long after flying back from France:So I just wanted to let everyone know the latest on my shoulder injury. I got some scans last week and found out the damage was a lot worse than I originally thought. My doctor got me in straight away yesterday for an operation and I am now on the mend. It's not how I had hoped to start the season out but I will be back faster and more motivated than before. Just want to thank all my amazing sponsors, my family and my fans for all your support. - Sam HillUnfortunately, this means Sam will be out for the next few races. We'll hopefully see him back in action later in the season. We spoke to team manager, Nigel Page to find out how Sam is doing and when he's expected to be back on the bike:Sam has had surgery and as far as I know it went well so it's now just 6 weeks of recovery for Sam, and then another 6 weeks or so of rehab. Sam will be trying to maintain his great fitness he has worked on over the winter as soon as possible and his goal is to be 100% for World Championships in Andorra which is one of Sam's main goals for 2015. Depending on how his recovery is and the strength in his shoulder, Sam wants to try and make it back to racing for

### Top Comment:

Sam Heal.

### Article Summary: 

Woman Arrested For Setting Traps On Trail - Pinkbike: Article Source: Global News - BCTwo mountain bikers, who use the North Vancouver trails regularly, took it upon themselves last December to purchase, install and monitor security cameras in the hopes of catching someone who was intentionally setting up barricades on the trails.Between Aug. 1 and Dec. 29, 2014, the bikers noticed obstructions on the trails, which at times, were dangerous for them and other bikers.A 64-year-old woman has now been criminally charged for allegedly setting up logs and rocks on the biking trails, with the intention to obstruct mountain bikers. She was caught numerous times on the hidden cameras, appearing to intentionally lay logs, branches and rocks on the Quarry and Lower Skull trails.North Vancouver RCMP arrested the woman on Sunday, Jan. 4 at 5 a.m. at the head of the Quarry Trail.She has been released with conditions to not attend or go near any of the biking trails tampered with. Police are requesting criminal charges for setting a trap and mischief to property.These are serious charges – these are public trails and one should not interfere with the lawful enjoyment of the trails and set up traps or obstacles to potentially endanger the lives of people using them, said Cpl. Richard De Jong, spokesperson for the North Vancouver RCMP.Fortunately no one was seriously hurt or injured in these incidents and the accused is set to appear in court on Feb. 4.Title image by CCVL.

### Top Comment:

Crazy ol bat. Laying logs to test the capabilitys of 29ers

### Article Summary: 

Carbon Conundrum - Pole Bicycles Ditch Their Plastic Project - Pinkbike: Pole Bicycles is a new brand that has gained a huge amount of interest over a very short period of time, due to either appearing with a bike that met the mode of extremely long, low, and slack at the right time, or being part of pushing that movement. The brand's Finnish founder, Leo Kokkonen, showed me some renderings of a carbon version of the 29'' wheeled Evolink 140mm that I tested earlier this year, followed by a scale 3D printed model. He then headed full steam ahead to a carbon factory in China to sign-off on the project.He was excited about going carbon, like many brands are—the lure of lighter, stiffer, stronger, less limitation and poor ethics. Hang on... touting a product as unethical isn't something we hear in the marketing brochures and I am not here to say one way or another what I think of this material; industry stalwarts like Max Commençal and Gavin Vos (of Spank and IXS clothing) have been vocal in the past about sticking with aluminum production for various reasons, and there are some clear up, and downsides to this black art. The following is a short interview with Leo on what he found in China and how that affected his decision to cancel the carbon project. You showed me a sneak peek of renderings of the carbon Pole project earlier this year, but how much time and effort did you invest in that? Our goal is to create bikes that ride amazingly good. We started with the kinematics and geometry. Second, we choose the material that is strong enough and gives the best feeling to the ride. The third most important aspect for us is the aesthetics. We started the process

### Top Comment:

Probably the best reasons for me to not choose a carbon bike or components. Hats off to you guys for having a sense of ethical business.

### Article Summary: 

American Tariffs on Chinese-Made Goods Threaten to Increase Prices for the US Bike Industry - Pinkbike: In a continued dispute of escalating trade tariffs between two of the world's major economic powers, the Trump administration has threatened to impose tariffs on a further 200 billion dollars worth of Chinese goods that includes bikes and bike parts from tyres, tubes, frames, forks, wheels and spokes to cables, pedals, saddles and much more, BRAIN (Bicycle Retailer and Industry News) reported earlier last month.The Trump administration claims this retaliatory tariff is in response to China's decision to impose tariffs on US goods. Bike Europe has reported that the Chinese government will not tolerate blackmail from the American adminsitration and that they would respond in kind."In light of China’s decision to respond to the investigation by imposing duties on U.S. goods, the Trade Representative proposes a modification of the action taken in this investigation. The proposed modification is to maintain the original $34 billion action and the proposed $16 billion action, and to take further action in the form of an additional 10 per cent ad valorem duty on products of China with an annual trade value of approximately $200 billion." - Office of the U.S. Trade Representative.The US government is currently discussing and taking comments on the implications of these tariffs from key industry figures who are campaigning for the tariffs to be dropped or removed altogether until the 17th of August. There will be a public hearing about the tariffs on August 20-23.For a full list of every product that could be affected by the tariffs, click here.

### Top Comment:

On behalf of all Americans, I'm sorry world.Obama warned Xi Jinping about Trump's seriousness over tariffs. Xi's response was simply, if the world plunges into economic devastation over a trade spat, history will show who is at fault.Trump has no idea what he's doing. We're already paying for it in the U.S. including the biggest reversals of public land protection in Utah, loosening of environmental regulations and oversight, loss of net neutrality, next year healthcare premiums are going to skyrocket (Trump sabotaging the ACA), and the Republicans and Trump are aiming to gut medicaid, medicare, Social Security in order to pay for the massive tax cuts aimed at the wealthy and corporations... oh and they're looking into slashing capital gains taxes as well....Once again, I apologize to the world for this racist, child rapist and overall f*cking idiot conman a minority of our population voted for.

